{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/gw2w2w-static/data/langs.js","app.js","node_modules/gw2w2w-static/data/objective_labels.js","node_modules/gw2w2w-static/data/objective_map.js","node_modules/gw2w2w-static/data/objective_meta.js","node_modules/gw2w2w-static/data/objective_names.js","node_modules/gw2w2w-static/data/objective_types.js","node_modules/gw2w2w-static/data/objectives_v2.js","node_modules/gw2w2w-static/data/objectives_v2_de.js","node_modules/gw2w2w-static/data/objectives_v2_en.js","node_modules/gw2w2w-static/data/objectives_v2_es.js","node_modules/gw2w2w-static/data/objectives_v2_fr.js","node_modules/gw2w2w-static/data/world_names.js","node_modules/gw2w2w-static/index.js","node_modules/lodash/index.js","../src/Overview/Matches/Match.js","../src/Overview/Matches/MatchWorld.js","../src/Overview/Matches/index.js","../src/Overview/Worlds/index.js","../src/Overview/index.js","../src/Tracker/Log/Entries.js","../src/Tracker/Log/Tabs.js","../src/Tracker/Log/index.js","../src/Tracker/Maps/index.js","../src/Tracker/Scoreboard/Holdings.js","../src/Tracker/Scoreboard/World.js","../src/Tracker/Scoreboard/index.js","../src/Tracker/index.js","../src/app.js","../src/common/Icons/Pie.js","../src/common/Icons/Sprite.js","../src/common/Langs/LangLink.js","../src/common/Langs/index.js","../src/common/icons/Arrow.js","../src/common/icons/Objective.js","../src/common/icons/Sprite.js","../src/common/layout/NavbarHeader.js","../src/lib/api.js","../src/lib/data/overview.js","../src/lib/data/tracker/guilds.js","../src/lib/data/tracker/index.js","../src/lib/date.js","../src/lib/static/index.js","../src/lib/trackerTimers.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","en","sort","slug","label","link","name","de","es","fr",2,"id","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","key","abbr","mapIndex","color","sections","groupType","objectives","type","timer","map","d","w","value","_","indexBy","chain","mapValues","./objectives_v2_de","./objectives_v2_en","./objectives_v2_es","./objectives_v2_fr","lodash","sector_id","map_type","map_id","coord","marker","1001","region","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2101","2102","2103","2104","2105","2201","2202","2203","2204","2205","2206","2207","2301","langs","worlds","objectives_v2","objective_names","objective_types","objective_meta","objective_labels","objective_map","./data/langs","./data/objective_labels","./data/objective_map","./data/objective_meta","./data/objective_names","./data/objective_types","./data/objectives_v2","./data/world_names","global","baseCompareAscending","other","valIsNull","valIsUndef","undefined","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","order","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","actions","this","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","reverse","outer","iterIndex","data","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","has","mapGet","mapHas","mapSet","SetCache","values","hash","nativeCreate","set","Set","push","cacheIndexOf","cache","isObject","cachePush","add","arrayConcat","othIndex","othLength","Array","source","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","splice","baseRandom","min","max","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","prototype","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","nativeCeil","slice","createPartialWrapper","createRound","methodName","Math","number","precision","pow","createSortedIndex","mergeData","baseSetData","arrValue","othValue","boolTag","dateTag","errorTag","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","realNames","otherFunc","target","pairs","getNative","isNative","transforms","size","input","Object","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","merge","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","replace","rePropName","match","quote","reEscapeChar","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","zipObject","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","wrapped","wrapperToString","wrapperValue","every","filter","findWhere","find","includes","isString","pluck","reject","sample","toArray","rand","shuffle","some","sortBy","sortByOrder","where","after","temp","before","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","now","delayed","remaining","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","memoize","resolver","memoized","get","Cache","negate","once","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","propertyIsEnumerable","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isFinite","isMatch","isNaN","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","lt","lte","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","parseInt","radix","trim","nativeParseInt","reHasHexPrefix","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","constant","matchesProperty","mixin","isObj","methodNames","noConflict","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","idCounter","augend","addend","sum","defaults","pick","contextProps","Date","Number","String","arrayProto","objectProto","stringProto","toString","WeakMap","ceil","floor","nativeIsArray","nativeKeys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reEvaluate","baseEachRight","count","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","wrapperConcat","at","countBy","findLast","forEach","forEachRight","groupBy","invoke","isProp","partition","reduce","reduceRight","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","modArgs","partial","partialRight","rearg","assign","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","omit","camelCase","word","toLowerCase","kebabCase","padLeft","padRight","snakeCase","startCase","method","methodOf","round","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","concat","run","toJSON","valueOf","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","0","A","B","C","D","E","F","b","c","v","x","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","window","moduleExports","define","amd","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","descriptor","defineProperty","protoProps","staticProps","_react","_react2","_MatchWorld","_MatchWorld2","_libStatic","WORLD_COLORS","Match","_React$Component","shouldComponentUpdate","nextProps","isNewMatchData","isNewLang","lastmod","lang","render","_props","createElement","className","worldKey","worldId","world","component","showPie","PropTypes","isRequired","Component","./../../lib/static","./MatchWorld","_commonIconsPie","_commonIconsPie2","_ref","href","scores","numeral","format","rowSpan","./../../common/Icons/Pie","_lodash","_lodash2","_Match","_Match2","loadingHtml","style","paddingLeft","./Match","getLastmod","acc","setPageTitle","title","document","join","_libDataOverview","_libDataOverview2","_Matches","_Matches2","_Worlds","_Worlds2","REGIONS","Overview","dao","onMatchData","state","nextState","componentWillMount","componentDidMount","init","componentWillReceiveProps","componentWillUnmount","close","_this","regionId","setState","./../lib/data/overview","./Matches","./Worlds","getObjectiveDirection","objective","baseId","split","meta","_libStatic2","objectivesMeta","direction","byType","typeFilter","entry","byMapId","mapFilter","mapId","_moment","_moment2","_commonIconsSprite","_commonIconsObjective","_commonIconsObjective2","_commonIconsArrow","_commonIconsArrow2","_ref2","guilds","log","owner","expires","isAfter","diff","lastFlipped","fromNow","lastClaimed","isValid","guild","src","./../../common/icons/Arrow","./../../common/icons/Objective","./../../common/icons/Sprite","_classnames","_classnames2","_commonIconsSprite2","maps","_ref$mapFilter","_ref$typeFilter","handleMapFilterClick","handleTypeFilterClick","tab","active","onClick","children","mapsMeta","mm","matchMap","check","_Entries","_Entries2","_Tabs","_Tabs2","LogContainer","castle","keep","tower","camp","toggleType","./Entries","./Tabs","getMapObjectivesMeta","mapCode","om","m","MapTracker","mapMeta","Scoreboard","ticks","holdings","deaths","kills","MapSections","_ref3","_ref4","section","ix","map-section","solo","geo","Objective","_ref5","objectiveId","oMeta","mo","list-unstyled","track-objective","fresh","expiring","expired","isBefore","moment","typeQuantity","typeIndex","./../../common/Icons/Sprite","_numeral","_numeral2","_Holdings","_Holdings2","Loading","height","fontSize","lineHeight","score","tick","./Holdings","getWorldsProps","red","blue","green","_World","_World2","worldsProps","worldProps","./World","langSlug","worldName","getLog","getNewClaims","knownGuilds","_libDate","_libTrackerTimers","_libDataTracker","_libDataTracker2","_Scoreboard","_Scoreboard2","_Maps","_Maps2","_Log","_Log2","updateTimeInterval","LoadingSpinner","Tracker","__mounted","__timeouts","__intervals","dataListeners","onMatchDetails","onGuildDetails","hasData","setDate","setInterval","setWorld","isNewSecond","isSame","clearInterval","_this2","setImmediate","unknownGuilds","lookup","./../lib/data/tracker","./../lib/date","./../lib/trackerTimers","./Log","./Maps","./Scoreboard","attachRoutes","_page2","redirectPage","ctx","_reactDom2","App","params","getElementById","click","popstate","dispatch","hashbang","decodeURLComponents","destination","redirect","getWorldFromSlug","worldSlug","eml","chunks","addr","$","el","replaceWith","text","_reactDom","_page","_commonLangs","_commonLangs2","_commonLayoutNavbarHeader","_commonLayoutNavbarHeader2","_Overview","_Overview2","_Tracker","_Tracker2","hasWorld","Handler","textAlign","./Overview","./Tracker","./common/Langs","./common/layout/NavbarHeader","./lib/static","getImageSource","INSTANCE","stroke","width","getClassname","linkLang","getLink","_LangLink","_LangLink2","./LangLink","getArrowSrc","_ref$color","getMatchByWorldSlug","_ref$success","success","_ref$error","error","_ref$complete","_jQuery2","ajax","url","getMatchByWorldId","_ref2$success","_ref2$error","_ref2$complete","getGuildById","guildId","_ref3$success","_ref3$error","_ref3$complete","_jQuery","getInterval","URL_API_MATCHES","OverviewDataProvider","listeners","__listeners","__getData","__onMatchData","__setDataTimeout","interval","_interopRequireWildcard","newObj","getGuildDetailsFromQueue","cargo","onComplete","api","onGuildData","onData","guild_id","guild_name","_async","_async2","_libApi","NUM_QUEUE_CONCURRENT","LibGuilds","__asyncGuildQueue","queue","onDataListener","toQueue","./../../api","getMatchWorld","_guilds","_guilds2","_libApi2","__langSlug","__worldSlug","__worldId","getMatchWorlds","j","__onMatchDetails","__rescheduleDataUpdate","refreshTime","./../../static","./guilds","dateNow","add5","inDate","_baseDate","getWorldLink","enhanceObjectives","getMapsMeta","getObjectiveGeo","eb","bl2","getObjectiveMeta","_gw2w2wStatic","_gw2w2wStatic2","objectivesGeo","gw2w2w-static","update","remoteOffset","cb","timeLocal","timeRemote","$timers","$countdowns","$relatives","async","parallel","updateRelativeTimers","updateCountdownTimers","relatives","updateRelativeTimeNode","countdowns","updateCountdownTimerNode","next","$el","timestamp","attr","offsetTimestamp","timestampMoment","timestampRelative","twitterShort","buffTime","msRemaining","msElapsed","isVisible","highliteTime","isExpired","isActive","isHighlighted","abs","isFresh","timerText","$objective","closest","hasClassHighlight","hasClass","hasClassFresh","addClass","removeClass"],"mappings":"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,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,iBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,eACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,iBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,iBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,yBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,iBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,aACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,aACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,aACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,aACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,aACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,aACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,yBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,MACA,SAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,SAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,MACA,SAGApG,GAAA,WACAL,KAAA,yBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,+BACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,2BACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,MACA,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,KACA,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,MACA,WAGApG,GAAA,WACAL,KAAA,sBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,6BACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,qCACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,iCACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA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ACA,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,sBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,uBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,iBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,uBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,iBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,wBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,uBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,SACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,SACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,SACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,SACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,SACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,SACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,eACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,MACA,SAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,SAGApG,GAAA,WACAL,KAAA,iBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,MACA,SAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,MACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,KACA,WAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,MACA,WAGApG,GAAA,WACAL,KAAA,uBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,UACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,UACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OAC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WAGApG,GAAA,WACAL,KAAA,sBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,uBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,wBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,sBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,iBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,iBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,sBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,0BACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,6BACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,uBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,uBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,WACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,WACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,WACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,WACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,WACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,WACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,iBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,2BACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,MACA,SAGApG,GAAA,WACAL,KAAA,2BACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,SAGApG,GAAA,WACAL,KAAA,6BACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,MACA,SAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,wBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,+BACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,MACA,WAGApG,GAAA,WACAL,KAAA,wBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,KACA,WAGApG,GAAA,WACAL,KAAA,uBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,MACA,WAGApG,GAAA,WACAL,KAAA,0BACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,sBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,wBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,6BACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,sBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,0BACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,YACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,YACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,YACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,QACAL,KAAA,cACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KAEAnG,GAAA,QACAL,KAAA,mBACAsG,UAAA,IACAf,KAAA,QACAgB,SAAA,SACAC,OAAA,GACAC,OACA,QACA,WAGApG,GAAA,QACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KAEAnG,GAAA,QACAL,KAAA,uBACAsG,UAAA,IACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KAEAnG,GAAA,QACAL,KAAA,wBACAsG,UAAA,IACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KAEAnG,GAAA,QACAL,KAAA,uBACAsG,UAAA,IACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KAEAnG,GAAA,OACAL,KAAA,UACAsG,UAAA,IACAf,KAAA,OACAgB,SAAA,SACAC,OAAA,GACAC,OACA,QACA,SAGApG,GAAA,QACAL,KAAA,kBACAsG,UAAA,IACAf,KAAA,QACAgB,SAAA,SACAC,OAAA,GACAC,OACA,QACA,WAGApG,GAAA,OACAL,KAAA,gBACAsG,UAAA,IACAf,KAAA,OACAgB,SAAA,SACAC,OAAA,GACAC,OACA,QACA,WAGApG,GAAA,QACAL,KAAA,kBACAsG,UAAA,IACAf,KAAA,QACAgB,SAAA,SACAC,OAAA,GACAC,OACA,QACA,WAGApG,GAAA,QACAL,KAAA,aACAsG,UAAA,IACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KAEAnG,GAAA,OACAL,KAAA,iBACAsG,UAAA,IACAf,KAAA,OACAgB,SAAA,SACAC,OAAA,GACAC,OACA,QACA,WAGApG,GAAA,QACAL,KAAA,SACAsG,UAAA,IACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KAEAnG,GAAA,SACAL,KAAA,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,KACAC,OACA,MACA,WAGApG,GAAA,WACAL,KAAA,cACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,YACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,sBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,uBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,sBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,uBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,yBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,eACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,iBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,cACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,cACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,cACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,cACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,cACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,cACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,sBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,MACA,SAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,SAGApG,GAAA,WACAL,KAAA,sBACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,MACA,SAGApG,GAAA,WACAL,KAAA,kBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,gBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,sBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,MACA,WAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,KACA,WAGApG,GAAA,WACAL,KAAA,2BACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,MACA,WAGApG,GAAA,WACAL,KAAA,qBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,iBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,OACA,WAGApG,GAAA,WACAL,KAAA,mBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,6BACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,sBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,0BACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,cACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,cACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,YACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,WACAL,KAAA,cACAsG,UAAA,KACAf,KAAA,QACAgB,SAAA,WACAC,OAAA,KACAC,OACA,QACA,WAGApG,GAAA,QACAL,KAAA,iBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KAEAnG,GAAA,QACAL,KAAA,mBACAsG,UAAA,IACAf,KAAA,QACAgB,SAAA,SACAC,OAAA,GACAC,OACA,QACA,WAGApG,GAAA,QACAL,KAAA,oBACAsG,UAAA,KACAf,KAAA,OACAgB,SAAA,YACAC,OAAA,KAEAnG,GAAA,QACAL,KAAA,iBACAsG,UAAA,IACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KAEAnG,GAAA,QACAL,KAAA,sBACAsG,UAAA,IACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KAEAnG,GAAA,QACAL,KAAA,sBACAsG,UAAA,IACAf,KAAA,OACAgB,SAAA,WACAC,OAAA,KAEAnG,GAAA,OACAL,KAAA,cACAsG,UAAA,IACAf,KAAA,OACAgB,SAAA,SACAC,OAAA,GACAC,OACA,QACA,SAGApG,GAAA,QACAL,KAAA,kBACAsG,UAAA,IACAf,KAAA,QACAgB,SAAA,SACAC,OAAA,GACAC,OACA,QACA,WAGApG,GAAA,OACAL,KAAA,kBACAsG,UAAA,IACAf,KAAA,OACAgB,SAAA,SACAC,OAAA,GACAC,OACA,QACA,WAGApG,GAAA,QACAL,KAAA,mBACAsG,UAAA,IACAf,KAAA,QACAgB,SAAA,SACAC,OAAA,GACAC,OACA,QACA,WAGApG,GAAA,QACAL,KAAA,eACAsG,UAAA,IACAf,KAAA,QACAgB,SAAA,UACAC,OAAA,KAEAnG,GAAA,OACAL,KAAA,kBACAsG,UAAA,IACAf,KAAA,OACAgB,SAAA,SACAC,OAAA,GACAC,O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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\r\n\t\"en\": {\r\n\t\t\"sort\": 1,\r\n\t\t\"slug\": \"en\",\r\n\t\t\"label\": \"EN\",\r\n\t\t\"link\": \"/en\",\r\n\t\t\"name\": \"English\"\r\n\t},\r\n\t\"de\": {\r\n\t\t\"sort\": 2,\r\n\t\t\"slug\": \"de\",\r\n\t\t\"label\": \"DE\",\r\n\t\t\"link\": \"/de\",\r\n\t\t\"name\": \"Deutsch\"\r\n\t},\r\n\t\"es\": {\r\n\t\t\"sort\": 3,\r\n\t\t\"slug\": \"es\",\r\n\t\t\"label\": \"ES\",\r\n\t\t\"link\": \"/es\",\r\n\t\t\"name\": \"Español\"\r\n\t},\r\n\t\"fr\": {\r\n\t\t\"sort\": 4,\r\n\t\t\"slug\": \"fr\",\r\n\t\t\"label\": \"FR\",\r\n\t\t\"link\": \"/fr\",\r\n\t\t\"name\": \"Français\"\r\n\t}\r\n};\r\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\r\n\t\"en\": {\r\n\t\t\"sort\": 1,\r\n\t\t\"slug\": \"en\",\r\n\t\t\"label\": \"EN\",\r\n\t\t\"link\": \"/en\",\r\n\t\t\"name\": \"English\"\r\n\t},\r\n\t\"de\": {\r\n\t\t\"sort\": 2,\r\n\t\t\"slug\": \"de\",\r\n\t\t\"label\": \"DE\",\r\n\t\t\"link\": \"/de\",\r\n\t\t\"name\": \"Deutsch\"\r\n\t},\r\n\t\"es\": {\r\n\t\t\"sort\": 3,\r\n\t\t\"slug\": \"es\",\r\n\t\t\"label\": \"ES\",\r\n\t\t\"link\": \"/es\",\r\n\t\t\"name\": \"Español\"\r\n\t},\r\n\t\"fr\": {\r\n\t\t\"sort\": 4,\r\n\t\t\"slug\": \"fr\",\r\n\t\t\"label\": \"FR\",\r\n\t\t\"link\": \"/fr\",\r\n\t\t\"name\": \"Français\"\r\n\t}\r\n};\r\n\n},{}],2:[function(require,module,exports){\nmodule.exports = {\r\n\t\"1\": {\"id\": \"1\", \"en\": \"Overlook\", \"fr\": \"Belvédère\", \"es\": \"Mirador\", \"de\": \"Aussichtspunkt\"},\r\n\t\"2\": {\"id\": \"2\", \"en\": \"Valley\", \"fr\": \"Vallée\", \"es\": \"Valle\", \"de\": \"Tal\"},\r\n\t\"3\": {\"id\": \"3\", \"en\": \"Lowlands\", \"fr\": \"Basses terres\", \"es\": \"Vega\", \"de\": \"Tiefland\"},\r\n\t\"4\": {\"id\": \"4\", \"en\": \"Golanta Clearing\", \"fr\": \"Clairière de Golanta\", \"es\": \"Claro Golanta\", \"de\": \"Golanta-Lichtung\"},\r\n\t\"5\": {\"id\": \"5\", \"en\": \"Pangloss Rise\", \"fr\": \"Montée de Pangloss\", \"es\": \"Colina Pangloss\", \"de\": \"Pangloss-Anhöhe\"},\r\n\t\"6\": {\"id\": \"6\", \"en\": \"Speldan Clearcut\", \"fr\": \"Forêt rasée de Speldan\", \"es\": \"Claro Espeldia\", \"de\": \"Speldan Kahlschlag\"},\r\n\t\"7\": {\"id\": \"7\", \"en\": \"Danelon Passage\", \"fr\": \"Passage Danelon\", \"es\": \"Pasaje Danelon\", \"de\": \"Danelon-Passage\"},\r\n\t\"8\": {\"id\": \"8\", \"en\": \"Umberglade Woods\", \"fr\": \"Bois d'Ombreclair\", \"es\": \"Bosques Clarosombra\", \"de\": \"Umberlichtung-Forst\"},\r\n\t\"9\": {\"id\": \"9\", \"en\": \"Stonemist Castle\", \"fr\": \"Château Brumepierre\", \"es\": \"Castillo Piedraniebla\", \"de\": \"Schloss Steinnebel\"},\r\n\t\"10\": {\"id\": \"10\", \"en\": \"Rogue's Quarry\", \"fr\": \"Carrière des voleurs\", \"es\": \"Cantera del Pícaro\", \"de\": \"Schurkenbruch\"},\r\n\t\"11\": {\"id\": \"11\", \"en\": \"Aldon's Ledge\", \"fr\": \"Corniche d'Aldon\", \"es\": \"Cornisa de Aldon\", \"de\": \"Aldons Vorsprung\"},\r\n\t\"12\": {\"id\": \"12\", \"en\": \"Wildcreek Run\", \"fr\": \"Piste du Ruisseau sauvage\", \"es\": \"Pista Arroyosalvaje\", \"de\": \"Wildbachstrecke\"},\r\n\t\"13\": {\"id\": \"13\", \"en\": \"Jerrifer's Slough\", \"fr\": \"Bourbier de Jerrifer\", \"es\": \"Cenagal de Jerrifer\", \"de\": \"Jerrifers Sumpfloch\"},\r\n\t\"14\": {\"id\": \"14\", \"en\": \"Klovan Gully\", \"fr\": \"Petit ravin de Klovan\", \"es\": \"Barranco Klovan\", \"de\": \"Klovan-Senke\"},\r\n\t\"15\": {\"id\": \"15\", \"en\": \"Langor Gulch\", \"fr\": \"Ravin de Langor\", \"es\": \"Barranco Langor\", \"de\": \"Langor - Schlucht\"},\r\n\t\"16\": {\"id\": \"16\", \"en\": \"Quentin Lake\", \"fr\": \"Lac Quentin\", \"es\": \"Lago Quentin\", \"de\": \"Quentinsee\"},\r\n\t\"17\": {\"id\": \"17\", \"en\": \"Mendon's Gap\", \"fr\": \"Faille de Mendon\", \"es\": \"Zanja de Mendon\", \"de\": \"Mendons Spalt\"},\r\n\t\"18\": {\"id\": \"18\", \"en\": \"Anzalias Pass\", \"fr\": \"Col d'Anzalias\", \"es\": \"Paso Anzalias\", \"de\": \"Anzalias-Pass\"},\r\n\t\"19\": {\"id\": \"19\", \"en\": \"Ogrewatch Cut\", \"fr\": \"Percée de Gardogre\", \"es\": \"Tajo de la Guardia del Ogro\", \"de\": \"Ogerwacht-Kanal\"},\r\n\t\"20\": {\"id\": \"20\", \"en\": \"Veloka Slope\", \"fr\": \"Flanc de Veloka\", \"es\": \"Pendiente Veloka\", \"de\": \"Veloka-Hang\"},\r\n\t\"21\": {\"id\": \"21\", \"en\": \"Durios Gulch\", \"fr\": \"Ravin de Durios\", \"es\": \"Barranco Durios\", \"de\": \"Durios-Schlucht\"},\r\n\t\"22\": {\"id\": \"22\", \"en\": \"Bravost Escarpment\", \"fr\": \"Falaise de Bravost\", \"es\": \"Escarpadura Bravost\", \"de\": \"Bravost-Abhang\"},\r\n\t\"23\": {\"id\": \"23\", \"en\": \"Garrison\", \"fr\": \"Garnison\", \"es\": \"Fuerte\", \"de\": \"Festung\"},\r\n\t\"24\": {\"id\": \"24\", \"en\": \"Champion's Demense\", \"fr\": \"Fief du champion\", \"es\": \"Dominio del Campeón\", \"de\": \"Landgut des Champions\"},\r\n\t\"25\": {\"id\": \"25\", \"en\": \"Redbriar\", \"fr\": \"Bruyerouge\", \"es\": \"Zarzarroja\", \"de\": \"Rotdornstrauch\"},\r\n\t\"26\": {\"id\": \"26\", \"en\": \"Greenlake\", \"fr\": \"Lac Vert\", \"es\": \"Lagoverde\", \"de\": \"Grünsee\"},\r\n\t\"27\": {\"id\": \"27\", \"en\": \"Ascension Bay\", \"fr\": \"Baie de l'Ascension\", \"es\": \"Bahía de la Ascensión\", \"de\": \"Bucht des Aufstiegs\"},\r\n\t\"28\": {\"id\": \"28\", \"en\": \"Dawn's Eyrie\", \"fr\": \"Promontoire de l'aube\", \"es\": \"Aguilera del Alba\", \"de\": \"Horst der Morgendammerung\"},\r\n\t\"29\": {\"id\": \"29\", \"en\": \"The Spiritholme\", \"fr\": \"L'antre des esprits\", \"es\": \"La Isleta Espiritual\", \"de\": \"Der Geisterholm\"},\r\n\t\"30\": {\"id\": \"30\", \"en\": \"Woodhaven\", \"fr\": \"Gentesylve\", \"es\": \"Refugio Forestal\", \"de\": \"Wald - Freistatt\"},\r\n\t\"31\": {\"id\": \"31\", \"en\": \"Askalion Hills\", \"fr\": \"Collines d'Askalion\", \"es\": \"Colinas Askalion\", \"de\": \"Askalion - Hügel\"},\r\n\t\"32\": {\"id\": \"32\", \"en\": \"Etheron Hills\", \"fr\": \"Collines d'Etheron\", \"es\": \"Colinas Etheron\", \"de\": \"Etheron - Hügel\"},\r\n\t\"33\": {\"id\": \"33\", \"en\": \"Dreaming Bay\", \"fr\": \"Baie des rêves\", \"es\": \"Bahía Onírica\", \"de\": \"Traumbucht\"},\r\n\t\"34\": {\"id\": \"34\", \"en\": \"Victor's Lodge\", \"fr\": \"Pavillon du vainqueur\", \"es\": \"Albergue del Vencedor\", \"de\": \"Sieger - Hütte\"},\r\n\t\"35\": {\"id\": \"35\", \"en\": \"Greenbriar\", \"fr\": \"Vertebranche\", \"es\": \"Zarzaverde\", \"de\": \"Grünstrauch\"},\r\n\t\"36\": {\"id\": \"36\", \"en\": \"Bluelake\", \"fr\": \"Lac bleu\", \"es\": \"Lagoazul\", \"de\": \"Blausee\"},\r\n\t\"37\": {\"id\": \"37\", \"en\": \"Garrison\", \"fr\": \"Garnison\", \"es\": \"Fuerte\", \"de\": \"Festung\"},\r\n\t\"38\": {\"id\": \"38\", \"en\": \"Longview\", \"fr\": \"Longuevue\", \"es\": \"Vistaluenga\", \"de\": \"Weitsicht\"},\r\n\t\"39\": {\"id\": \"39\", \"en\": \"The Godsword\", \"fr\": \"L'Epée divine\", \"es\": \"La Hoja Divina\", \"de\": \"Das Gottschwert\"},\r\n\t\"40\": {\"id\": \"40\", \"en\": \"Cliffside\", \"fr\": \"Flanc de falaise\", \"es\": \"Despeñadero\", \"de\": \"Felswand\"},\r\n\t\"41\": {\"id\": \"41\", \"en\": \"Shadaran Hills\", \"fr\": \"Collines de Shadaran\", \"es\": \"Colinas Shadaran\", \"de\": \"Shadaran Hügel\"},\r\n\t\"42\": {\"id\": \"42\", \"en\": \"Redlake\", \"fr\": \"Rougelac\", \"es\": \"Lagorrojo\", \"de\": \"Rotsee\"},\r\n\t\"43\": {\"id\": \"43\", \"en\": \"Hero's Lodge\", \"fr\": \"Pavillon du Héros\", \"es\": \"Albergue del Héroe\", \"de\": \"Hütte des Helden\"},\r\n\t\"44\": {\"id\": \"44\", \"en\": \"Dreadfall Bay\", \"fr\": \"Baie du Noir déclin\", \"es\": \"Bahía Salto Aciago\", \"de\": \"Schreckensfall - Bucht\"},\r\n\t\"45\": {\"id\": \"45\", \"en\": \"Bluebriar\", \"fr\": \"Bruyazur\", \"es\": \"Zarzazul\", \"de\": \"Blaudornstrauch\"},\r\n\t\"46\": {\"id\": \"46\", \"en\": \"Garrison\", \"fr\": \"Garnison\", \"es\": \"Fuerte\", \"de\": \"Festung\"},\r\n\t\"47\": {\"id\": \"47\", \"en\": \"Sunnyhill\", \"fr\": \"Colline ensoleillée\", \"es\": \"Colina Soleada\", \"de\": \"Sonnenlichthügel\"},\r\n\t\"48\": {\"id\": \"48\", \"en\": \"Faithleap\", \"fr\": \"Ferveur\", \"es\": \"Salto de Fe\", \"de\": \"Glaubenssprung\"},\r\n\t\"49\": {\"id\": \"49\", \"en\": \"Bluevale Refuge\", \"fr\": \"Refuge de bleuval\", \"es\": \"Refugio Valleazul\", \"de\": \"Blautal - Zuflucht\"},\r\n\t\"50\": {\"id\": \"50\", \"en\": \"Bluewater Lowlands\", \"fr\": \"Basses terres d'Eau-Azur\", \"es\": \"Tierras Bajas de Aguazul\", \"de\": \"Blauwasser - Tiefland\"},\r\n\t\"51\": {\"id\": \"51\", \"en\": \"Astralholme\", \"fr\": \"Astralholme\", \"es\": \"Isleta Astral\", \"de\": \"Astralholm\"},\r\n\t\"52\": {\"id\": \"52\", \"en\": \"Arah's Hope\", \"fr\": \"Espoir d'Arah\", \"es\": \"Esperanza de Arah\", \"de\": \"Arahs Hoffnung\"},\r\n\t\"53\": {\"id\": \"53\", \"en\": \"Greenvale Refuge\", \"fr\": \"Refuge de Valvert\", \"es\": \"Refugio de Valleverde\", \"de\": \"Grüntal - Zuflucht\"},\r\n\t\"54\": {\"id\": \"54\", \"en\": \"Foghaven\", \"fr\": \"Havre gris\", \"es\": \"Refugio Neblinoso\", \"de\": \"Nebel - Freistatt\"},\r\n\t\"55\": {\"id\": \"55\", \"en\": \"Redwater Lowlands\", \"fr\": \"Basses terres de Rubicon\", \"es\": \"Tierras Bajas de Aguarroja\", \"de\": \"Rotwasser - Tiefland\"},\r\n\t\"56\": {\"id\": \"56\", \"en\": \"The Titanpaw\", \"fr\": \"Bras du titan\", \"es\": \"La Garra del Titán\", \"de\": \"Die Titanenpranke\"},\r\n\t\"57\": {\"id\": \"57\", \"en\": \"Cragtop\", \"fr\": \"Sommet de l'escarpement\", \"es\": \"Cumbrepeñasco\", \"de\": \"Felsenspitze\"},\r\n\t\"58\": {\"id\": \"58\", \"en\": \"Godslore\", \"fr\": \"Divination\", \"es\": \"Sabiduría de los Dioses\", \"de\": \"Götterkunde\"},\r\n\t\"59\": {\"id\": \"59\", \"en\": \"Redvale Refuge\", \"fr\": \"Refuge de Valrouge\", \"es\": \"Refugio Vallerojo\", \"de\": \"Rottal - Zuflucht\"},\r\n\t\"60\": {\"id\": \"60\", \"en\": \"Stargrove\", \"fr\": \"Bosquet stellaire\", \"es\": \"Arboleda de las Estrellas\", \"de\": \"Sternenhain\"},\r\n\t\"61\": {\"id\": \"61\", \"en\": \"Greenwater Lowlands\", \"fr\": \"Basses terres d'Eau-Verdoyante\", \"es\": \"Tierras Bajas de Aguaverde\", \"de\": \"Grünwasser - Tiefland\"},\r\n\t\"62\": {\"id\": \"62\", \"en\": \"Temple of Lost Prayers\", \"fr\": \"Temple des prières perdues\", \"es\": \"Templo de las Pelgarias\", \"de\": \"Tempel der Verlorenen Gebete\"},\r\n\t\"63\": {\"id\": \"63\", \"en\": \"Battle's Hollow\", \"fr\": \"Vallon de bataille\", \"es\": \"Hondonada de la Battalla\", \"de\": \"Schlachten-Senke\"},\r\n\t\"64\": {\"id\": \"64\", \"en\": \"Bauer's Estate\", \"fr\": \"Domaine de Bauer\", \"es\": \"Hacienda de Bauer\", \"de\": \"Bauers Anwesen\"},\r\n\t\"65\": {\"id\": \"65\", \"en\": \"Orchard Overlook\", \"fr\": \"Belvédère du Verger\", \"es\": \"Mirador del Huerto\", \"de\": \"Obstgarten Aussichtspunkt\"},\r\n\t\"66\": {\"id\": \"66\", \"en\": \"Carver's Ascent\", \"fr\": \"Côte du couteau\", \"es\": \"Ascenso del Trinchador\", \"de\": \"Aufstieg des Schnitzers\"},\r\n\t\"67\": {\"id\": \"67\", \"en\": \"Carver's Ascent\", \"fr\": \"Côte du couteau\", \"es\": \"Ascenso del Trinchador\", \"de\": \"Aufstieg des Schnitzers\"},\r\n\t\"68\": {\"id\": \"68\", \"en\": \"Orchard Overlook\", \"fr\": \"Belvédère du Verger\", \"es\": \"Mirador del Huerto\", \"de\": \"Obstgarten Aussichtspunkt\"},\r\n\t\"69\": {\"id\": \"69\", \"en\": \"Bauer's Estate\", \"fr\": \"Domaine de Bauer\", \"es\": \"Hacienda de Bauer\", \"de\": \"Bauers Anwesen\"},\r\n\t\"70\": {\"id\": \"70\", \"en\": \"Battle's Hollow\", \"fr\": \"Vallon de bataille\", \"es\": \"Hondonada de la Battalla\", \"de\": \"Schlachten-Senke\"},\r\n\t\"71\": {\"id\": \"71\", \"en\": \"Temple of Lost Prayers\", \"fr\": \"Temple des prières perdues\", \"es\": \"Templo de las Pelgarias\", \"de\": \"Tempel der Verlorenen Gebete\"},\r\n\t\"72\": {\"id\": \"72\", \"en\": \"Carver's Ascent\", \"fr\": \"Côte du couteau\", \"es\": \"Ascenso del Trinchador\", \"de\": \"Aufstieg des Schnitzers\"},\r\n\t\"73\": {\"id\": \"73\", \"en\": \"Orchard Overlook\", \"fr\": \"Belvédère du Verger\", \"es\": \"Mirador del Huerto\", \"de\": \"Obstgarten Aussichtspunkt\"},\r\n\t\"74\": {\"id\": \"74\", \"en\": \"Bauer's Estate\", \"fr\": \"Domaine de Bauer\", \"es\": \"Hacienda de Bauer\", \"de\": \"Bauers Anwesen\"},\r\n\t\"75\": {\"id\": \"75\", \"en\": \"Battle's Hollow\", \"fr\": \"Vallon de bataille\", \"es\": \"Hondonada de la Battalla\", \"de\": \"Schlachten-Senke\"},\r\n\t\"76\": {\"id\": \"76\", \"en\": \"Temple of Lost Prayers\", \"fr\": \"Temple des prières perdues\", \"es\": \"Templo de las Pelgarias\", \"de\": \"Tempel der Verlorenen Gebete\"},\r\n};\r\n\n},{}],3:[function(require,module,exports){\nmodule.exports = [\r\n\t{\r\n\t\t\"key\": \"Center\",\r\n\t\t\"name\": \"Eternal Battlegrounds\",\r\n\t\t\"abbr\": \"EBG\",\r\n\t\t\"mapIndex\": 3,\r\n\t\t\"color\": \"neutral\",\r\n\t\t\"sections\": [{\r\n\t\t\t\t\"label\": \"Castle\",\r\n\t\t\t\t\"groupType\": \"neutral\",\r\n\t\t\t\t\"objectives\": [9], \t\t\t\t\t\t\t\t// sm\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"Red Corner\",\r\n\t\t\t\t\"groupType\": \"red\",\r\n\t\t\t\t\"objectives\": [1, 17, 20, 18, 19, 6, 5],\t\t// overlook, mendons, veloka, anz, ogre, speldan, pang\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"Blue Corner\",\r\n\t\t\t\t\"groupType\": \"blue\",\r\n\t\t\t\t\"objectives\": [2, 15, 22, 16, 21, 7, 8]\t\t\t// valley, langor, bravost, quentin, durios, dane, umber\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"Green Corner\",\r\n\t\t\t\t\"groupType\": \"green\",\r\n\t\t\t\t\"objectives\": [3, 11, 13, 12, 14, 10, 4] \t\t// lowlands, aldons, jerrifer, wildcreek, klovan, rogues, golanta\r\n\t\t\t},],\r\n\t}, {\r\n\t\t\"key\": \"RedHome\",\r\n\t\t\"name\": \"RedHome\",\r\n\t\t\"abbr\": \"Red\",\r\n\t\t\"mapIndex\": 0,\r\n\t\t\"color\": \"red\",\r\n\t\t\"sections\": [{\r\n\t\t\t\t\"label\": \"Keeps\",\r\n\t\t\t\t\"groupType\": \"red\",\r\n\t\t\t\t\"objectives\": [37, 33, 32] \t\t\t\t\t\t// keep, bay, hills, longview, cliffside, godsword, hopes, astral\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"North\",\r\n\t\t\t\t\"groupType\": \"red\",\r\n\t\t\t\t\"objectives\": [38, 40, 39, 52, 51] \t\t\t\t// keep, bay, hills, longview, cliffside, godsword, hopes, astral\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"South\",\r\n\t\t\t\t\"groupType\": \"neutral\",\r\n\t\t\t\t\"objectives\": [35, 36, 34, 53, 50] \t\t\t\t// briar, lake, lodge, vale, water\r\n\t\t\t// }, {\r\n\t\t\t// \t\"label\": \"Ruins\",\r\n\t\t\t// \t\"groupType\": \"ruins\",\r\n\t\t\t// \t\"objectives\": [62, 63, 64, 65, 66] \t\t\t\t// temple, hollow, estate, orchard, ascent\r\n\t\t\t},],\r\n\t}, {\r\n\t\t\"key\": \"BlueHome\",\r\n\t\t\"name\": \"BlueHome\",\r\n\t\t\"abbr\": \"Blu\",\r\n\t\t\"mapIndex\": 2,\r\n\t\t\"color\": \"blue\",\r\n\t\t\"sections\": [{\r\n\t\t\t\t\"label\": \"Keeps\",\r\n\t\t\t\t\"groupType\": \"blue\",\r\n\t\t\t\t\"objectives\": [23, 27, 31] \t\t\t\t\t\t// keep, bay, hills, woodhaven, dawns, spirit, gods, star\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"North\",\r\n\t\t\t\t\"groupType\": \"blue\",\r\n\t\t\t\t\"objectives\": [30, 28, 29, 58, 60] \t\t\t\t// keep, bay, hills, woodhaven, dawns, spirit, gods, star\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"South\",\r\n\t\t\t\t\"groupType\": \"neutral\",\r\n\t\t\t\t\"objectives\": [25, 26, 24, 59, 61] \t\t\t\t// briar, lake, champ, vale, water\r\n\t\t\t// }, {\r\n\t\t\t// \t\"label\": \"Ruins\",\r\n\t\t\t// \t\"groupType\": \"ruins\",\r\n\t\t\t// \t\"objectives\": [71, 70, 69, 68, 67] \t\t\t\t// temple, hollow, estate, orchard, ascent\r\n\t\t\t},],\r\n\t}, {\r\n\t\t\"key\": \"GreenHome\",\r\n\t\t\"name\": \"GreenHome\",\r\n\t\t\"abbr\": \"Grn\",\r\n\t\t\"mapIndex\": 1,\r\n\t\t\"color\": \"green\",\r\n\t\t\"sections\": [{\r\n\t\t\t\t\"label\": \"Keeps\",\r\n\t\t\t\t\"groupType\": \"green\",\r\n\t\t\t\t\"objectives\": [46, 44, 41] \t\t\t\t\t\t// keep, bay, hills, sunny, crag, titan, faith, fog\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"North\",\r\n\t\t\t\t\"groupType\": \"green\",\r\n\t\t\t\t\"objectives\": [47, 57, 56, 48, 54] \t\t\t\t// keep, bay, hills, sunny, crag, titan, faith, fog\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"South\",\r\n\t\t\t\t\"groupType\": \"neutral\",\r\n\t\t\t\t\"objectives\": [45, 42, 43, 49, 55] \t\t\t\t// briar, lake, lodge, vale, water\r\n\t\t\t// }, {\r\n\t\t\t// \t\"label\": \"Ruins\",\r\n\t\t\t// \t\"groupType\": \"ruins\",\r\n\t\t\t// \t\"objectives\": [76 , 75 , 74 , 73 , 72 ] \t\t// temple, hollow, estate, orchard, ascent\r\n\t\t\t},]\r\n\t},\r\n];\r\n\n},{}],4:[function(require,module,exports){\nmodule.exports = {\r\n\t//\tEBG\r\n\t\"9\":\t{\"type\": 1, \"timer\": 1, \"map\": 3, \"d\": 0, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 0},\t// Stonemist Castle\r\n\r\n\t//\tRed Corner\r\n\t\"1\":\t{\"type\": 2, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// Red Keep - Overlook\r\n\t\"17\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// Red Tower - Mendon's Gap\r\n\t\"20\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// Red Tower - Veloka Slope\r\n\t\"18\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// Red Tower - Anzalias Pass\r\n\t\"19\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// Red Tower - Ogrewatch Cut\r\n\t\"6\":\t{\"type\": 4, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 1, \"e\": 0},\t// Red Camp - Mill - Speldan\r\n\t\"5\":\t{\"type\": 4, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 1},\t// Red Camp - Mine - Pangloss\r\n\r\n\t//\tBlue Corner\r\n\t\"2\":\t{\"type\": 2, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// Blue Keep - Valley\r\n\t\"15\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// Blue Tower - Langor Gulch\r\n\t\"22\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// Blue Tower - Bravost Escarpment\r\n\t\"16\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// Blue Tower - Quentin Lake\r\n\t\"21\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// Blue Tower - Durios Gulch\r\n\t\"7\":\t{\"type\": 4, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 0},\t// Blue Camp - Mine - Danelon\r\n\t\"8\":\t{\"type\": 4, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 1},\t// Blue Camp - Mill - Umberglade\r\n\r\n\t//\tGreen Corner\r\n\t\"3\":\t{\"type\": 2, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// Green Keep - Lowlands\r\n\t\"11\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// Green Tower - Aldons\r\n\t\"13\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// Green Tower - Jerrifer's Slough\r\n\t\"12\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// Green Tower - Wildcreek\r\n\t\"14\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// Green Tower - Klovan Gully\r\n\t\"10\":\t{\"type\": 4, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// Green Camp - Mine - Rogues Quarry\r\n\t\"4\":\t{\"type\": 4, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 1},\t// Green Camp - Mill - Golanta\r\n\r\n\r\n\t//\tRedHome\r\n\t\"37\":\t{\"type\": 2, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// Garrison\r\n\t\"33\":\t{\"type\": 2, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 1, \"e\": 0},\t// Bay - Dreaming Bay\r\n\t\"32\":\t{\"type\": 2, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 1},\t// Hills - Etheron Hills\r\n\t\"38\":\t{\"type\": 3, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// NW Tower - Longview\r\n\t\"40\":\t{\"type\": 3, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// NE Tower - Cliffside\r\n\t\"39\":\t{\"type\": 4, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// North Camp - Crossroads - The Godsword\r\n\t\"52\":\t{\"type\": 4, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// NW Camp - Mine - Arah's Hope\r\n\t\"51\":\t{\"type\": 4, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// NE Camp - Mill - Astralholme\r\n\r\n\t\"35\":\t{\"type\": 3, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// SW Tower - Greenbriar\r\n\t\"36\":\t{\"type\": 3, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// SE Tower - Bluelake\r\n\t\"34\":\t{\"type\": 4, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 0},\t// South Camp - Orchard - Victor's Lodge\r\n\t\"53\":\t{\"type\": 4, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// SW Camp - Workshop - Greenvale Refuge\r\n\t\"50\":\t{\"type\": 4, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// SE Camp - Fishing Village - Bluewater Lowlands\r\n\r\n\r\n\t//\tGreenHome\r\n\t\"46\":\t{\"type\": 2, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// Garrison\r\n\t\"44\":\t{\"type\": 2, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 1, \"e\": 0},\t// Bay - Dreadfall Bay\r\n\t\"41\":\t{\"type\": 2, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 1},\t// Hills - Shadaran Hills\r\n\t\"47\":\t{\"type\": 3, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// NW Tower - Sunnyhill\r\n\t\"57\":\t{\"type\": 3, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// NE Tower - Cragtop\r\n\t\"56\":\t{\"type\": 4, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// North Camp - Crossroads - The Titanpaw\r\n\t\"48\":\t{\"type\": 4, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// NW Camp - Mine - Faithleap\r\n\t\"54\":\t{\"type\": 4, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// NE Camp - Mill - Foghaven\r\n\r\n\t\"45\":\t{\"type\": 3, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// SW Tower - Bluebriar\r\n\t\"42\":\t{\"type\": 3, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// SE Tower - Redlake\r\n\t\"43\":\t{\"type\": 4, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 0},\t// South Camp - Orchard - Hero's Lodge\r\n\t\"49\":\t{\"type\": 4, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// SW Camp - Workshop - Bluevale Refuge\r\n\t\"55\":\t{\"type\": 4, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// SE Camp - Fishing Village - Redwater Lowlands\r\n\r\n\r\n\t//\tBlueHome\r\n\t\"23\":\t{\"type\": 2, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// Garrison\r\n\t\"27\":\t{\"type\": 2, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 1, \"e\": 0},\t// Bay - Ascension Bay\r\n\t\"31\":\t{\"type\": 2, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 1},\t// Hills - Askalion Hills\r\n\t\"30\":\t{\"type\": 3, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// NW Tower - Woodhaven\r\n\t\"28\":\t{\"type\": 3, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// NE Tower - Dawn's Eyrie\r\n\t\"29\":\t{\"type\": 4, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// North Camp - Crossroads - The Spiritholme\r\n\t\"58\":\t{\"type\": 4, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// NW Camp - Mine - Godslore\r\n\t\"60\":\t{\"type\": 4, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// NE Camp - Mill - Stargrove\r\n\r\n\t\"25\":\t{\"type\": 3, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// SW Tower - Redbriar\r\n\t\"26\":\t{\"type\": 3, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// SE Tower - Greenlake\r\n\t\"24\":\t{\"type\": 4, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 0},\t// South Camp - Orchard - Champion's Demense\r\n\t\"59\":\t{\"type\": 4, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// SW Camp - Workshop - Redvale Refuge\r\n\t\"61\":\t{\"type\": 4, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// SE Camp - Fishing Village - Greenwater Lowlands\r\n};\r\n\n},{}],5:[function(require,module,exports){\nmodule.exports = {\r\n\t\"1\": {\"id\": 1, \"name\": \"Keep\"},\r\n\t\"2\": {\"id\": 2, \"name\": \"Keep\"},\r\n\t\"3\": {\"id\": 3, \"name\": \"Keep\"},\r\n\t\"4\": {\"id\": 4, \"name\": \"Green Mill\"},\r\n\t\"5\": {\"id\": 5, \"name\": \"Red Mine\"},\r\n\t\"6\": {\"id\": 6, \"name\": \"Red Mill\"},\r\n\t\"7\": {\"id\": 7, \"name\": \"Blue Mine\"},\r\n\t\"8\": {\"id\": 8, \"name\": \"Blue Mill\"},\r\n\t\"9\": {\"id\": 9, \"name\": \"Castle\"},\r\n\t\"10\": {\"id\": 10, \"name\": \"Green Mine\"},\r\n\t\"11\": {\"id\": 11, \"name\": \"Tower\"},\r\n\t\"12\": {\"id\": 12, \"name\": \"Tower\"},\r\n\t\"13\": {\"id\": 13, \"name\": \"Tower\"},\r\n\t\"14\": {\"id\": 14, \"name\": \"Tower\"},\r\n\t\"15\": {\"id\": 15, \"name\": \"Tower\"},\r\n\t\"16\": {\"id\": 16, \"name\": \"Tower\"},\r\n\t\"17\": {\"id\": 17, \"name\": \"Tower\"},\r\n\t\"18\": {\"id\": 18, \"name\": \"Tower\"},\r\n\t\"19\": {\"id\": 19, \"name\": \"Tower\"},\r\n\t\"20\": {\"id\": 20, \"name\": \"Tower\"},\r\n\t\"21\": {\"id\": 21, \"name\": \"Tower\"},\r\n\t\"22\": {\"id\": 22, \"name\": \"Tower\"},\r\n\t\"23\": {\"id\": 23, \"name\": \"Keep\"},\r\n\t\"25\": {\"id\": 25, \"name\": \"Tower\"},\r\n\t\"24\": {\"id\": 24, \"name\": \"Orchard\"},\r\n\t\"26\": {\"id\": 26, \"name\": \"Tower\"},\r\n\t\"27\": {\"id\": 27, \"name\": \"Keep\"},\r\n\t\"28\": {\"id\": 28, \"name\": \"Tower\"},\r\n\t\"29\": {\"id\": 29, \"name\": \"Crossroads\"},\r\n\t\"30\": {\"id\": 30, \"name\": \"Tower\"},\r\n\t\"31\": {\"id\": 31, \"name\": \"Keep\"},\r\n\t\"32\": {\"id\": 32, \"name\": \"Keep\"},\r\n\t\"33\": {\"id\": 33, \"name\": \"Keep\"},\r\n\t\"34\": {\"id\": 34, \"name\": \"Orchard\"},\r\n\t\"35\": {\"id\": 35, \"name\": \"Tower\"},\r\n\t\"36\": {\"id\": 36, \"name\": \"Tower\"},\r\n\t\"37\": {\"id\": 37, \"name\": \"Keep\"},\r\n\t\"38\": {\"id\": 38, \"name\": \"Tower\"},\r\n\t\"39\": {\"id\": 39, \"name\": \"Crossroads\"},\r\n\t\"40\": {\"id\": 40, \"name\": \"Tower\"},\r\n\t\"41\": {\"id\": 41, \"name\": \"Keep\"},\r\n\t\"42\": {\"id\": 42, \"name\": \"Tower\"},\r\n\t\"43\": {\"id\": 43, \"name\": \"Orchard\"},\r\n\t\"44\": {\"id\": 44, \"name\": \"Keep\"},\r\n\t\"45\": {\"id\": 45, \"name\": \"Tower\"},\r\n\t\"46\": {\"id\": 46, \"name\": \"Keep\"},\r\n\t\"47\": {\"id\": 47, \"name\": \"Tower\"},\r\n\t\"48\": {\"id\": 48, \"name\": \"Quarry\"},\r\n\t\"49\": {\"id\": 49, \"name\": \"Workshop\"},\r\n\t\"50\": {\"id\": 50, \"name\": \"Fishing Village\"},\r\n\t\"51\": {\"id\": 51, \"name\": \"Lumber Mill\"},\r\n\t\"52\": {\"id\": 52, \"name\": \"Quarry\"},\r\n\t\"53\": {\"id\": 53, \"name\": \"Workshop\"},\r\n\t\"54\": {\"id\": 54, \"name\": \"Lumber Mill\"},\r\n\t\"55\": {\"id\": 55, \"name\": \"Fishing Village\"},\r\n\t\"56\": {\"id\": 56, \"name\": \"Crossroads\"},\r\n\t\"57\": {\"id\": 57, \"name\": \"Tower\"},\r\n\t\"58\": {\"id\": 58, \"name\": \"Quarry\"},\r\n\t\"59\": {\"id\": 59, \"name\": \"Workshop\"},\r\n\t\"60\": {\"id\": 60, \"name\": \"Lumber Mill\"},\r\n\t\"61\": {\"id\": 61, \"name\": \"Fishing Village\"},\r\n\t\"62\": {\"id\": 62, \"name\": \"((Temple of Lost Prayers))\"},\r\n\t\"63\": {\"id\": 63, \"name\": \"((Battle's Hollow))\"},\r\n\t\"64\": {\"id\": 64, \"name\": \"((Bauer's Estate))\"},\r\n\t\"65\": {\"id\": 65, \"name\": \"((Orchard Overlook))\"},\r\n\t\"66\": {\"id\": 66, \"name\": \"((Carver's Ascent))\"},\r\n\t\"67\": {\"id\": 67, \"name\": \"((Carver's Ascent))\"},\r\n\t\"68\": {\"id\": 68, \"name\": \"((Orchard Overlook))\"},\r\n\t\"69\": {\"id\": 69, \"name\": \"((Bauer's Estate))\"},\r\n\t\"70\": {\"id\": 70, \"name\": \"((Battle's Hollow))\"},\r\n\t\"71\": {\"id\": 71, \"name\": \"((Temple of Lost Prayers))\"},\r\n\t\"72\": {\"id\": 72, \"name\": \"((Carver's Ascent))\"},\r\n\t\"73\": {\"id\": 73, \"name\": \"((Orchard Overlook))\"},\r\n\t\"74\": {\"id\": 74, \"name\": \"((Bauer's Estate))\"},\r\n\t\"75\": {\"id\": 75, \"name\": \"((Battle's Hollow))\"},\r\n\t\"76\": {\"id\": 76, \"name\": \"((Temple of Lost Prayers))\"}\r\n};\r\n\n},{}],6:[function(require,module,exports){\nmodule.exports = {\r\n\t\"1\": {\"id\": 1, \"timer\": 1, \"value\": 35, \"name\": \"castle\"},\r\n\t\"2\": {\"id\": 2, \"timer\": 1, \"value\": 25, \"name\": \"keep\"},\r\n\t\"3\": {\"id\": 3, \"timer\": 1, \"value\": 10, \"name\": \"tower\"},\r\n\t\"4\": {\"id\": 4, \"timer\": 1, \"value\": 5, \"name\": \"camp\"},\r\n\t\"5\": {\"id\": 5, \"timer\": 0, \"value\": 0, \"name\": \"temple\"},\r\n\t\"6\": {\"id\": 6, \"timer\": 0, \"value\": 0, \"name\": \"hollow\"},\r\n\t\"7\": {\"id\": 7, \"timer\": 0, \"value\": 0, \"name\": \"estate\"},\r\n\t\"8\": {\"id\": 8, \"timer\": 0, \"value\": 0, \"name\": \"overlook\"},\r\n\t\"9\": {\"id\": 9, \"timer\": 0, \"value\": 0, \"name\": \"ascent\"}\r\n};\r\n\n},{}],7:[function(require,module,exports){\nvar _ = require('lodash');\r\n\r\nvar en = _.indexBy(require('./objectives_v2_en'), 'id');\r\nvar es = _.indexBy(require('./objectives_v2_es'), 'id');\r\nvar de = _.indexBy(require('./objectives_v2_de'), 'id');\r\nvar fr = _.indexBy(require('./objectives_v2_fr'), 'id');\r\n\r\n\r\n\r\nmodule.exports = _\r\n    .chain(en)\r\n    .mapValues(function(o) {\r\n        o.name = {\r\n            en: o.name,\r\n            es: es[o.id].name,\r\n            de: de[o.id].name,\r\n            fr: fr[o.id].name,\r\n        };\r\n        return o;\r\n    })\r\n    .value();\r\n\n},{\"./objectives_v2_de\":8,\"./objectives_v2_en\":9,\"./objectives_v2_es\":10,\"./objectives_v2_fr\":11,\"lodash\":14}],8:[function(require,module,exports){\nmodule.exports = [{\r\n    id: \"1099-99\",\r\n    name: \"Hamms Labor\",\r\n    sector_id: 1314,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10864,\r\n        9559.49\r\n    ]\r\n}, {\r\n    id: \"1102-99\",\r\n    name: \"Leshs Labor\",\r\n    sector_id: 1291,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7279.95,\r\n        12119.5\r\n    ]\r\n}, {\r\n    id: \"1143-99\",\r\n    name: \"Zakks Labor\",\r\n    sector_id: 1358,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14448,\r\n        11479.5\r\n    ]\r\n}, {\r\n    id: \"1099-100\",\r\n    name: \"Bauer-Gehöft\",\r\n    sector_id: 1280,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11793.7,\r\n        11258.4\r\n    ]\r\n}, {\r\n    id: \"1102-100\",\r\n    name: \"Barrett-Gehöft\",\r\n    sector_id: 1345,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8209.71,\r\n        13818.4\r\n    ]\r\n}, {\r\n    id: \"1143-100\",\r\n    name: \"Gee-Gehöft\",\r\n    sector_id: 1292,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15377.7,\r\n        13178.4\r\n    ]\r\n}, {\r\n    id: \"1099-101\",\r\n    name: \"McLains Lager\",\r\n    sector_id: 1286,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9712.8,\r\n        11263.5\r\n    ]\r\n}, {\r\n    id: \"1102-101\",\r\n    name: \"Patricks Lager\",\r\n    sector_id: 1342,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6128.8,\r\n        13823.5\r\n    ]\r\n}, {\r\n    id: \"1143-101\",\r\n    name: \"Habibs Lager\",\r\n    sector_id: 1306,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13296.8,\r\n        13183.5\r\n    ]\r\n}, {\r\n    id: \"1099-102\",\r\n    name: \"O'del-Akademie\",\r\n    sector_id: 1352,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9832.4,\r\n        9594.63\r\n    ]\r\n}, {\r\n    id: \"1102-102\",\r\n    name: \"Y'lan-Akademie\",\r\n    sector_id: 1336,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6248.4,\r\n        12154.6\r\n    ]\r\n}, {\r\n    id: \"1143-102\",\r\n    name: \"Kay'li-Akademie\",\r\n    sector_id: 1337,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13416.4,\r\n        11514.6\r\n    ]\r\n}, {\r\n    id: \"1099-104\",\r\n    name: \"Ewige Nekropole\",\r\n    sector_id: 1308,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11802.7,\r\n        9664.75\r\n    ]\r\n}, {\r\n    id: \"1102-104\",\r\n    name: \"Todlose Nekropole\",\r\n    sector_id: 1325,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8218.72,\r\n        12224.7\r\n    ]\r\n}, {\r\n    id: \"1143-104\",\r\n    name: \"Unsterbliche Nekropole\",\r\n    sector_id: 1355,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15386.7,\r\n        11584.7\r\n    ]\r\n}, {\r\n    id: \"1099-105\",\r\n    name: \"Kurbelwellen-Depot\",\r\n    sector_id: 1354,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11264.3,\r\n        11609.4\r\n    ]\r\n}, {\r\n    id: \"1102-105\",\r\n    name: \"Zündfunken-Depot\",\r\n    sector_id: 1302,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7680.32,\r\n        14169.4\r\n    ]\r\n}, {\r\n    id: \"1143-105\",\r\n    name: \"Schwungrad-Depot\",\r\n    sector_id: 1332,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14848.3,\r\n        13529.4\r\n    ]\r\n}, {\r\n    id: \"1099-106\",\r\n    name: \"Brennende Gruft\",\r\n    sector_id: 1351,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9854.58,\r\n        10578.5\r\n    ]\r\n}, {\r\n    id: \"1102-106\",\r\n    name: \"Versengende Gruft\",\r\n    sector_id: 1295,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6270.58,\r\n        13138.5\r\n    ]\r\n}, {\r\n    id: \"1143-106\",\r\n    name: \"Glühende Gruft\",\r\n    sector_id: 1298,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13438.6,\r\n        12498.5\r\n    ]\r\n}, {\r\n    id: \"1099-107\",\r\n    name: \"Grenze von\",\r\n    sector_id: 1311,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        12022.5,\r\n        11789.9\r\n    ]\r\n}, {\r\n    id: \"1102-107\",\r\n    name: \"Grenze von\",\r\n    sector_id: 1310,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8438.49,\r\n        14349.9\r\n    ]\r\n}, {\r\n    id: \"1143-107\",\r\n    name: \"Grenze von\",\r\n    sector_id: 1349,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15606.5,\r\n        13709.9\r\n    ]\r\n}, {\r\n    id: \"1099-108\",\r\n    name: \"Grenze von\",\r\n    sector_id: 1350,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9641.7,\r\n        11749.6\r\n    ]\r\n}, {\r\n    id: \"1102-108\",\r\n    name: \"Grenze von\",\r\n    sector_id: 1359,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6057.7,\r\n        14309.6\r\n    ]\r\n}, {\r\n    id: \"1143-108\",\r\n    name: \"Grenze von\",\r\n    sector_id: 1285,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13225.7,\r\n        13669.6\r\n    ]\r\n}, {\r\n    id: \"1099-109\",\r\n    name: \"Roys Zuflucht\",\r\n    sector_id: 1322,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11954.6,\r\n        10068.5\r\n    ]\r\n}, {\r\n    id: \"1102-109\",\r\n    name: \"Norfolks Zuflucht\",\r\n    sector_id: 1290,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8370.6,\r\n        12628.5\r\n    ]\r\n}, {\r\n    id: \"1143-109\",\r\n    name: \"Oliviers Zuflucht\",\r\n    sector_id: 1304,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15538.6,\r\n        11988.5\r\n    ]\r\n}, {\r\n    id: \"1099-110\",\r\n    name: \"Verdörrter Außenposten\",\r\n    sector_id: 1277,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10255,\r\n        11576\r\n    ]\r\n}, {\r\n    id: \"1102-110\",\r\n    name: \"Welker Außenposten\",\r\n    sector_id: 1283,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6671.05,\r\n        14136\r\n    ]\r\n}, {\r\n    id: \"1143-110\",\r\n    name: \"Öder Außenposten\",\r\n    sector_id: 1328,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13839,\r\n        13496\r\n    ]\r\n}, {\r\n    id: \"1099-113\",\r\n    name: \"Stoischer Festungswall\",\r\n    sector_id: 1303,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10812.3,\r\n        10102.9\r\n    ]\r\n}, {\r\n    id: \"1102-113\",\r\n    name: \"Unbeeindruckter Festungswall\",\r\n    sector_id: 1318,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7228.32,\r\n        12662.9\r\n    ]\r\n}, {\r\n    id: \"1143-113\",\r\n    name: \"Stahlharter Festungswall\",\r\n    sector_id: 1293,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14396.3,\r\n        12022.9\r\n    ]\r\n}, {\r\n    id: \"1099-114\",\r\n    name: \"Fischadler-Palast\",\r\n    sector_id: 1300,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11788,\r\n        10660.2\r\n    ]\r\n}, {\r\n    id: \"1102-114\",\r\n    name: \"Weihen-Palast\",\r\n    sector_id: 1287,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8204,\r\n        13220.2\r\n    ]\r\n}, {\r\n    id: \"1143-114\",\r\n    name: \"Würger-Palast\",\r\n    sector_id: 1356,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15372,\r\n        12580.2\r\n    ]\r\n}, {\r\n    id: \"1099-115\",\r\n    name: \"Boettigers Versteck\",\r\n    sector_id: 1316,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9585.9,\r\n        10037.1\r\n    ]\r\n}, {\r\n    id: \"1102-115\",\r\n    name: \"Hughes Versteck\",\r\n    sector_id: 1324,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6001.9,\r\n        12597.1\r\n    ]\r\n}, {\r\n    id: \"1143-115\",\r\n    name: \"Berdrows Versteck\",\r\n    sector_id: 1357,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13169.9,\r\n        11957.1\r\n    ]\r\n}, {\r\n    id: \"1099-116\",\r\n    name: \"Brunnen des Staubflüsterns\",\r\n    sector_id: 1296,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10773.3,\r\n        11652.5\r\n    ]\r\n}, {\r\n    id: \"1102-116\",\r\n    name: \"Brunnen der Zerschlagenen Hoffnung\",\r\n    sector_id: 1338,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7189.29,\r\n        14212.5\r\n    ]\r\n}, {\r\n    id: \"1143-116\",\r\n    name: \"Brunnen des Letzten Schnaufers\",\r\n    sector_id: 1301,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14357.3,\r\n        13572.5\r\n    ]\r\n}, {\r\n    id: \"1099-117\",\r\n    name: \"Zitadelle von\",\r\n    sector_id: 1343,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10590.2,\r\n        9169.19\r\n    ]\r\n}, {\r\n    id: \"1102-117\",\r\n    name: \"Zitadelle von\",\r\n    sector_id: 1315,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7006.19,\r\n        11729.2\r\n    ]\r\n}, {\r\n    id: \"1143-117\",\r\n    name: \"Zitadelle von\",\r\n    sector_id: 1279,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14174.2,\r\n        11089.2\r\n    ]\r\n}, {\r\n    id: \"95-48\",\r\n    name: \"Glaubenssprung\",\r\n    sector_id: 1010,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-11\",\r\n    name: \"Aldons Vorsprung\",\r\n    sector_id: 882,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9417.39,\r\n        14790.7\r\n    ]\r\n}, {\r\n    id: \"95-43\",\r\n    name: \"Heldenhalle\",\r\n    sector_id: 1004,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-62\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-31\",\r\n    name: \"Aufstiegsbucht\",\r\n    sector_id: 973,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-29\",\r\n    name: \"Der Geistholm\",\r\n    sector_id: 978,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-1\",\r\n    name: \"Aussichtspunkt von\",\r\n    sector_id: 843,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10698.4,\r\n        13761\r\n    ]\r\n}, {\r\n    id: \"38-15\",\r\n    name: \"Langor-Schlucht\",\r\n    sector_id: 887,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11465.3,\r\n        15569.6\r\n    ]\r\n}, {\r\n    id: \"38-3\",\r\n    name: \"Tiefland von\",\r\n    sector_id: 848,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9840.25,\r\n        14983.6\r\n    ]\r\n}, {\r\n    id: \"38-17\",\r\n    name: \"Mendons Spalt\",\r\n    sector_id: 890,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10192.7,\r\n        13410.8\r\n    ]\r\n}, {\r\n    id: \"94-35\",\r\n    name: \"Grünstrauch\",\r\n    sector_id: 964,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-7\",\r\n    name: \"Danelon-Passage\",\r\n    sector_id: 837,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10996.4,\r\n        15545.8\r\n    ]\r\n}, {\r\n    id: \"96-27\",\r\n    name: \"Festung von\",\r\n    sector_id: 976,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-103\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-30\",\r\n    name: \"Wald-Freistatt\",\r\n    sector_id: 988,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-41\",\r\n    name: \"Shadaran-Hügel\",\r\n    sector_id: 996,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-32\",\r\n    name: \"Etheron-Hügel\",\r\n    sector_id: 962,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-56\",\r\n    name: \"Die Titanenpranke\",\r\n    sector_id: 998,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-75\",\r\n    name: \"Dämonenzauber-See\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-9\",\r\n    name: \"Schloss Steinnebel\",\r\n    sector_id: 833,\r\n    type: \"Castle\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10627.3,\r\n        14501.3\r\n    ]\r\n}, {\r\n    id: \"95-57\",\r\n    name: \"Schroffgipfel\",\r\n    sector_id: 1006,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-5\",\r\n    name: \"Pangloss-Anhöhe\",\r\n    sector_id: 846,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11201.6,\r\n        13718.4\r\n    ]\r\n}, {\r\n    id: \"94-33\",\r\n    name: \"Traumbucht\",\r\n    sector_id: 957,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-42\",\r\n    name: \"Rotsee\",\r\n    sector_id: 1008,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-21\",\r\n    name: \"Durios-Schlucht\",\r\n    sector_id: 888,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11207.1,\r\n        14595\r\n    ]\r\n}, {\r\n    id: \"95-54\",\r\n    name: \"Nebel-Freistatt\",\r\n    sector_id: 995,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-55\",\r\n    name: \"Rotwasser-Tiefland\",\r\n    sector_id: 1003,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-26\",\r\n    name: \"Grünsee\",\r\n    sector_id: 989,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-20\",\r\n    name: \"Veloka-Hang\",\r\n    sector_id: 891,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11017.4,\r\n        13414.4\r\n    ]\r\n}, {\r\n    id: \"95-44\",\r\n    name: \"Schreckensfall-Bucht\",\r\n    sector_id: 999,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-45\",\r\n    name: \"Blaustrauch\",\r\n    sector_id: 1009,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-14\",\r\n    name: \"Klovan-Senke\",\r\n    sector_id: 884,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10219.5,\r\n        15107.6\r\n    ]\r\n}, {\r\n    id: \"38-13\",\r\n    name: \"Jerrifers Sumpfloch\",\r\n    sector_id: 883,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9757.06,\r\n        15467.8\r\n    ]\r\n}, {\r\n    id: \"94-65\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-38\",\r\n    name: \"Weitsicht\",\r\n    sector_id: 955,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-6\",\r\n    name: \"Speldan-Kahlschlag\",\r\n    sector_id: 844,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9739.81,\r\n        13586.9\r\n    ]\r\n}, {\r\n    id: \"94-39\",\r\n    name: \"Das Gottesschwert\",\r\n    sector_id: 953,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-64\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-37\",\r\n    name: \"Festung von\",\r\n    sector_id: 952,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-2\",\r\n    name: \"Tal von\",\r\n    sector_id: 834,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11268.9,\r\n        15087.7\r\n    ]\r\n}, {\r\n    id: \"95-47\",\r\n    name: \"Sonnenhügel\",\r\n    sector_id: 1007,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-67\",\r\n    name: \"Teufelsherz-See\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-68\",\r\n    name: \"Teufelsherz-See\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-53\",\r\n    name: \"Grüntal-Zuflucht\",\r\n    sector_id: 971,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-12\",\r\n    name: \"Wildbach-Strecke\",\r\n    sector_id: 885,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9958.23,\r\n        14605.7\r\n    ]\r\n}, {\r\n    id: \"96-25\",\r\n    name: \"Rotstrauch\",\r\n    sector_id: 990,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-111\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-112\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-71\",\r\n    name: \"Teufelsherz-See\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-46\",\r\n    name: \"Festung von\",\r\n    sector_id: 992,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-52\",\r\n    name: \"Arahs Hoffnung\",\r\n    sector_id: 956,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-16\",\r\n    name: \"Quentin-See\",\r\n    sector_id: 889,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10951.8,\r\n        15121.2\r\n    ]\r\n}, {\r\n    id: \"38-22\",\r\n    name: \"Bravost-Abhang\",\r\n    sector_id: 886,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11750.2,\r\n        14859.4\r\n    ]\r\n}, {\r\n    id: \"95-49\",\r\n    name: \"Blautal-Zuflucht\",\r\n    sector_id: 1005,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-19\",\r\n    name: \"Ogerwacht-Kanal\",\r\n    sector_id: 892,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10965,\r\n        13951\r\n    ]\r\n}, {\r\n    id: \"95-76\",\r\n    name: \"Dämonenzauber-See\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-73\",\r\n    name: \"Dämonenzauber-See\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-51\",\r\n    name: \"Astralholm\",\r\n    sector_id: 960,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-66\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-4\",\r\n    name: \"Golanta-Lichtung\",\r\n    sector_id: 849,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10198.9,\r\n        15520.2\r\n    ]\r\n}, {\r\n    id: \"94-34\",\r\n    name: \"Sieger-Halle\",\r\n    sector_id: 963,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-28\",\r\n    name: \"Horst der Morgendämmerung\",\r\n    sector_id: 987,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-59\",\r\n    name: \"Rottal-Zuflucht\",\r\n    sector_id: 985,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-36\",\r\n    name: \"Blausee\",\r\n    sector_id: 965,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-50\",\r\n    name: \"Blauwasser-Tiefland\",\r\n    sector_id: 972,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-8\",\r\n    name: \"Umberlichtung-Forst\",\r\n    sector_id: 835,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11680.9,\r\n        14353.6\r\n    ]\r\n}, {\r\n    id: \"94-63\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-70\",\r\n    name: \"Teufelsherz-See\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-69\",\r\n    name: \"Teufelsherz-See\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-60\",\r\n    name: \"Sternhain\",\r\n    sector_id: 986,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-40\",\r\n    name: \"Felswand\",\r\n    sector_id: 959,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-61\",\r\n    name: \"Grünwasser-Tiefland\",\r\n    sector_id: 983,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-23\",\r\n    name: \"Askalion-Hügel\",\r\n    sector_id: 979,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-74\",\r\n    name: \"Dämonenzauber-See\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-10\",\r\n    name: \"Schurkenbruch\",\r\n    sector_id: 851,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9612.54,\r\n        14462.8\r\n    ]\r\n}, {\r\n    id: \"96-24\",\r\n    name: \"Champions Landsitz\",\r\n    sector_id: 984,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-18\",\r\n    name: \"Anzalias-Pass\",\r\n    sector_id: 893,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10243.3,\r\n        13974.4\r\n    ]\r\n}, {\r\n    id: \"95-72\",\r\n    name: \"Dämonenzauber-See\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-58\",\r\n    name: \"Gottessage\",\r\n    sector_id: 991,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"968-98\",\r\n    name: \"Wurmtunnel\",\r\n    sector_id: 1156,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6750.92,\r\n        10211.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/087491CDD56F7FB998C332360D32FD26A8B2A99D/730428.png\"\r\n}, {\r\n    id: \"968-96\",\r\n    name: \"Flughafen\",\r\n    sector_id: 1153,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7054.16,\r\n        10421\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/ACCCB1BD617598C0EA9C756EADE53DF36C2578EC/730427.png\"\r\n}, {\r\n    id: \"968-82\",\r\n    name: \"Donnersenkenreaktor\",\r\n    sector_id: 1168,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8282.77,\r\n        10425.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-93\",\r\n    name: \"Schmiede\",\r\n    sector_id: 1154,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8223.64,\r\n        10692.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D1AB541FC3BE12AC5BBB020212BEBE3F5C0C4315/730415.png\"\r\n}, {\r\n    id: \"968-80\",\r\n    name: \"Überwucherter Gotteshaus-Reaktor\",\r\n    sector_id: 1162,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7513.83,\r\n        9059.96\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-94\",\r\n    name: \"Schrein\",\r\n    sector_id: 1164,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8614.89,\r\n        10246.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B5709941B0352FD4CA3B7AFDA42873D8EFDB15AD/730414.png\"\r\n}, {\r\n    id: \"968-90\",\r\n    name: \"Altar\",\r\n    sector_id: 1160,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7240.66,\r\n        9253.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/DC01EC41D8809B59B85BEEDC45E9556D730BD21A/730413.png\"\r\n}, {\r\n    id: \"968-97\",\r\n    name: \"Werkstatt\",\r\n    sector_id: 1152,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6837.6,\r\n        10845.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B34C2E3D0F34FD03F44BB5ED4E18DCDD0059A5C4/730429.png\"\r\n}, {\r\n    id: \"968-81\",\r\n    name: \"Dürrefestungreaktor\",\r\n    sector_id: 1163,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6823.83,\r\n        10479.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-83\",\r\n    name: \"Steinblick-Zackenstabreaktor\",\r\n    sector_id: 1167,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7249.21,\r\n        9763.87\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-95\",\r\n    name: \"Glockenturm\",\r\n    sector_id: 1173,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8180.68,\r\n        10325.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D4180774DD03A4BC7252B952680E451F16679A72/730410.png\"\r\n}, {\r\n    id: \"968-91\",\r\n    name: \"Observatorium\",\r\n    sector_id: 1158,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7953.67,\r\n        9062.79\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/015CF16C78DFDAD742E1A5613FB74B6463BF4A70/730411.png\"\r\n}, {\r\n    id: \"968-78\",\r\n    name: \"Überwuchertes Gotteshaus\",\r\n    sector_id: 1161,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7606.7,\r\n        8882.14\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-88\",\r\n    name: \"Dürrefestung\",\r\n    sector_id: 1157,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6442.17,\r\n        10881.8\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-89\",\r\n    name: \"Tytonenwarte\",\r\n    sector_id: 1172,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7884.81,\r\n        9809.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-79\",\r\n    name: \"Donnersenke\",\r\n    sector_id: 1169,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8506.75,\r\n        10824.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-85\",\r\n    name: \"Tytonenwarte-Reaktor\",\r\n    sector_id: 1165,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7852.89,\r\n        9855.56\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-77\",\r\n    name: \"Infernonadel\",\r\n    sector_id: 1171,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7504.84,\r\n        10598.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-87\",\r\n    name: \"Steinblick-Zackenstab\",\r\n    sector_id: 1170,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7164.46,\r\n        9805.15\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-84\",\r\n    name: \"Infernonadel-Reaktor\",\r\n    sector_id: 1166,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7581.91,\r\n        10316.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-92\",\r\n    name: \"Statue\",\r\n    sector_id: 1159,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7553.12,\r\n        9360.16\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/4C0113B6DF2E4E2CBB93244AD50DA49456D5014E/730412.png\"\r\n}];\n},{}],9:[function(require,module,exports){\nmodule.exports = [{\r\n    id: \"1099-99\",\r\n    name: \"Hamm's Lab\",\r\n    sector_id: 1314,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10864,\r\n        9559.49\r\n    ]\r\n}, {\r\n    id: \"1102-99\",\r\n    name: \"Lesh's Lab\",\r\n    sector_id: 1291,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7279.95,\r\n        12119.5\r\n    ]\r\n}, {\r\n    id: \"1143-99\",\r\n    name: \"Zakk's Lab\",\r\n    sector_id: 1358,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14448,\r\n        11479.5\r\n    ]\r\n}, {\r\n    id: \"1099-100\",\r\n    name: \"Bauer Farmstead\",\r\n    sector_id: 1280,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11793.7,\r\n        11258.4\r\n    ]\r\n}, {\r\n    id: \"1102-100\",\r\n    name: \"Barrett Farmstead\",\r\n    sector_id: 1345,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8209.71,\r\n        13818.4\r\n    ]\r\n}, {\r\n    id: \"1143-100\",\r\n    name: \"Gee Farmstead\",\r\n    sector_id: 1292,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15377.7,\r\n        13178.4\r\n    ]\r\n}, {\r\n    id: \"1099-101\",\r\n    name: \"McLain's Encampment\",\r\n    sector_id: 1286,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9712.8,\r\n        11263.5\r\n    ]\r\n}, {\r\n    id: \"1102-101\",\r\n    name: \"Patrick's Encampment\",\r\n    sector_id: 1342,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6128.8,\r\n        13823.5\r\n    ]\r\n}, {\r\n    id: \"1143-101\",\r\n    name: \"Habib's Encampment\",\r\n    sector_id: 1306,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13296.8,\r\n        13183.5\r\n    ]\r\n}, {\r\n    id: \"1099-102\",\r\n    name: \"O'del Academy\",\r\n    sector_id: 1352,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9832.4,\r\n        9594.63\r\n    ]\r\n}, {\r\n    id: \"1102-102\",\r\n    name: \"Y'lan Academy\",\r\n    sector_id: 1336,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6248.4,\r\n        12154.6\r\n    ]\r\n}, {\r\n    id: \"1143-102\",\r\n    name: \"Kay'li Academy\",\r\n    sector_id: 1337,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13416.4,\r\n        11514.6\r\n    ]\r\n}, {\r\n    id: \"1099-104\",\r\n    name: \"Eternal Necropolis\",\r\n    sector_id: 1308,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11802.7,\r\n        9664.75\r\n    ]\r\n}, {\r\n    id: \"1102-104\",\r\n    name: \"Deathless Necropolis\",\r\n    sector_id: 1325,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8218.72,\r\n        12224.7\r\n    ]\r\n}, {\r\n    id: \"1143-104\",\r\n    name: \"Undying Necropolis\",\r\n    sector_id: 1355,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15386.7,\r\n        11584.7\r\n    ]\r\n}, {\r\n    id: \"1099-105\",\r\n    name: \"Crankshaft Depot\",\r\n    sector_id: 1354,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11264.3,\r\n        11609.4\r\n    ]\r\n}, {\r\n    id: \"1102-105\",\r\n    name: \"Sparkplug Depot\",\r\n    sector_id: 1302,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7680.32,\r\n        14169.4\r\n    ]\r\n}, {\r\n    id: \"1143-105\",\r\n    name: \"Flywheel Depot\",\r\n    sector_id: 1332,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14848.3,\r\n        13529.4\r\n    ]\r\n}, {\r\n    id: \"1099-106\",\r\n    name: \"Blistering Undercroft\",\r\n    sector_id: 1351,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9854.58,\r\n        10578.5\r\n    ]\r\n}, {\r\n    id: \"1102-106\",\r\n    name: \"Scorching Undercroft\",\r\n    sector_id: 1295,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6270.58,\r\n        13138.5\r\n    ]\r\n}, {\r\n    id: \"1143-106\",\r\n    name: \"Torrid Undercroft\",\r\n    sector_id: 1298,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13438.6,\r\n        12498.5\r\n    ]\r\n}, {\r\n    id: \"1099-107\",\r\n    name: \"Border\",\r\n    sector_id: 1311,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        12022.5,\r\n        11789.9\r\n    ]\r\n}, {\r\n    id: \"1102-107\",\r\n    name: \"Border\",\r\n    sector_id: 1310,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8438.49,\r\n        14349.9\r\n    ]\r\n}, {\r\n    id: \"1143-107\",\r\n    name: \"Border\",\r\n    sector_id: 1349,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15606.5,\r\n        13709.9\r\n    ]\r\n}, {\r\n    id: \"1099-108\",\r\n    name: \"Border\",\r\n    sector_id: 1350,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9641.7,\r\n        11749.6\r\n    ]\r\n}, {\r\n    id: \"1102-108\",\r\n    name: \"Border\",\r\n    sector_id: 1359,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6057.7,\r\n        14309.6\r\n    ]\r\n}, {\r\n    id: \"1143-108\",\r\n    name: \"Border\",\r\n    sector_id: 1285,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13225.7,\r\n        13669.6\r\n    ]\r\n}, {\r\n    id: \"1099-109\",\r\n    name: \"Roy's Refuge\",\r\n    sector_id: 1322,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11954.6,\r\n        10068.5\r\n    ]\r\n}, {\r\n    id: \"1102-109\",\r\n    name: \"Norfolk's Refuge\",\r\n    sector_id: 1290,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8370.6,\r\n        12628.5\r\n    ]\r\n}, {\r\n    id: \"1143-109\",\r\n    name: \"Olivier's Refuge\",\r\n    sector_id: 1304,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15538.6,\r\n        11988.5\r\n    ]\r\n}, {\r\n    id: \"1099-110\",\r\n    name: \"Parched Outpost\",\r\n    sector_id: 1277,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10255,\r\n        11576\r\n    ]\r\n}, {\r\n    id: \"1102-110\",\r\n    name: \"Withered Outpost\",\r\n    sector_id: 1283,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6671.05,\r\n        14136\r\n    ]\r\n}, {\r\n    id: \"1143-110\",\r\n    name: \"Barren Outpost\",\r\n    sector_id: 1328,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13839,\r\n        13496\r\n    ]\r\n}, {\r\n    id: \"1099-113\",\r\n    name: \"Stoic Rampart\",\r\n    sector_id: 1303,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10812.3,\r\n        10102.9\r\n    ]\r\n}, {\r\n    id: \"1102-113\",\r\n    name: \"Impassive Rampart\",\r\n    sector_id: 1318,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7228.32,\r\n        12662.9\r\n    ]\r\n}, {\r\n    id: \"1143-113\",\r\n    name: \"Hardened Rampart\",\r\n    sector_id: 1293,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14396.3,\r\n        12022.9\r\n    ]\r\n}, {\r\n    id: \"1099-114\",\r\n    name: \"Osprey's Palace\",\r\n    sector_id: 1300,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11788,\r\n        10660.2\r\n    ]\r\n}, {\r\n    id: \"1102-114\",\r\n    name: \"Harrier's Palace\",\r\n    sector_id: 1287,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8204,\r\n        13220.2\r\n    ]\r\n}, {\r\n    id: \"1143-114\",\r\n    name: \"Shrike's Palace\",\r\n    sector_id: 1356,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15372,\r\n        12580.2\r\n    ]\r\n}, {\r\n    id: \"1099-115\",\r\n    name: \"Boettiger's Hideaway\",\r\n    sector_id: 1316,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9585.9,\r\n        10037.1\r\n    ]\r\n}, {\r\n    id: \"1102-115\",\r\n    name: \"Hughe's Hideaway\",\r\n    sector_id: 1324,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6001.9,\r\n        12597.1\r\n    ]\r\n}, {\r\n    id: \"1143-115\",\r\n    name: \"Berdrow's Hideaway\",\r\n    sector_id: 1357,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13169.9,\r\n        11957.1\r\n    ]\r\n}, {\r\n    id: \"1099-116\",\r\n    name: \"Dustwhisper Well\",\r\n    sector_id: 1296,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10773.3,\r\n        11652.5\r\n    ]\r\n}, {\r\n    id: \"1102-116\",\r\n    name: \"Smashedhope Well\",\r\n    sector_id: 1338,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7189.29,\r\n        14212.5\r\n    ]\r\n}, {\r\n    id: \"1143-116\",\r\n    name: \"Lastgasp Well\",\r\n    sector_id: 1301,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14357.3,\r\n        13572.5\r\n    ]\r\n}, {\r\n    id: \"1099-117\",\r\n    name: \"Citadel\",\r\n    sector_id: 1343,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10590.2,\r\n        9169.19\r\n    ]\r\n}, {\r\n    id: \"1102-117\",\r\n    name: \"Citadel\",\r\n    sector_id: 1315,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7006.19,\r\n        11729.2\r\n    ]\r\n}, {\r\n    id: \"1143-117\",\r\n    name: \"Citadel\",\r\n    sector_id: 1279,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14174.2,\r\n        11089.2\r\n    ]\r\n}, {\r\n    id: \"95-48\",\r\n    name: \"Faithleap\",\r\n    sector_id: 1010,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-11\",\r\n    name: \"Aldon's Ledge\",\r\n    sector_id: 882,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9417.39,\r\n        14790.7\r\n    ]\r\n}, {\r\n    id: \"95-43\",\r\n    name: \"Hero's Lodge\",\r\n    sector_id: 1004,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-62\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-31\",\r\n    name: \"Ascension Bay\",\r\n    sector_id: 973,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-29\",\r\n    name: \"The Spiritholme\",\r\n    sector_id: 978,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-1\",\r\n    name: \"Overlook\",\r\n    sector_id: 843,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10698.4,\r\n        13761\r\n    ]\r\n}, {\r\n    id: \"38-15\",\r\n    name: \"Langor Gulch\",\r\n    sector_id: 887,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11465.3,\r\n        15569.6\r\n    ]\r\n}, {\r\n    id: \"38-3\",\r\n    name: \"Lowlands\",\r\n    sector_id: 848,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9840.25,\r\n        14983.6\r\n    ]\r\n}, {\r\n    id: \"38-17\",\r\n    name: \"Mendon's Gap\",\r\n    sector_id: 890,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10192.7,\r\n        13410.8\r\n    ]\r\n}, {\r\n    id: \"94-35\",\r\n    name: \"Greenbriar\",\r\n    sector_id: 964,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-7\",\r\n    name: \"Danelon Passage\",\r\n    sector_id: 837,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10996.4,\r\n        15545.8\r\n    ]\r\n}, {\r\n    id: \"96-27\",\r\n    name: \"Garrison\",\r\n    sector_id: 976,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-103\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-30\",\r\n    name: \"Woodhaven\",\r\n    sector_id: 988,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-41\",\r\n    name: \"Shadaran Hills\",\r\n    sector_id: 996,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-32\",\r\n    name: \"Etheron Hills\",\r\n    sector_id: 962,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-56\",\r\n    name: \"The Titanpaw\",\r\n    sector_id: 998,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-75\",\r\n    name: \"Daemonspell Lake\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-9\",\r\n    name: \"Stonemist Castle\",\r\n    sector_id: 833,\r\n    type: \"Castle\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10627.3,\r\n        14501.3\r\n    ]\r\n}, {\r\n    id: \"95-57\",\r\n    name: \"Cragtop\",\r\n    sector_id: 1006,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-5\",\r\n    name: \"Pangloss Rise\",\r\n    sector_id: 846,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11201.6,\r\n        13718.4\r\n    ]\r\n}, {\r\n    id: \"94-33\",\r\n    name: \"Dreaming Bay\",\r\n    sector_id: 957,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-42\",\r\n    name: \"Redlake\",\r\n    sector_id: 1008,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-21\",\r\n    name: \"Durios Gulch\",\r\n    sector_id: 888,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11207.1,\r\n        14595\r\n    ]\r\n}, {\r\n    id: \"95-54\",\r\n    name: \"Foghaven\",\r\n    sector_id: 995,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-55\",\r\n    name: \"Redwater Lowlands\",\r\n    sector_id: 1003,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-26\",\r\n    name: \"Greenlake\",\r\n    sector_id: 989,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-20\",\r\n    name: \"Veloka Slope\",\r\n    sector_id: 891,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11017.4,\r\n        13414.4\r\n    ]\r\n}, {\r\n    id: \"95-44\",\r\n    name: \"Dreadfall Bay\",\r\n    sector_id: 999,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-45\",\r\n    name: \"Bluebriar\",\r\n    sector_id: 1009,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-14\",\r\n    name: \"Klovan Gully\",\r\n    sector_id: 884,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10219.5,\r\n        15107.6\r\n    ]\r\n}, {\r\n    id: \"38-13\",\r\n    name: \"Jerrifer's Slough\",\r\n    sector_id: 883,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9757.06,\r\n        15467.8\r\n    ]\r\n}, {\r\n    id: \"94-65\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-38\",\r\n    name: \"Longview\",\r\n    sector_id: 955,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-6\",\r\n    name: \"Speldan Clearcut\",\r\n    sector_id: 844,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9739.81,\r\n        13586.9\r\n    ]\r\n}, {\r\n    id: \"94-39\",\r\n    name: \"The Godsword\",\r\n    sector_id: 953,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-64\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-37\",\r\n    name: \"Garrison\",\r\n    sector_id: 952,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-2\",\r\n    name: \"Valley\",\r\n    sector_id: 834,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11268.9,\r\n        15087.7\r\n    ]\r\n}, {\r\n    id: \"95-47\",\r\n    name: \"Sunnyhill\",\r\n    sector_id: 1007,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-67\",\r\n    name: \"Devilheart Lake\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-68\",\r\n    name: \"Devilheart Lake\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-53\",\r\n    name: \"Greenvale Refuge\",\r\n    sector_id: 971,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-12\",\r\n    name: \"Wildcreek Run\",\r\n    sector_id: 885,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9958.23,\r\n        14605.7\r\n    ]\r\n}, {\r\n    id: \"96-25\",\r\n    name: \"Redbriar\",\r\n    sector_id: 990,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-111\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-112\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-71\",\r\n    name: \"Devilheart Lake\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-46\",\r\n    name: \"Garrison\",\r\n    sector_id: 992,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-52\",\r\n    name: \"Arah's Hope\",\r\n    sector_id: 956,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-16\",\r\n    name: \"Quentin Lake\",\r\n    sector_id: 889,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10951.8,\r\n        15121.2\r\n    ]\r\n}, {\r\n    id: \"38-22\",\r\n    name: \"Bravost Escarpment\",\r\n    sector_id: 886,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11750.2,\r\n        14859.4\r\n    ]\r\n}, {\r\n    id: \"95-49\",\r\n    name: \"Bluevale Refuge\",\r\n    sector_id: 1005,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-19\",\r\n    name: \"Ogrewatch Cut\",\r\n    sector_id: 892,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10965,\r\n        13951\r\n    ]\r\n}, {\r\n    id: \"95-76\",\r\n    name: \"Daemonspell Lake\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-73\",\r\n    name: \"Daemonspell Lake\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-51\",\r\n    name: \"Astralholme\",\r\n    sector_id: 960,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-66\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-4\",\r\n    name: \"Golanta Clearing\",\r\n    sector_id: 849,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10198.9,\r\n        15520.2\r\n    ]\r\n}, {\r\n    id: \"94-34\",\r\n    name: \"Victor's Lodge\",\r\n    sector_id: 963,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-28\",\r\n    name: \"Dawn's Eyrie\",\r\n    sector_id: 987,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-59\",\r\n    name: \"Redvale Refuge\",\r\n    sector_id: 985,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-36\",\r\n    name: \"Bluelake\",\r\n    sector_id: 965,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-50\",\r\n    name: \"Bluewater Lowlands\",\r\n    sector_id: 972,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-8\",\r\n    name: \"Umberglade Woods\",\r\n    sector_id: 835,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11680.9,\r\n        14353.6\r\n    ]\r\n}, {\r\n    id: \"94-63\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-70\",\r\n    name: \"Devilheart Lake\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-69\",\r\n    name: \"Devilheart Lake\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-60\",\r\n    name: \"Stargrove\",\r\n    sector_id: 986,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-40\",\r\n    name: \"Cliffside\",\r\n    sector_id: 959,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-61\",\r\n    name: \"Greenwater Lowlands\",\r\n    sector_id: 983,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-23\",\r\n    name: \"Askalion Hills\",\r\n    sector_id: 979,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-74\",\r\n    name: \"Daemonspell Lake\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-10\",\r\n    name: \"Rogue's Quarry\",\r\n    sector_id: 851,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9612.54,\r\n        14462.8\r\n    ]\r\n}, {\r\n    id: \"96-24\",\r\n    name: \"Champion's Demesne\",\r\n    sector_id: 984,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-18\",\r\n    name: \"Anzalias Pass\",\r\n    sector_id: 893,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10243.3,\r\n        13974.4\r\n    ]\r\n}, {\r\n    id: \"95-72\",\r\n    name: \"Daemonspell Lake\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-58\",\r\n    name: \"Godslore\",\r\n    sector_id: 991,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"968-98\",\r\n    name: \"Wurm Tunnel\",\r\n    sector_id: 1156,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6750.92,\r\n        10211.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/087491CDD56F7FB998C332360D32FD26A8B2A99D/730428.png\"\r\n}, {\r\n    id: \"968-96\",\r\n    name: \"Airport\",\r\n    sector_id: 1153,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7054.16,\r\n        10421\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/ACCCB1BD617598C0EA9C756EADE53DF36C2578EC/730427.png\"\r\n}, {\r\n    id: \"968-82\",\r\n    name: \"Thunder Hollow Reactor\",\r\n    sector_id: 1168,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8282.77,\r\n        10425.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-93\",\r\n    name: \"Forge\",\r\n    sector_id: 1154,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8223.64,\r\n        10692.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D1AB541FC3BE12AC5BBB020212BEBE3F5C0C4315/730415.png\"\r\n}, {\r\n    id: \"968-80\",\r\n    name: \"Overgrown Fane Reactor\",\r\n    sector_id: 1162,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7513.83,\r\n        9059.96\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-94\",\r\n    name: \"Shrine\",\r\n    sector_id: 1164,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8614.89,\r\n        10246.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B5709941B0352FD4CA3B7AFDA42873D8EFDB15AD/730414.png\"\r\n}, {\r\n    id: \"968-90\",\r\n    name: \"Altar\",\r\n    sector_id: 1160,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7240.66,\r\n        9253.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/DC01EC41D8809B59B85BEEDC45E9556D730BD21A/730413.png\"\r\n}, {\r\n    id: \"968-97\",\r\n    name: \"Workshop\",\r\n    sector_id: 1152,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6837.6,\r\n        10845.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B34C2E3D0F34FD03F44BB5ED4E18DCDD0059A5C4/730429.png\"\r\n}, {\r\n    id: \"968-81\",\r\n    name: \"Arid Fortress Reactor\",\r\n    sector_id: 1163,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6823.83,\r\n        10479.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-83\",\r\n    name: \"Stonegaze Spire Reactor\",\r\n    sector_id: 1167,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7249.21,\r\n        9763.87\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-95\",\r\n    name: \"Bell Tower\",\r\n    sector_id: 1173,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8180.68,\r\n        10325.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D4180774DD03A4BC7252B952680E451F16679A72/730410.png\"\r\n}, {\r\n    id: \"968-91\",\r\n    name: \"Observatory\",\r\n    sector_id: 1158,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7953.67,\r\n        9062.79\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/015CF16C78DFDAD742E1A5613FB74B6463BF4A70/730411.png\"\r\n}, {\r\n    id: \"968-78\",\r\n    name: \"Overgrown Fane\",\r\n    sector_id: 1161,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7606.7,\r\n        8882.14\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-88\",\r\n    name: \"Arid Fortress\",\r\n    sector_id: 1157,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6442.17,\r\n        10881.8\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-89\",\r\n    name: \"Tytone Perch\",\r\n    sector_id: 1172,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7884.81,\r\n        9809.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-79\",\r\n    name: \"Thunder Hollow\",\r\n    sector_id: 1169,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8506.75,\r\n        10824.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-85\",\r\n    name: \"Tytone Perch Reactor\",\r\n    sector_id: 1165,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7852.89,\r\n        9855.56\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-77\",\r\n    name: \"Inferno's Needle\",\r\n    sector_id: 1171,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7504.84,\r\n        10598.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-87\",\r\n    name: \"Stonegaze Spire\",\r\n    sector_id: 1170,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7164.46,\r\n        9805.15\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-84\",\r\n    name: \"Inferno's Needle Reactor\",\r\n    sector_id: 1166,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7581.91,\r\n        10316.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-92\",\r\n    name: \"Statuary\",\r\n    sector_id: 1159,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7553.12,\r\n        9360.16\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/4C0113B6DF2E4E2CBB93244AD50DA49456D5014E/730412.png\"\r\n}];\r\n\n},{}],10:[function(require,module,exports){\nmodule.exports = [{\r\n    id: \"1099-99\",\r\n    name: \"Laboratorio de Hamm\",\r\n    sector_id: 1314,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10864,\r\n        9559.49\r\n    ]\r\n}, {\r\n    id: \"1102-99\",\r\n    name: \"Laboratorio de Lesh\",\r\n    sector_id: 1291,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7279.95,\r\n        12119.5\r\n    ]\r\n}, {\r\n    id: \"1143-99\",\r\n    name: \"Laboratorio de Zakk\",\r\n    sector_id: 1358,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14448,\r\n        11479.5\r\n    ]\r\n}, {\r\n    id: \"1099-100\",\r\n    name: \"Hacienda de Bauer\",\r\n    sector_id: 1280,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11793.7,\r\n        11258.4\r\n    ]\r\n}, {\r\n    id: \"1102-100\",\r\n    name: \"Hacienda de Barrett\",\r\n    sector_id: 1345,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8209.71,\r\n        13818.4\r\n    ]\r\n}, {\r\n    id: \"1143-100\",\r\n    name: \"Hacienda de Gee\",\r\n    sector_id: 1292,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15377.7,\r\n        13178.4\r\n    ]\r\n}, {\r\n    id: \"1099-101\",\r\n    name: \"Campamento de McLain\",\r\n    sector_id: 1286,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9712.8,\r\n        11263.5\r\n    ]\r\n}, {\r\n    id: \"1102-101\",\r\n    name: \"Campamento de Patrick\",\r\n    sector_id: 1342,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6128.8,\r\n        13823.5\r\n    ]\r\n}, {\r\n    id: \"1143-101\",\r\n    name: \"Campamento de Habib\",\r\n    sector_id: 1306,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13296.8,\r\n        13183.5\r\n    ]\r\n}, {\r\n    id: \"1099-102\",\r\n    name: \"Academia O'del\",\r\n    sector_id: 1352,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9832.4,\r\n        9594.63\r\n    ]\r\n}, {\r\n    id: \"1102-102\",\r\n    name: \"Academia Y'lan\",\r\n    sector_id: 1336,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6248.4,\r\n        12154.6\r\n    ]\r\n}, {\r\n    id: \"1143-102\",\r\n    name: \"Academia Kay'li\",\r\n    sector_id: 1337,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13416.4,\r\n        11514.6\r\n    ]\r\n}, {\r\n    id: \"1099-104\",\r\n    name: \"Necrópolis Eterna\",\r\n    sector_id: 1308,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11802.7,\r\n        9664.75\r\n    ]\r\n}, {\r\n    id: \"1102-104\",\r\n    name: \"Necrópolis Inmortal\",\r\n    sector_id: 1325,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8218.72,\r\n        12224.7\r\n    ]\r\n}, {\r\n    id: \"1143-104\",\r\n    name: \"Necrópolis Imperecedera\",\r\n    sector_id: 1355,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15386.7,\r\n        11584.7\r\n    ]\r\n}, {\r\n    id: \"1099-105\",\r\n    name: \"Depósito de Palancamanijas\",\r\n    sector_id: 1354,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11264.3,\r\n        11609.4\r\n    ]\r\n}, {\r\n    id: \"1102-105\",\r\n    name: \"Depósito de Bujías\",\r\n    sector_id: 1302,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7680.32,\r\n        14169.4\r\n    ]\r\n}, {\r\n    id: \"1143-105\",\r\n    name: \"Depósito de Volantes\",\r\n    sector_id: 1332,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14848.3,\r\n        13529.4\r\n    ]\r\n}, {\r\n    id: \"1099-106\",\r\n    name: \"Sótano Achicharrante\",\r\n    sector_id: 1351,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9854.58,\r\n        10578.5\r\n    ]\r\n}, {\r\n    id: \"1102-106\",\r\n    name: \"Sótano Abrasador\",\r\n    sector_id: 1295,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6270.58,\r\n        13138.5\r\n    ]\r\n}, {\r\n    id: \"1143-106\",\r\n    name: \"Sótano Sofocante\",\r\n    sector_id: 1298,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13438.6,\r\n        12498.5\r\n    ]\r\n}, {\r\n    id: \"1099-107\",\r\n    name: \"Frontera\",\r\n    sector_id: 1311,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        12022.5,\r\n        11789.9\r\n    ]\r\n}, {\r\n    id: \"1102-107\",\r\n    name: \"Frontera\",\r\n    sector_id: 1310,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8438.49,\r\n        14349.9\r\n    ]\r\n}, {\r\n    id: \"1143-107\",\r\n    name: \"Frontera\",\r\n    sector_id: 1349,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15606.5,\r\n        13709.9\r\n    ]\r\n}, {\r\n    id: \"1099-108\",\r\n    name: \"Frontera\",\r\n    sector_id: 1350,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9641.7,\r\n        11749.6\r\n    ]\r\n}, {\r\n    id: \"1102-108\",\r\n    name: \"Frontera\",\r\n    sector_id: 1359,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6057.7,\r\n        14309.6\r\n    ]\r\n}, {\r\n    id: \"1143-108\",\r\n    name: \"Frontera\",\r\n    sector_id: 1285,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13225.7,\r\n        13669.6\r\n    ]\r\n}, {\r\n    id: \"1099-109\",\r\n    name: \"Refugio de Roy\",\r\n    sector_id: 1322,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11954.6,\r\n        10068.5\r\n    ]\r\n}, {\r\n    id: \"1102-109\",\r\n    name: \"Refugio de Norfolk\",\r\n    sector_id: 1290,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8370.6,\r\n        12628.5\r\n    ]\r\n}, {\r\n    id: \"1143-109\",\r\n    name: \"Refugio de Olivier\",\r\n    sector_id: 1304,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15538.6,\r\n        11988.5\r\n    ]\r\n}, {\r\n    id: \"1099-110\",\r\n    name: \"Puesto Avanzado Abrasado\",\r\n    sector_id: 1277,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10255,\r\n        11576\r\n    ]\r\n}, {\r\n    id: \"1102-110\",\r\n    name: \"Puesto Avanzado Desolado\",\r\n    sector_id: 1283,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6671.05,\r\n        14136\r\n    ]\r\n}, {\r\n    id: \"1143-110\",\r\n    name: \"Puesto Avanzado Abandonado\",\r\n    sector_id: 1328,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13839,\r\n        13496\r\n    ]\r\n}, {\r\n    id: \"1099-113\",\r\n    name: \"Muralla Estoica\",\r\n    sector_id: 1303,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10812.3,\r\n        10102.9\r\n    ]\r\n}, {\r\n    id: \"1102-113\",\r\n    name: \"Muralla Imperturbable\",\r\n    sector_id: 1318,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7228.32,\r\n        12662.9\r\n    ]\r\n}, {\r\n    id: \"1143-113\",\r\n    name: \"Muralla Endurecida\",\r\n    sector_id: 1293,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14396.3,\r\n        12022.9\r\n    ]\r\n}, {\r\n    id: \"1099-114\",\r\n    name: \"Palacio del Águila Pescadora\",\r\n    sector_id: 1300,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11788,\r\n        10660.2\r\n    ]\r\n}, {\r\n    id: \"1102-114\",\r\n    name: \"Palacio del Aguilucho\",\r\n    sector_id: 1287,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8204,\r\n        13220.2\r\n    ]\r\n}, {\r\n    id: \"1143-114\",\r\n    name: \"Palacio del Alcaudón\",\r\n    sector_id: 1356,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15372,\r\n        12580.2\r\n    ]\r\n}, {\r\n    id: \"1099-115\",\r\n    name: \"Escondrijo de Boettiger\",\r\n    sector_id: 1316,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9585.9,\r\n        10037.1\r\n    ]\r\n}, {\r\n    id: \"1102-115\",\r\n    name: \"Escondrijo de Hughe\",\r\n    sector_id: 1324,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6001.9,\r\n        12597.1\r\n    ]\r\n}, {\r\n    id: \"1143-115\",\r\n    name: \"Escondrijo de Berdrow\",\r\n    sector_id: 1357,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13169.9,\r\n        11957.1\r\n    ]\r\n}, {\r\n    id: \"1099-116\",\r\n    name: \"Pozo del Murmullo de Polvo\",\r\n    sector_id: 1296,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10773.3,\r\n        11652.5\r\n    ]\r\n}, {\r\n    id: \"1102-116\",\r\n    name: \"Pozo Tragaesperanza\",\r\n    sector_id: 1338,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7189.29,\r\n        14212.5\r\n    ]\r\n}, {\r\n    id: \"1143-116\",\r\n    name: \"Pozo del Último Suspiro\",\r\n    sector_id: 1301,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14357.3,\r\n        13572.5\r\n    ]\r\n}, {\r\n    id: \"1099-117\",\r\n    name: \"Ciudadela\",\r\n    sector_id: 1343,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10590.2,\r\n        9169.19\r\n    ]\r\n}, {\r\n    id: \"1102-117\",\r\n    name: \"Ciudadela\",\r\n    sector_id: 1315,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7006.19,\r\n        11729.2\r\n    ]\r\n}, {\r\n    id: \"1143-117\",\r\n    name: \"Ciudadela\",\r\n    sector_id: 1279,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14174.2,\r\n        11089.2\r\n    ]\r\n}, {\r\n    id: \"95-48\",\r\n    name: \"Salto de Fe\",\r\n    sector_id: 1010,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-11\",\r\n    name: \"Cornisa de Aldon\",\r\n    sector_id: 882,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9417.39,\r\n        14790.7\r\n    ]\r\n}, {\r\n    id: \"95-43\",\r\n    name: \"Albergue del Héroe\",\r\n    sector_id: 1004,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-62\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-31\",\r\n    name: \"Bahía de la Ascensión\",\r\n    sector_id: 973,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-29\",\r\n    name: \"La Isleta Espiritual\",\r\n    sector_id: 978,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-1\",\r\n    name: \"Mirador\",\r\n    sector_id: 843,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10698.4,\r\n        13761\r\n    ]\r\n}, {\r\n    id: \"38-15\",\r\n    name: \"Barranco Langor\",\r\n    sector_id: 887,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11465.3,\r\n        15569.6\r\n    ]\r\n}, {\r\n    id: \"38-3\",\r\n    name: \"Tierras bajas\",\r\n    sector_id: 848,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9840.25,\r\n        14983.6\r\n    ]\r\n}, {\r\n    id: \"38-17\",\r\n    name: \"Zanja de Mendon\",\r\n    sector_id: 890,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10192.7,\r\n        13410.8\r\n    ]\r\n}, {\r\n    id: \"94-35\",\r\n    name: \"Zarzaverde\",\r\n    sector_id: 964,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-7\",\r\n    name: \"Pasaje Danelon\",\r\n    sector_id: 837,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10996.4,\r\n        15545.8\r\n    ]\r\n}, {\r\n    id: \"96-27\",\r\n    name: \"Fuerte\",\r\n    sector_id: 976,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-103\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-30\",\r\n    name: \"Refugio Forestal\",\r\n    sector_id: 988,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-41\",\r\n    name: \"Colinas Shadaran\",\r\n    sector_id: 996,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-32\",\r\n    name: \"Colinas Etheron\",\r\n    sector_id: 962,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-56\",\r\n    name: \"La Garra del Titán\",\r\n    sector_id: 998,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-75\",\r\n    name: \"Lago Daemonia\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-9\",\r\n    name: \"Castillo Piedraniebla\",\r\n    sector_id: 833,\r\n    type: \"Castle\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10627.3,\r\n        14501.3\r\n    ]\r\n}, {\r\n    id: \"95-57\",\r\n    name: \"Cumbrepeñasco\",\r\n    sector_id: 1006,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-5\",\r\n    name: \"Colina Pangloss\",\r\n    sector_id: 846,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11201.6,\r\n        13718.4\r\n    ]\r\n}, {\r\n    id: \"94-33\",\r\n    name: \"Bahía Onírica\",\r\n    sector_id: 957,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-42\",\r\n    name: \"Lagorrojo\",\r\n    sector_id: 1008,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-21\",\r\n    name: \"Barranco Durios\",\r\n    sector_id: 888,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11207.1,\r\n        14595\r\n    ]\r\n}, {\r\n    id: \"95-54\",\r\n    name: \"Refugio Neblinoso\",\r\n    sector_id: 995,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-55\",\r\n    name: \"Tierras Bajas de Aguarroja\",\r\n    sector_id: 1003,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-26\",\r\n    name: \"Lagoverde\",\r\n    sector_id: 989,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-20\",\r\n    name: \"Pendiente Veloka\",\r\n    sector_id: 891,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11017.4,\r\n        13414.4\r\n    ]\r\n}, {\r\n    id: \"95-44\",\r\n    name: \"Bahía Salto Aciago\",\r\n    sector_id: 999,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-45\",\r\n    name: \"Zarzazul\",\r\n    sector_id: 1009,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-14\",\r\n    name: \"Barranco Klovan\",\r\n    sector_id: 884,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10219.5,\r\n        15107.6\r\n    ]\r\n}, {\r\n    id: \"38-13\",\r\n    name: \"Cenagal de Jerrifer\",\r\n    sector_id: 883,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9757.06,\r\n        15467.8\r\n    ]\r\n}, {\r\n    id: \"94-65\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-38\",\r\n    name: \"Vistaluenga\",\r\n    sector_id: 955,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-6\",\r\n    name: \"Claro Espeldia\",\r\n    sector_id: 844,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9739.81,\r\n        13586.9\r\n    ]\r\n}, {\r\n    id: \"94-39\",\r\n    name: \"La Hoja Divina\",\r\n    sector_id: 953,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-64\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-37\",\r\n    name: \"Fuerte\",\r\n    sector_id: 952,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-2\",\r\n    name: \"Valle\",\r\n    sector_id: 834,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11268.9,\r\n        15087.7\r\n    ]\r\n}, {\r\n    id: \"95-47\",\r\n    name: \"Colina Soleada\",\r\n    sector_id: 1007,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-67\",\r\n    name: \"Lago Corazonvil\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-68\",\r\n    name: \"Lago Corazonvil\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-53\",\r\n    name: \"Refugio Valleverde\",\r\n    sector_id: 971,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-12\",\r\n    name: \"Pista Arroyosalvaje\",\r\n    sector_id: 885,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9958.23,\r\n        14605.7\r\n    ]\r\n}, {\r\n    id: \"96-25\",\r\n    name: \"Zarzarroja\",\r\n    sector_id: 990,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-111\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-112\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-71\",\r\n    name: \"Lago Corazonvil\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-46\",\r\n    name: \"Fuerte\",\r\n    sector_id: 992,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-52\",\r\n    name: \"Esperanza de Arah\",\r\n    sector_id: 956,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-16\",\r\n    name: \"Lago Quentin\",\r\n    sector_id: 889,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10951.8,\r\n        15121.2\r\n    ]\r\n}, {\r\n    id: \"38-22\",\r\n    name: \"Escarpadura Bravost\",\r\n    sector_id: 886,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11750.2,\r\n        14859.4\r\n    ]\r\n}, {\r\n    id: \"95-49\",\r\n    name: \"Refugio Valleazul\",\r\n    sector_id: 1005,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-19\",\r\n    name: \"Tajo de la Guardia del Ogro\",\r\n    sector_id: 892,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10965,\r\n        13951\r\n    ]\r\n}, {\r\n    id: \"95-76\",\r\n    name: \"Lago Daemonia\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-73\",\r\n    name: \"Lago Daemonia\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-51\",\r\n    name: \"Isleta Astral\",\r\n    sector_id: 960,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-66\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-4\",\r\n    name: \"Claro Golanta\",\r\n    sector_id: 849,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10198.9,\r\n        15520.2\r\n    ]\r\n}, {\r\n    id: \"94-34\",\r\n    name: \"Albergue del Vencedor\",\r\n    sector_id: 963,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-28\",\r\n    name: \"Aguilera del Alba\",\r\n    sector_id: 987,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-59\",\r\n    name: \"Refugio Vallerrojo\",\r\n    sector_id: 985,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-36\",\r\n    name: \"Lagoazul\",\r\n    sector_id: 965,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-50\",\r\n    name: \"Tierras Bajas de Aguazul\",\r\n    sector_id: 972,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-8\",\r\n    name: \"Bosques Clarosombra\",\r\n    sector_id: 835,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11680.9,\r\n        14353.6\r\n    ]\r\n}, {\r\n    id: \"94-63\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-70\",\r\n    name: \"Lago Corazonvil\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-69\",\r\n    name: \"Lago Corazonvil\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-60\",\r\n    name: \"Arboleda de las Estrellas\",\r\n    sector_id: 986,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-40\",\r\n    name: \"Despeñadero\",\r\n    sector_id: 959,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-61\",\r\n    name: \"Tierras bajas de Aguaverde\",\r\n    sector_id: 983,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-23\",\r\n    name: \"Colinas Askalion\",\r\n    sector_id: 979,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-74\",\r\n    name: \"Lago Daemonia\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-10\",\r\n    name: \"Cantera del Pícaro\",\r\n    sector_id: 851,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9612.54,\r\n        14462.8\r\n    ]\r\n}, {\r\n    id: \"96-24\",\r\n    name: \"Patrimonio del Campeón\",\r\n    sector_id: 984,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-18\",\r\n    name: \"Paso Anzalias\",\r\n    sector_id: 893,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10243.3,\r\n        13974.4\r\n    ]\r\n}, {\r\n    id: \"95-72\",\r\n    name: \"Lago Daemonia\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-58\",\r\n    name: \"Sabiduría de los Dioses\",\r\n    sector_id: 991,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"968-98\",\r\n    name: \"Túnel de la Sierpe\",\r\n    sector_id: 1156,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6750.92,\r\n        10211.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/087491CDD56F7FB998C332360D32FD26A8B2A99D/730428.png\"\r\n}, {\r\n    id: \"968-96\",\r\n    name: \"Aeropuerto\",\r\n    sector_id: 1153,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7054.16,\r\n        10421\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/ACCCB1BD617598C0EA9C756EADE53DF36C2578EC/730427.png\"\r\n}, {\r\n    id: \"968-82\",\r\n    name: \"Reactor de Hondonada del Trueno\",\r\n    sector_id: 1168,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8282.77,\r\n        10425.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-93\",\r\n    name: \"Forja\",\r\n    sector_id: 1154,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8223.64,\r\n        10692.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D1AB541FC3BE12AC5BBB020212BEBE3F5C0C4315/730415.png\"\r\n}, {\r\n    id: \"968-80\",\r\n    name: \"Reactor de Fano Gigante\",\r\n    sector_id: 1162,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7513.83,\r\n        9059.96\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-94\",\r\n    name: \"Santuario\",\r\n    sector_id: 1164,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8614.89,\r\n        10246.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B5709941B0352FD4CA3B7AFDA42873D8EFDB15AD/730414.png\"\r\n}, {\r\n    id: \"968-90\",\r\n    name: \"Altar\",\r\n    sector_id: 1160,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7240.66,\r\n        9253.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/DC01EC41D8809B59B85BEEDC45E9556D730BD21A/730413.png\"\r\n}, {\r\n    id: \"968-97\",\r\n    name: \"Taller\",\r\n    sector_id: 1152,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6837.6,\r\n        10845.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B34C2E3D0F34FD03F44BB5ED4E18DCDD0059A5C4/730429.png\"\r\n}, {\r\n    id: \"968-81\",\r\n    name: \"Reactor de Fortaleza Árida\",\r\n    sector_id: 1163,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6823.83,\r\n        10479.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-83\",\r\n    name: \"Reactor de Aguja de Mirapiedras\",\r\n    sector_id: 1167,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7249.21,\r\n        9763.87\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-95\",\r\n    name: \"Campanario\",\r\n    sector_id: 1173,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8180.68,\r\n        10325.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D4180774DD03A4BC7252B952680E451F16679A72/730410.png\"\r\n}, {\r\n    id: \"968-91\",\r\n    name: \"Observatorio\",\r\n    sector_id: 1158,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7953.67,\r\n        9062.79\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/015CF16C78DFDAD742E1A5613FB74B6463BF4A70/730411.png\"\r\n}, {\r\n    id: \"968-78\",\r\n    name: \"Fano Gigante\",\r\n    sector_id: 1161,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7606.7,\r\n        8882.14\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-88\",\r\n    name: \"Fortaleza Árida\",\r\n    sector_id: 1157,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6442.17,\r\n        10881.8\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-89\",\r\n    name: \"Percha de Tytone\",\r\n    sector_id: 1172,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7884.81,\r\n        9809.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-79\",\r\n    name: \"Hondonada del Trueno\",\r\n    sector_id: 1169,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8506.75,\r\n        10824.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-85\",\r\n    name: \"Reactor de Percha de Tytone\",\r\n    sector_id: 1165,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7852.89,\r\n        9855.56\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-77\",\r\n    name: \"Aguja del Infierno\",\r\n    sector_id: 1171,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7504.84,\r\n        10598.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-87\",\r\n    name: \"Aguja de Mirapiedras\",\r\n    sector_id: 1170,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7164.46,\r\n        9805.15\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-84\",\r\n    name: \"Reactor de Aguja del Infierno\",\r\n    sector_id: 1166,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7581.91,\r\n        10316.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-92\",\r\n    name: \"Estatuario\",\r\n    sector_id: 1159,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7553.12,\r\n        9360.16\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/4C0113B6DF2E4E2CBB93244AD50DA49456D5014E/730412.png\"\r\n}];\r\n\n},{}],11:[function(require,module,exports){\nmodule.exports = [{\r\n    id: \"1099-99\",\r\n    name: \"Laboratoire de Hamm\",\r\n    sector_id: 1314,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10864,\r\n        9559.49\r\n    ]\r\n}, {\r\n    id: \"1102-99\",\r\n    name: \"Laboratoire de Lesh\",\r\n    sector_id: 1291,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7279.95,\r\n        12119.5\r\n    ]\r\n}, {\r\n    id: \"1143-99\",\r\n    name: \"Laboratoire de Zakk\",\r\n    sector_id: 1358,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14448,\r\n        11479.5\r\n    ]\r\n}, {\r\n    id: \"1099-100\",\r\n    name: \"Ferme Bauer\",\r\n    sector_id: 1280,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11793.7,\r\n        11258.4\r\n    ]\r\n}, {\r\n    id: \"1102-100\",\r\n    name: \"Ferme Barrett\",\r\n    sector_id: 1345,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8209.71,\r\n        13818.4\r\n    ]\r\n}, {\r\n    id: \"1143-100\",\r\n    name: \"Ferme Gee\",\r\n    sector_id: 1292,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15377.7,\r\n        13178.4\r\n    ]\r\n}, {\r\n    id: \"1099-101\",\r\n    name: \"Campement de McLain\",\r\n    sector_id: 1286,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9712.8,\r\n        11263.5\r\n    ]\r\n}, {\r\n    id: \"1102-101\",\r\n    name: \"Campement de Patrick\",\r\n    sector_id: 1342,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6128.8,\r\n        13823.5\r\n    ]\r\n}, {\r\n    id: \"1143-101\",\r\n    name: \"Campement d'Habib\",\r\n    sector_id: 1306,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13296.8,\r\n        13183.5\r\n    ]\r\n}, {\r\n    id: \"1099-102\",\r\n    name: \"Académie de O'del\",\r\n    sector_id: 1352,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9832.4,\r\n        9594.63\r\n    ]\r\n}, {\r\n    id: \"1102-102\",\r\n    name: \"Académie de Y'lan\",\r\n    sector_id: 1336,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6248.4,\r\n        12154.6\r\n    ]\r\n}, {\r\n    id: \"1143-102\",\r\n    name: \"Académie de Kay'li\",\r\n    sector_id: 1337,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13416.4,\r\n        11514.6\r\n    ]\r\n}, {\r\n    id: \"1099-104\",\r\n    name: \"Nécropole éternelle\",\r\n    sector_id: 1308,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11802.7,\r\n        9664.75\r\n    ]\r\n}, {\r\n    id: \"1102-104\",\r\n    name: \"Nécropole immortelle\",\r\n    sector_id: 1325,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8218.72,\r\n        12224.7\r\n    ]\r\n}, {\r\n    id: \"1143-104\",\r\n    name: \"Nécropole impérissable\",\r\n    sector_id: 1355,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15386.7,\r\n        11584.7\r\n    ]\r\n}, {\r\n    id: \"1099-105\",\r\n    name: \"Dépôt Vilebrequin\",\r\n    sector_id: 1354,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11264.3,\r\n        11609.4\r\n    ]\r\n}, {\r\n    id: \"1102-105\",\r\n    name: \"Dépôt Bougie\",\r\n    sector_id: 1302,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7680.32,\r\n        14169.4\r\n    ]\r\n}, {\r\n    id: \"1143-105\",\r\n    name: \"Dépôt Engrenage\",\r\n    sector_id: 1332,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14848.3,\r\n        13529.4\r\n    ]\r\n}, {\r\n    id: \"1099-106\",\r\n    name: \"Crypte embrasée\",\r\n    sector_id: 1351,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9854.58,\r\n        10578.5\r\n    ]\r\n}, {\r\n    id: \"1102-106\",\r\n    name: \"Crypte cuisante\",\r\n    sector_id: 1295,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6270.58,\r\n        13138.5\r\n    ]\r\n}, {\r\n    id: \"1143-106\",\r\n    name: \"Crypte torride\",\r\n    sector_id: 1298,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13438.6,\r\n        12498.5\r\n    ]\r\n}, {\r\n    id: \"1099-107\",\r\n    name: \"- Frontière\",\r\n    sector_id: 1311,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        12022.5,\r\n        11789.9\r\n    ]\r\n}, {\r\n    id: \"1102-107\",\r\n    name: \"- Frontière\",\r\n    sector_id: 1310,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8438.49,\r\n        14349.9\r\n    ]\r\n}, {\r\n    id: \"1143-107\",\r\n    name: \"- Frontière\",\r\n    sector_id: 1349,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15606.5,\r\n        13709.9\r\n    ]\r\n}, {\r\n    id: \"1099-108\",\r\n    name: \"- Frontière\",\r\n    sector_id: 1350,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9641.7,\r\n        11749.6\r\n    ]\r\n}, {\r\n    id: \"1102-108\",\r\n    name: \"- Frontière\",\r\n    sector_id: 1359,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6057.7,\r\n        14309.6\r\n    ]\r\n}, {\r\n    id: \"1143-108\",\r\n    name: \"- Frontière\",\r\n    sector_id: 1285,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13225.7,\r\n        13669.6\r\n    ]\r\n}, {\r\n    id: \"1099-109\",\r\n    name: \"Refuge de Roy\",\r\n    sector_id: 1322,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11954.6,\r\n        10068.5\r\n    ]\r\n}, {\r\n    id: \"1102-109\",\r\n    name: \"Refuge de Norfolk\",\r\n    sector_id: 1290,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8370.6,\r\n        12628.5\r\n    ]\r\n}, {\r\n    id: \"1143-109\",\r\n    name: \"Refuge d'Olivier\",\r\n    sector_id: 1304,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15538.6,\r\n        11988.5\r\n    ]\r\n}, {\r\n    id: \"1099-110\",\r\n    name: \"Avant-poste dévasté\",\r\n    sector_id: 1277,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10255,\r\n        11576\r\n    ]\r\n}, {\r\n    id: \"1102-110\",\r\n    name: \"Avant-poste ravagé\",\r\n    sector_id: 1283,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6671.05,\r\n        14136\r\n    ]\r\n}, {\r\n    id: \"1143-110\",\r\n    name: \"Avant-poste délabré\",\r\n    sector_id: 1328,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13839,\r\n        13496\r\n    ]\r\n}, {\r\n    id: \"1099-113\",\r\n    name: \"Rempart stoïque\",\r\n    sector_id: 1303,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10812.3,\r\n        10102.9\r\n    ]\r\n}, {\r\n    id: \"1102-113\",\r\n    name: \"Rempart impassible\",\r\n    sector_id: 1318,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7228.32,\r\n        12662.9\r\n    ]\r\n}, {\r\n    id: \"1143-113\",\r\n    name: \"Rempart durci\",\r\n    sector_id: 1293,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14396.3,\r\n        12022.9\r\n    ]\r\n}, {\r\n    id: \"1099-114\",\r\n    name: \"Palais du balbuzard\",\r\n    sector_id: 1300,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11788,\r\n        10660.2\r\n    ]\r\n}, {\r\n    id: \"1102-114\",\r\n    name: \"Palais du circaète\",\r\n    sector_id: 1287,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8204,\r\n        13220.2\r\n    ]\r\n}, {\r\n    id: \"1143-114\",\r\n    name: \"Palais de la pie-grièche\",\r\n    sector_id: 1356,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15372,\r\n        12580.2\r\n    ]\r\n}, {\r\n    id: \"1099-115\",\r\n    name: \"Antre de Boettiger\",\r\n    sector_id: 1316,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9585.9,\r\n        10037.1\r\n    ]\r\n}, {\r\n    id: \"1102-115\",\r\n    name: \"Antre de Hughe\",\r\n    sector_id: 1324,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6001.9,\r\n        12597.1\r\n    ]\r\n}, {\r\n    id: \"1143-115\",\r\n    name: \"Antre de Berdrow\",\r\n    sector_id: 1357,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13169.9,\r\n        11957.1\r\n    ]\r\n}, {\r\n    id: \"1099-116\",\r\n    name: \"Puits du Souffle-poussière\",\r\n    sector_id: 1296,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10773.3,\r\n        11652.5\r\n    ]\r\n}, {\r\n    id: \"1102-116\",\r\n    name: \"Puits du Rêve-brisé\",\r\n    sector_id: 1338,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7189.29,\r\n        14212.5\r\n    ]\r\n}, {\r\n    id: \"1143-116\",\r\n    name: \"Puits du Dernier-soupir\",\r\n    sector_id: 1301,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14357.3,\r\n        13572.5\r\n    ]\r\n}, {\r\n    id: \"1099-117\",\r\n    name: \"- Citadelle\",\r\n    sector_id: 1343,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10590.2,\r\n        9169.19\r\n    ]\r\n}, {\r\n    id: \"1102-117\",\r\n    name: \"- Citadelle\",\r\n    sector_id: 1315,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7006.19,\r\n        11729.2\r\n    ]\r\n}, {\r\n    id: \"1143-117\",\r\n    name: \"- Citadelle\",\r\n    sector_id: 1279,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14174.2,\r\n        11089.2\r\n    ]\r\n}, {\r\n    id: \"95-48\",\r\n    name: \"Saut de la Foi\",\r\n    sector_id: 1010,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-11\",\r\n    name: \"Corniche d'Aldon\",\r\n    sector_id: 882,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9417.39,\r\n        14790.7\r\n    ]\r\n}, {\r\n    id: \"95-43\",\r\n    name: \"Pavillon du Héros\",\r\n    sector_id: 1004,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-62\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-31\",\r\n    name: \"Baie de l'Ascension\",\r\n    sector_id: 973,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-29\",\r\n    name: \"Le Heaume spirituel\",\r\n    sector_id: 978,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-1\",\r\n    name: \"- Belvédère\",\r\n    sector_id: 843,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10698.4,\r\n        13761\r\n    ]\r\n}, {\r\n    id: \"38-15\",\r\n    name: \"Ravin de Langor\",\r\n    sector_id: 887,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11465.3,\r\n        15569.6\r\n    ]\r\n}, {\r\n    id: \"38-3\",\r\n    name: \"- Basses terres\",\r\n    sector_id: 848,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9840.25,\r\n        14983.6\r\n    ]\r\n}, {\r\n    id: \"38-17\",\r\n    name: \"Faille de Mendon\",\r\n    sector_id: 890,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10192.7,\r\n        13410.8\r\n    ]\r\n}, {\r\n    id: \"94-35\",\r\n    name: \"Vert-bruyère\",\r\n    sector_id: 964,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-7\",\r\n    name: \"Passage Danelon\",\r\n    sector_id: 837,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10996.4,\r\n        15545.8\r\n    ]\r\n}, {\r\n    id: \"96-27\",\r\n    name: \"- Garnison\",\r\n    sector_id: 976,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-103\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-30\",\r\n    name: \"Boisrefuge\",\r\n    sector_id: 988,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-41\",\r\n    name: \"Collines Shadaran\",\r\n    sector_id: 996,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-32\",\r\n    name: \"Collines d'Etheron\",\r\n    sector_id: 962,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-56\",\r\n    name: \"Bras du Titan\",\r\n    sector_id: 998,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-75\",\r\n    name: \"Lac de Maldémon\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-9\",\r\n    name: \"Château Brumepierre\",\r\n    sector_id: 833,\r\n    type: \"Castle\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10627.3,\r\n        14501.3\r\n    ]\r\n}, {\r\n    id: \"95-57\",\r\n    name: \"Sommet de Hautcrag\",\r\n    sector_id: 1006,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-5\",\r\n    name: \"Montée de Pangloss\",\r\n    sector_id: 846,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11201.6,\r\n        13718.4\r\n    ]\r\n}, {\r\n    id: \"94-33\",\r\n    name: \"Baie des rêves\",\r\n    sector_id: 957,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-42\",\r\n    name: \"Lac rouge\",\r\n    sector_id: 1008,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-21\",\r\n    name: \"Ravin de Durios\",\r\n    sector_id: 888,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11207.1,\r\n        14595\r\n    ]\r\n}, {\r\n    id: \"95-54\",\r\n    name: \"Havre gris\",\r\n    sector_id: 995,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-55\",\r\n    name: \"Basses terres de Rubicon\",\r\n    sector_id: 1003,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-26\",\r\n    name: \"Lac vert\",\r\n    sector_id: 989,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-20\",\r\n    name: \"Flanc de Veloka\",\r\n    sector_id: 891,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11017.4,\r\n        13414.4\r\n    ]\r\n}, {\r\n    id: \"95-44\",\r\n    name: \"Baie du Noir déclin\",\r\n    sector_id: 999,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-45\",\r\n    name: \"Bruyazur\",\r\n    sector_id: 1009,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-14\",\r\n    name: \"Petit ravin de Klovan\",\r\n    sector_id: 884,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10219.5,\r\n        15107.6\r\n    ]\r\n}, {\r\n    id: \"38-13\",\r\n    name: \"Bourbier de Jerrifer\",\r\n    sector_id: 883,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9757.06,\r\n        15467.8\r\n    ]\r\n}, {\r\n    id: \"94-65\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-38\",\r\n    name: \"Longuevue\",\r\n    sector_id: 955,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-6\",\r\n    name: \"Forêt rasée de Speldan\",\r\n    sector_id: 844,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9739.81,\r\n        13586.9\r\n    ]\r\n}, {\r\n    id: \"94-39\",\r\n    name: \"L'Epée divine\",\r\n    sector_id: 953,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-64\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-37\",\r\n    name: \"- Garnison\",\r\n    sector_id: 952,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-2\",\r\n    name: \"- Vallée\",\r\n    sector_id: 834,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11268.9,\r\n        15087.7\r\n    ]\r\n}, {\r\n    id: \"95-47\",\r\n    name: \"Colline ensoleillée\",\r\n    sector_id: 1007,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-67\",\r\n    name: \"Lac Diablecœur\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-68\",\r\n    name: \"Lac Diablecœur\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-53\",\r\n    name: \"Refuge de Valvert\",\r\n    sector_id: 971,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-12\",\r\n    name: \"Piste du ruisseau sauvage\",\r\n    sector_id: 885,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9958.23,\r\n        14605.7\r\n    ]\r\n}, {\r\n    id: \"96-25\",\r\n    name: \"Bruyerouge\",\r\n    sector_id: 990,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-111\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-112\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-71\",\r\n    name: \"Lac Diablecœur\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-46\",\r\n    name: \"- Garnison\",\r\n    sector_id: 992,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-52\",\r\n    name: \"Espoir d'Arah\",\r\n    sector_id: 956,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-16\",\r\n    name: \"Lac Quentin\",\r\n    sector_id: 889,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10951.8,\r\n        15121.2\r\n    ]\r\n}, {\r\n    id: \"38-22\",\r\n    name: \"Falaise de Bravost\",\r\n    sector_id: 886,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11750.2,\r\n        14859.4\r\n    ]\r\n}, {\r\n    id: \"95-49\",\r\n    name: \"Refuge de Bleuval\",\r\n    sector_id: 1005,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-19\",\r\n    name: \"Percée de Gardogre\",\r\n    sector_id: 892,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10965,\r\n        13951\r\n    ]\r\n}, {\r\n    id: \"95-76\",\r\n    name: \"Lac de Maldémon\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-73\",\r\n    name: \"Lac de Maldémon\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-51\",\r\n    name: \"Heaume astral\",\r\n    sector_id: 960,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-66\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-4\",\r\n    name: \"Clairière de Golanta\",\r\n    sector_id: 849,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10198.9,\r\n        15520.2\r\n    ]\r\n}, {\r\n    id: \"94-34\",\r\n    name: \"Pavillon du Vainqueur\",\r\n    sector_id: 963,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-28\",\r\n    name: \"Repaire de l'aube\",\r\n    sector_id: 987,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-59\",\r\n    name: \"Refuge de Valrouge\",\r\n    sector_id: 985,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-36\",\r\n    name: \"Lac bleu\",\r\n    sector_id: 965,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-50\",\r\n    name: \"Basses terres d'Eau-Azur\",\r\n    sector_id: 972,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-8\",\r\n    name: \"Bois d'Ombreclair\",\r\n    sector_id: 835,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11680.9,\r\n        14353.6\r\n    ]\r\n}, {\r\n    id: \"94-63\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-70\",\r\n    name: \"Lac Diablecœur\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-69\",\r\n    name: \"Lac Diablecœur\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-60\",\r\n    name: \"Bosquet étoilé\",\r\n    sector_id: 986,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-40\",\r\n    name: \"Flanc de falaise\",\r\n    sector_id: 959,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-61\",\r\n    name: \"Basses terres d'Eau-Verdoyante\",\r\n    sector_id: 983,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-23\",\r\n    name: \"Collines d'Askalion\",\r\n    sector_id: 979,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-74\",\r\n    name: \"Lac de Maldémon\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-10\",\r\n    name: \"Carrière du voleur\",\r\n    sector_id: 851,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9612.54,\r\n        14462.8\r\n    ]\r\n}, {\r\n    id: \"96-24\",\r\n    name: \"Fief du Champion\",\r\n    sector_id: 984,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-18\",\r\n    name: \"Col d'Anzalias\",\r\n    sector_id: 893,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10243.3,\r\n        13974.4\r\n    ]\r\n}, {\r\n    id: \"95-72\",\r\n    name: \"Lac de Maldémon\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-58\",\r\n    name: \"Savoir divin\",\r\n    sector_id: 991,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"968-98\",\r\n    name: \"Tunnel de guivre\",\r\n    sector_id: 1156,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6750.92,\r\n        10211.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/087491CDD56F7FB998C332360D32FD26A8B2A99D/730428.png\"\r\n}, {\r\n    id: \"968-96\",\r\n    name: \"Aéroport\",\r\n    sector_id: 1153,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7054.16,\r\n        10421\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/ACCCB1BD617598C0EA9C756EADE53DF36C2578EC/730427.png\"\r\n}, {\r\n    id: \"968-82\",\r\n    name: \"Réacteur de Tonnecrevasse\",\r\n    sector_id: 1168,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8282.77,\r\n        10425.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-93\",\r\n    name: \"Forge\",\r\n    sector_id: 1154,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8223.64,\r\n        10692.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D1AB541FC3BE12AC5BBB020212BEBE3F5C0C4315/730415.png\"\r\n}, {\r\n    id: \"968-80\",\r\n    name: \"Réacteur du Temple surdimensionné\",\r\n    sector_id: 1162,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7513.83,\r\n        9059.96\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-94\",\r\n    name: \"Sanctuaire\",\r\n    sector_id: 1164,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8614.89,\r\n        10246.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B5709941B0352FD4CA3B7AFDA42873D8EFDB15AD/730414.png\"\r\n}, {\r\n    id: \"968-90\",\r\n    name: \"Autel\",\r\n    sector_id: 1160,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7240.66,\r\n        9253.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/DC01EC41D8809B59B85BEEDC45E9556D730BD21A/730413.png\"\r\n}, {\r\n    id: \"968-97\",\r\n    name: \"Atelier\",\r\n    sector_id: 1152,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6837.6,\r\n        10845.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B34C2E3D0F34FD03F44BB5ED4E18DCDD0059A5C4/730429.png\"\r\n}, {\r\n    id: \"968-81\",\r\n    name: \"Réacteur de la Forteresse aride\",\r\n    sector_id: 1163,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6823.83,\r\n        10479.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-83\",\r\n    name: \"Réacteur du Pic de Pierregard\",\r\n    sector_id: 1167,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7249.21,\r\n        9763.87\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-95\",\r\n    name: \"Clocher\",\r\n    sector_id: 1173,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8180.68,\r\n        10325.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D4180774DD03A4BC7252B952680E451F16679A72/730410.png\"\r\n}, {\r\n    id: \"968-91\",\r\n    name: \"Observatoire\",\r\n    sector_id: 1158,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7953.67,\r\n        9062.79\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/015CF16C78DFDAD742E1A5613FB74B6463BF4A70/730411.png\"\r\n}, {\r\n    id: \"968-78\",\r\n    name: \"Temple surdimensionné\",\r\n    sector_id: 1161,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7606.7,\r\n        8882.14\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-88\",\r\n    name: \"Forteresse aride\",\r\n    sector_id: 1157,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6442.17,\r\n        10881.8\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-89\",\r\n    name: \"Perchoir de Tytone\",\r\n    sector_id: 1172,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7884.81,\r\n        9809.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-79\",\r\n    name: \"Tonnecrevasse\",\r\n    sector_id: 1169,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8506.75,\r\n        10824.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-85\",\r\n    name: \"Réacteur du Perchoir de Tytone\",\r\n    sector_id: 1165,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7852.89,\r\n        9855.56\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-77\",\r\n    name: \"Aiguille infernale\",\r\n    sector_id: 1171,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7504.84,\r\n        10598.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-87\",\r\n    name: \"Pic de Pierregard\",\r\n    sector_id: 1170,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7164.46,\r\n        9805.15\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-84\",\r\n    name: \"Réacteur de l'Aiguille infernale\",\r\n    sector_id: 1166,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7581.91,\r\n        10316.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-92\",\r\n    name: \"Statue\",\r\n    sector_id: 1159,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7553.12,\r\n        9360.16\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/4C0113B6DF2E4E2CBB93244AD50DA49456D5014E/730412.png\"\r\n}];\r\n\n},{}],12:[function(require,module,exports){\nmodule.exports = {\r\n\t\"1001\": {\r\n\t\t\"id\": \"1001\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Ambossfels\",\r\n\t\t\t\"slug\": \"ambossfels\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Anvil Rock\",\r\n\t\t\t\"slug\": \"anvil-rock\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Roca del Yunque\",\r\n\t\t\t\"slug\": \"roca-del-yunque\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Rocher de l'enclume\",\r\n\t\t\t\"slug\": \"rocher-de-lenclume\"\r\n\t\t}\r\n\t},\r\n\t\"1002\": {\r\n\t\t\"id\": \"1002\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Borlis-Pass\",\r\n\t\t\t\"slug\": \"borlis-pass\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Borlis Pass\",\r\n\t\t\t\"slug\": \"borlis-pass\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Paso de Borlis\",\r\n\t\t\t\"slug\": \"paso-de-borlis\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Passage de Borlis\",\r\n\t\t\t\"slug\": \"passage-de-borlis\"\r\n\t\t}\r\n\t},\r\n\t\"1003\": {\r\n\t\t\"id\": \"1003\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Jakbiegung\",\r\n\t\t\t\"slug\": \"jakbiegung\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Yak's Bend\",\r\n\t\t\t\"slug\": \"yaks-bend\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Declive del Yak\",\r\n\t\t\t\"slug\": \"declive-del-yak\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Courbe du Yak\",\r\n\t\t\t\"slug\": \"courbe-du-yak\"\r\n\t\t}\r\n\t},\r\n\t\"1004\": {\r\n\t\t\"id\": \"1004\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Denravis Erdwerk\",\r\n\t\t\t\"slug\": \"denravis-erdwerk\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Henge of Denravi\",\r\n\t\t\t\"slug\": \"henge-of-denravi\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Círculo de Denravi\",\r\n\t\t\t\"slug\": \"circulo-de-denravi\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Cromlech de Denravi\",\r\n\t\t\t\"slug\": \"cromlech-de-denravi\"\r\n\t\t}\r\n\t},\r\n\t\"1005\": {\r\n\t\t\"id\": \"1005\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Maguuma\",\r\n\t\t\t\"slug\": \"maguuma\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Maguuma\",\r\n\t\t\t\"slug\": \"maguuma\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Maguuma\",\r\n\t\t\t\"slug\": \"maguuma\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Maguuma\",\r\n\t\t\t\"slug\": \"maguuma\"\r\n\t\t}\r\n\t},\r\n\t\"1006\": {\r\n\t\t\"id\": \"1006\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Hochofen der Betrübnis\",\r\n\t\t\t\"slug\": \"hochofen-der-betrubnis\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Sorrow's Furnace\",\r\n\t\t\t\"slug\": \"sorrows-furnace\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Fragua del Pesar\",\r\n\t\t\t\"slug\": \"fragua-del-pesar\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Fournaise des lamentations\",\r\n\t\t\t\"slug\": \"fournaise-des-lamentations\"\r\n\t\t}\r\n\t},\r\n\t\"1007\": {\r\n\t\t\"id\": \"1007\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Tor des Irrsinns\",\r\n\t\t\t\"slug\": \"tor-des-irrsinns\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Gate of Madness\",\r\n\t\t\t\"slug\": \"gate-of-madness\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Puerta de la Locura\",\r\n\t\t\t\"slug\": \"puerta-de-la-locura\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Porte de la folie\",\r\n\t\t\t\"slug\": \"porte-de-la-folie\"\r\n\t\t}\r\n\t},\r\n\t\"1008\": {\r\n\t\t\"id\": \"1008\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Jade-Steinbruch\",\r\n\t\t\t\"slug\": \"jade-steinbruch\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Jade Quarry\",\r\n\t\t\t\"slug\": \"jade-quarry\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Cantera de Jade\",\r\n\t\t\t\"slug\": \"cantera-de-jade\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Carrière de jade\",\r\n\t\t\t\"slug\": \"carriere-de-jade\"\r\n\t\t}\r\n\t},\r\n\t\"1009\": {\r\n\t\t\"id\": \"1009\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Fort Espenwald\",\r\n\t\t\t\"slug\": \"fort-espenwald\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Fort Aspenwood\",\r\n\t\t\t\"slug\": \"fort-aspenwood\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Fuerte Aspenwood\",\r\n\t\t\t\"slug\": \"fuerte-aspenwood\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Fort Trembleforêt\",\r\n\t\t\t\"slug\": \"fort-trembleforet\"\r\n\t\t}\r\n\t},\r\n\t\"1010\": {\r\n\t\t\"id\": \"1010\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Ehmry-Bucht\",\r\n\t\t\t\"slug\": \"ehmry-bucht\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Ehmry Bay\",\r\n\t\t\t\"slug\": \"ehmry-bay\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Bahía de Ehmry\",\r\n\t\t\t\"slug\": \"bahia-de-ehmry\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Baie d'Ehmry\",\r\n\t\t\t\"slug\": \"baie-dehmry\"\r\n\t\t}\r\n\t},\r\n\t\"1011\": {\r\n\t\t\"id\": \"1011\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Sturmklippen-Insel\",\r\n\t\t\t\"slug\": \"sturmklippen-insel\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Stormbluff Isle\",\r\n\t\t\t\"slug\": \"stormbluff-isle\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Isla Cimatormenta\",\r\n\t\t\t\"slug\": \"isla-cimatormenta\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Ile de la Falaise tumultueuse\",\r\n\t\t\t\"slug\": \"ile-de-la-falaise-tumultueuse\"\r\n\t\t}\r\n\t},\r\n\t\"1012\": {\r\n\t\t\"id\": \"1012\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Finsterfreistatt\",\r\n\t\t\t\"slug\": \"finsterfreistatt\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Darkhaven\",\r\n\t\t\t\"slug\": \"darkhaven\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Refugio Oscuro\",\r\n\t\t\t\"slug\": \"refugio-oscuro\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Refuge noir\",\r\n\t\t\t\"slug\": \"refuge-noir\"\r\n\t\t}\r\n\t},\r\n\t\"1013\": {\r\n\t\t\"id\": \"1013\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Heilige Halle von Rall\",\r\n\t\t\t\"slug\": \"heilige-halle-von-rall\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Sanctum of Rall\",\r\n\t\t\t\"slug\": \"sanctum-of-rall\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Sagrario de Rall\",\r\n\t\t\t\"slug\": \"sagrario-de-rall\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Sanctuaire de Rall\",\r\n\t\t\t\"slug\": \"sanctuaire-de-rall\"\r\n\t\t}\r\n\t},\r\n\t\"1014\": {\r\n\t\t\"id\": \"1014\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Kristallwüste\",\r\n\t\t\t\"slug\": \"kristallwuste\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Crystal Desert\",\r\n\t\t\t\"slug\": \"crystal-desert\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Desierto de Cristal\",\r\n\t\t\t\"slug\": \"desierto-de-cristal\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Désert de cristal\",\r\n\t\t\t\"slug\": \"desert-de-cristal\"\r\n\t\t}\r\n\t},\r\n\t\"1015\": {\r\n\t\t\"id\": \"1015\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Janthir-Insel\",\r\n\t\t\t\"slug\": \"janthir-insel\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Isle of Janthir\",\r\n\t\t\t\"slug\": \"isle-of-janthir\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Isla de Janthir\",\r\n\t\t\t\"slug\": \"isla-de-janthir\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Ile de Janthir\",\r\n\t\t\t\"slug\": \"ile-de-janthir\"\r\n\t\t}\r\n\t},\r\n\t\"1016\": {\r\n\t\t\"id\": \"1016\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Meer des Leids\",\r\n\t\t\t\"slug\": \"meer-des-leids\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Sea of Sorrows\",\r\n\t\t\t\"slug\": \"sea-of-sorrows\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"El Mar de los Pesares\",\r\n\t\t\t\"slug\": \"el-mar-de-los-pesares\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Mer des lamentations\",\r\n\t\t\t\"slug\": \"mer-des-lamentations\"\r\n\t\t}\r\n\t},\r\n\t\"1017\": {\r\n\t\t\"id\": \"1017\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Befleckte Küste\",\r\n\t\t\t\"slug\": \"befleckte-kuste\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Tarnished Coast\",\r\n\t\t\t\"slug\": \"tarnished-coast\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Costa de Bronce\",\r\n\t\t\t\"slug\": \"costa-de-bronce\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Côte ternie\",\r\n\t\t\t\"slug\": \"cote-ternie\"\r\n\t\t}\r\n\t},\r\n\t\"1018\": {\r\n\t\t\"id\": \"1018\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Nördliche Zittergipfel\",\r\n\t\t\t\"slug\": \"nordliche-zittergipfel\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Northern Shiverpeaks\",\r\n\t\t\t\"slug\": \"northern-shiverpeaks\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Picosescalofriantes del Norte\",\r\n\t\t\t\"slug\": \"picosescalofriantes-del-norte\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Cimefroides nordiques\",\r\n\t\t\t\"slug\": \"cimefroides-nordiques\"\r\n\t\t}\r\n\t},\r\n\t\"1019\": {\r\n\t\t\"id\": \"1019\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Schwarztor\",\r\n\t\t\t\"slug\": \"schwarztor\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Blackgate\",\r\n\t\t\t\"slug\": \"blackgate\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Puertanegra\",\r\n\t\t\t\"slug\": \"puertanegra\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Portenoire\",\r\n\t\t\t\"slug\": \"portenoire\"\r\n\t\t}\r\n\t},\r\n\t\"1020\": {\r\n\t\t\"id\": \"1020\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Fergusons Kreuzung\",\r\n\t\t\t\"slug\": \"fergusons-kreuzung\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Ferguson's Crossing\",\r\n\t\t\t\"slug\": \"fergusons-crossing\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Encrucijada de Ferguson\",\r\n\t\t\t\"slug\": \"encrucijada-de-ferguson\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Croisée de Ferguson\",\r\n\t\t\t\"slug\": \"croisee-de-ferguson\"\r\n\t\t}\r\n\t},\r\n\t\"1021\": {\r\n\t\t\"id\": \"1021\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Drachenbrand\",\r\n\t\t\t\"slug\": \"drachenbrand\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Dragonbrand\",\r\n\t\t\t\"slug\": \"dragonbrand\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Marca del Dragón\",\r\n\t\t\t\"slug\": \"marca-del-dragon\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Stigmate du dragon\",\r\n\t\t\t\"slug\": \"stigmate-du-dragon\"\r\n\t\t}\r\n\t},\r\n\t\"1022\": {\r\n\t\t\"id\": \"1022\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Kaineng\",\r\n\t\t\t\"slug\": \"kaineng\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Kaineng\",\r\n\t\t\t\"slug\": \"kaineng\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Kaineng\",\r\n\t\t\t\"slug\": \"kaineng\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Kaineng\",\r\n\t\t\t\"slug\": \"kaineng\"\r\n\t\t}\r\n\t},\r\n\t\"1023\": {\r\n\t\t\"id\": \"1023\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Devonas Rast\",\r\n\t\t\t\"slug\": \"devonas-rast\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Devona's Rest\",\r\n\t\t\t\"slug\": \"devonas-rest\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Descanso de Devona\",\r\n\t\t\t\"slug\": \"descanso-de-devona\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Repos de Devona\",\r\n\t\t\t\"slug\": \"repos-de-devona\"\r\n\t\t}\r\n\t},\r\n\t\"1024\": {\r\n\t\t\"id\": \"1024\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Eredon-Terrasse\",\r\n\t\t\t\"slug\": \"eredon-terrasse\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Eredon Terrace\",\r\n\t\t\t\"slug\": \"eredon-terrace\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Terraza de Eredon\",\r\n\t\t\t\"slug\": \"terraza-de-eredon\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Plateau d'Eredon\",\r\n\t\t\t\"slug\": \"plateau-deredon\"\r\n\t\t}\r\n\t},\r\n\t\"2001\": {\r\n\t\t\"id\": \"2001\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Klagenriss\",\r\n\t\t\t\"slug\": \"klagenriss\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Fissure of Woe\",\r\n\t\t\t\"slug\": \"fissure-of-woe\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Fisura de la Aflicción\",\r\n\t\t\t\"slug\": \"fisura-de-la-afliccion\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Fissure du malheur\",\r\n\t\t\t\"slug\": \"fissure-du-malheur\"\r\n\t\t}\r\n\t},\r\n\t\"2002\": {\r\n\t\t\"id\": \"2002\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Ödnis\",\r\n\t\t\t\"slug\": \"odnis\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Desolation\",\r\n\t\t\t\"slug\": \"desolation\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Desolación\",\r\n\t\t\t\"slug\": \"desolacion\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Désolation\",\r\n\t\t\t\"slug\": \"desolation\"\r\n\t\t}\r\n\t},\r\n\t\"2003\": {\r\n\t\t\"id\": \"2003\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Gandara\",\r\n\t\t\t\"slug\": \"gandara\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Gandara\",\r\n\t\t\t\"slug\": \"gandara\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Gandara\",\r\n\t\t\t\"slug\": \"gandara\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Gandara\",\r\n\t\t\t\"slug\": \"gandara\"\r\n\t\t}\r\n\t},\r\n\t\"2004\": {\r\n\t\t\"id\": \"2004\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Schwarzflut\",\r\n\t\t\t\"slug\": \"schwarzflut\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Blacktide\",\r\n\t\t\t\"slug\": \"blacktide\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Marea Negra\",\r\n\t\t\t\"slug\": \"marea-negra\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Noirflot\",\r\n\t\t\t\"slug\": \"noirflot\"\r\n\t\t}\r\n\t},\r\n\t\"2005\": {\r\n\t\t\"id\": \"2005\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Feuerring\",\r\n\t\t\t\"slug\": \"feuerring\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Ring of Fire\",\r\n\t\t\t\"slug\": \"ring-of-fire\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Anillo de Fuego\",\r\n\t\t\t\"slug\": \"anillo-de-fuego\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Cercle de feu\",\r\n\t\t\t\"slug\": \"cercle-de-feu\"\r\n\t\t}\r\n\t},\r\n\t\"2006\": {\r\n\t\t\"id\": \"2006\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Unterwelt\",\r\n\t\t\t\"slug\": \"unterwelt\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Underworld\",\r\n\t\t\t\"slug\": \"underworld\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Inframundo\",\r\n\t\t\t\"slug\": \"inframundo\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Outre-monde\",\r\n\t\t\t\"slug\": \"outre-monde\"\r\n\t\t}\r\n\t},\r\n\t\"2007\": {\r\n\t\t\"id\": \"2007\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Ferne Zittergipfel\",\r\n\t\t\t\"slug\": \"ferne-zittergipfel\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Far Shiverpeaks\",\r\n\t\t\t\"slug\": \"far-shiverpeaks\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Lejanas Picosescalofriantes\",\r\n\t\t\t\"slug\": \"lejanas-picosescalofriantes\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Lointaines Cimefroides\",\r\n\t\t\t\"slug\": \"lointaines-cimefroides\"\r\n\t\t}\r\n\t},\r\n\t\"2008\": {\r\n\t\t\"id\": \"2008\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Weißflankgrat\",\r\n\t\t\t\"slug\": \"weissflankgrat\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Whiteside Ridge\",\r\n\t\t\t\"slug\": \"whiteside-ridge\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Cadena Laderablanca\",\r\n\t\t\t\"slug\": \"cadena-laderablanca\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Crête de Verseblanc\",\r\n\t\t\t\"slug\": \"crete-de-verseblanc\"\r\n\t\t}\r\n\t},\r\n\t\"2009\": {\r\n\t\t\"id\": \"2009\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Ruinen von Surmia\",\r\n\t\t\t\"slug\": \"ruinen-von-surmia\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Ruins of Surmia\",\r\n\t\t\t\"slug\": \"ruins-of-surmia\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Ruinas de Surmia\",\r\n\t\t\t\"slug\": \"ruinas-de-surmia\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Ruines de Surmia\",\r\n\t\t\t\"slug\": \"ruines-de-surmia\"\r\n\t\t}\r\n\t},\r\n\t\"2010\": {\r\n\t\t\"id\": \"2010\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Seemannsrast\",\r\n\t\t\t\"slug\": \"seemannsrast\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Seafarer's Rest\",\r\n\t\t\t\"slug\": \"seafarers-rest\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Refugio del Viajante\",\r\n\t\t\t\"slug\": \"refugio-del-viajante\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Repos du Marin\",\r\n\t\t\t\"slug\": \"repos-du-marin\"\r\n\t\t}\r\n\t},\r\n\t\"2011\": {\r\n\t\t\"id\": \"2011\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Vabbi\",\r\n\t\t\t\"slug\": \"vabbi\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Vabbi\",\r\n\t\t\t\"slug\": \"vabbi\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Vabbi\",\r\n\t\t\t\"slug\": \"vabbi\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Vabbi\",\r\n\t\t\t\"slug\": \"vabbi\"\r\n\t\t}\r\n\t},\r\n\t\"2012\": {\r\n\t\t\"id\": \"2012\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Piken-Platz\",\r\n\t\t\t\"slug\": \"piken-platz\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Piken Square\",\r\n\t\t\t\"slug\": \"piken-square\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Plaza de Piken\",\r\n\t\t\t\"slug\": \"plaza-de-piken\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Place Piken\",\r\n\t\t\t\"slug\": \"place-piken\"\r\n\t\t}\r\n\t},\r\n\t\"2013\": {\r\n\t\t\"id\": \"2013\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Lichtung der Morgenröte\",\r\n\t\t\t\"slug\": \"lichtung-der-morgenrote\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Aurora Glade\",\r\n\t\t\t\"slug\": \"aurora-glade\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Claro de la Aurora\",\r\n\t\t\t\"slug\": \"claro-de-la-aurora\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Clairière de l'aurore\",\r\n\t\t\t\"slug\": \"clairiere-de-laurore\"\r\n\t\t}\r\n\t},\r\n\t\"2014\": {\r\n\t\t\"id\": \"2014\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Gunnars Feste\",\r\n\t\t\t\"slug\": \"gunnars-feste\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Gunnar's Hold\",\r\n\t\t\t\"slug\": \"gunnars-hold\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Fuerte de Gunnar\",\r\n\t\t\t\"slug\": \"fuerte-de-gunnar\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Campement de Gunnar\",\r\n\t\t\t\"slug\": \"campement-de-gunnar\"\r\n\t\t}\r\n\t},\r\n\t\"2101\": {\r\n\t\t\"id\": \"2101\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Jademeer [FR]\",\r\n\t\t\t\"slug\": \"jademeer-fr\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Jade Sea [FR]\",\r\n\t\t\t\"slug\": \"jade-sea-fr\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Mar de Jade [FR]\",\r\n\t\t\t\"slug\": \"mar-de-jade-fr\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Mer de Jade [FR]\",\r\n\t\t\t\"slug\": \"mer-de-jade-fr\"\r\n\t\t}\r\n\t},\r\n\t\"2102\": {\r\n\t\t\"id\": \"2102\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Fort Ranik [FR]\",\r\n\t\t\t\"slug\": \"fort-ranik-fr\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Fort Ranik [FR]\",\r\n\t\t\t\"slug\": \"fort-ranik-fr\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Fuerte Ranik [FR]\",\r\n\t\t\t\"slug\": \"fuerte-ranik-fr\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Fort Ranik [FR]\",\r\n\t\t\t\"slug\": \"fort-ranik-fr\"\r\n\t\t}\r\n\t},\r\n\t\"2103\": {\r\n\t\t\"id\": \"2103\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Augurenstein [FR]\",\r\n\t\t\t\"slug\": \"augurenstein-fr\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Augury Rock [FR]\",\r\n\t\t\t\"slug\": \"augury-rock-fr\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Roca del Augurio [FR]\",\r\n\t\t\t\"slug\": \"roca-del-augurio-fr\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Roche de l'Augure [FR]\",\r\n\t\t\t\"slug\": \"roche-de-laugure-fr\"\r\n\t\t}\r\n\t},\r\n\t\"2104\": {\r\n\t\t\"id\": \"2104\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Vizunah-Platz [FR]\",\r\n\t\t\t\"slug\": \"vizunah-platz-fr\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Vizunah Square [FR]\",\r\n\t\t\t\"slug\": \"vizunah-square-fr\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Plaza de Vizunah [FR]\",\r\n\t\t\t\"slug\": \"plaza-de-vizunah-fr\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Place de Vizunah [FR]\",\r\n\t\t\t\"slug\": \"place-de-vizunah-fr\"\r\n\t\t}\r\n\t},\r\n\t\"2105\": {\r\n\t\t\"id\": \"2105\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Laubenstein [FR]\",\r\n\t\t\t\"slug\": \"laubenstein-fr\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Arborstone [FR]\",\r\n\t\t\t\"slug\": \"arborstone-fr\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Piedra Arbórea [FR]\",\r\n\t\t\t\"slug\": \"piedra-arborea-fr\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Pierre Arborea [FR]\",\r\n\t\t\t\"slug\": \"pierre-arborea-fr\"\r\n\t\t}\r\n\t},\r\n\t\"2201\": {\r\n\t\t\"id\": \"2201\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Kodasch [DE]\",\r\n\t\t\t\"slug\": \"kodasch-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Kodash [DE]\",\r\n\t\t\t\"slug\": \"kodash-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Kodash [DE]\",\r\n\t\t\t\"slug\": \"kodash-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Kodash [DE]\",\r\n\t\t\t\"slug\": \"kodash-de\"\r\n\t\t}\r\n\t},\r\n\t\"2202\": {\r\n\t\t\"id\": \"2202\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Flussufer [DE]\",\r\n\t\t\t\"slug\": \"flussufer-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Riverside [DE]\",\r\n\t\t\t\"slug\": \"riverside-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Ribera [DE]\",\r\n\t\t\t\"slug\": \"ribera-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Provinces fluviales [DE]\",\r\n\t\t\t\"slug\": \"provinces-fluviales-de\"\r\n\t\t}\r\n\t},\r\n\t\"2203\": {\r\n\t\t\"id\": \"2203\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Elonafels [DE]\",\r\n\t\t\t\"slug\": \"elonafels-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Elona Reach [DE]\",\r\n\t\t\t\"slug\": \"elona-reach-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Cañón de Elona [DE]\",\r\n\t\t\t\"slug\": \"canon-de-elona-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Bief d'Elona [DE]\",\r\n\t\t\t\"slug\": \"bief-delona-de\"\r\n\t\t}\r\n\t},\r\n\t\"2204\": {\r\n\t\t\"id\": \"2204\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Abaddons Mund [DE]\",\r\n\t\t\t\"slug\": \"abaddons-mund-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Abaddon's Mouth [DE]\",\r\n\t\t\t\"slug\": \"abaddons-mouth-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Boca de Abaddon [DE]\",\r\n\t\t\t\"slug\": \"boca-de-abaddon-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Bouche d'Abaddon [DE]\",\r\n\t\t\t\"slug\": \"bouche-dabaddon-de\"\r\n\t\t}\r\n\t},\r\n\t\"2205\": {\r\n\t\t\"id\": \"2205\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Drakkar-See [DE]\",\r\n\t\t\t\"slug\": \"drakkar-see-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Drakkar Lake [DE]\",\r\n\t\t\t\"slug\": \"drakkar-lake-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Lago Drakkar [DE]\",\r\n\t\t\t\"slug\": \"lago-drakkar-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Lac Drakkar [DE]\",\r\n\t\t\t\"slug\": \"lac-drakkar-de\"\r\n\t\t}\r\n\t},\r\n\t\"2206\": {\r\n\t\t\"id\": \"2206\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Millersund [DE]\",\r\n\t\t\t\"slug\": \"millersund-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Miller's Sound [DE]\",\r\n\t\t\t\"slug\": \"millers-sound-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Estrecho de Miller [DE]\",\r\n\t\t\t\"slug\": \"estrecho-de-miller-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Détroit de Miller [DE]\",\r\n\t\t\t\"slug\": \"detroit-de-miller-de\"\r\n\t\t}\r\n\t},\r\n\t\"2207\": {\r\n\t\t\"id\": \"2207\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Dzagonur [DE]\",\r\n\t\t\t\"slug\": \"dzagonur-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Dzagonur [DE]\",\r\n\t\t\t\"slug\": \"dzagonur-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Dzagonur [DE]\",\r\n\t\t\t\"slug\": \"dzagonur-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Dzagonur [DE]\",\r\n\t\t\t\"slug\": \"dzagonur-de\"\r\n\t\t}\r\n\t},\r\n\t\"2301\": {\r\n\t\t\"id\": \"2301\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Baruch-Bucht [SP]\",\r\n\t\t\t\"slug\": \"baruch-bucht-sp\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Baruch Bay [SP]\",\r\n\t\t\t\"slug\": \"baruch-bay-sp\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Bahía de Baruch [ES]\",\r\n\t\t\t\"slug\": \"bahia-de-baruch-es\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Baie de Baruch [SP]\",\r\n\t\t\t\"slug\": \"baie-de-baruch-sp\"\r\n\t\t}\r\n\t},\r\n};\r\n\n},{}],13:[function(require,module,exports){\nmodule.exports = {\r\n    langs: require('./data/langs'),\r\n    worlds: require('./data/world_names'),\r\n    objectives_v2: require('./data/objectives_v2'),\r\n    objective_names: require('./data/objective_names'),\r\n    objective_names: require('./data/objective_names'),\r\n    objective_types: require('./data/objective_types'),\r\n    objective_meta: require('./data/objective_meta'),\r\n    objective_labels: require('./data/objective_labels'),\r\n    objective_map: require('./data/objective_map'),\r\n};\r\n\n},{\"./data/langs\":1,\"./data/objective_labels\":2,\"./data/objective_map\":3,\"./data/objective_meta\":4,\"./data/objective_names\":5,\"./data/objective_types\":6,\"./data/objectives_v2\":7,\"./data/world_names\":12}],14:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],15:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MatchWorld = require('./MatchWorld');\n\nvar _MatchWorld2 = _interopRequireDefault(_MatchWorld);\n\nvar _libStatic = require('./../../lib/static');\n\nvar WORLD_COLORS = ['red', 'blue', 'green'];\n\nvar Match = (function (_React$Component) {\n    _inherits(Match, _React$Component);\n\n    function Match() {\n        _classCallCheck(this, Match);\n\n        _React$Component.apply(this, arguments);\n    }\n\n    Match.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return this.isNewMatchData(nextProps) || this.isNewLang(nextProps);\n    };\n\n    Match.prototype.isNewMatchData = function isNewMatchData(nextProps) {\n        return this.props.match.lastmod !== nextProps.match.lastmod;\n    };\n\n    Match.prototype.isNewLang = function isNewLang(nextProps) {\n        return this.props.lang.name !== nextProps.lang.name;\n    };\n\n    Match.prototype.render = function render() {\n        var _props = this.props;\n        var lang = _props.lang;\n        var match = _props.match;\n\n        return _react2['default'].createElement(\n            'div',\n            { className: 'matchContainer' },\n            _react2['default'].createElement(\n                'table',\n                { className: 'match' },\n                _react2['default'].createElement(\n                    'tbody',\n                    null,\n                    _.map(WORLD_COLORS, function (color) {\n                        var worldKey = color;\n                        var worldId = match.worlds[worldKey];\n                        var world = _libStatic.worlds[worldId][lang.slug];\n\n                        return _react2['default'].createElement(_MatchWorld2['default'], {\n                            component: 'tr',\n                            key: worldId,\n\n                            color: color,\n                            match: match,\n                            showPie: color === 'red',\n                            world: world\n                        });\n                    })\n                )\n            )\n        );\n    };\n\n    _createClass(Match, null, [{\n        key: 'propTypes',\n        value: {\n            lang: _react2['default'].PropTypes.object.isRequired,\n            match: _react2['default'].PropTypes.object.isRequired\n        },\n        enumerable: true\n    }]);\n\n    return Match;\n})(_react2['default'].Component);\n\nexports['default'] = Match;\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./../../lib/static\":42,\"./MatchWorld\":16}],16:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _commonIconsPie = require('./../../common/Icons/Pie');\n\nvar _commonIconsPie2 = _interopRequireDefault(_commonIconsPie);\n\nexports['default'] = function (_ref) {\n    var color = _ref.color;\n    var match = _ref.match;\n    var showPie = _ref.showPie;\n    var world = _ref.world;\n    return _react2['default'].createElement(\n        'tr',\n        null,\n        _react2['default'].createElement(\n            'td',\n            { className: 'team name ' + color },\n            _react2['default'].createElement(\n                'a',\n                { href: world.link },\n                world.name\n            )\n        ),\n        _react2['default'].createElement(\n            'td',\n            { className: 'team score ' + color },\n            match.scores ? numeral(match.scores[color]).format('0,0') : null\n        ),\n        showPie && match.scores ? _react2['default'].createElement(\n            'td',\n            { className: 'pie', rowSpan: '3' },\n            _react2['default'].createElement(_commonIconsPie2['default'], { scores: match.scores, size: 60 })\n        ) : null\n    );\n};\n\nmodule.exports = exports['default'];\n/*<td className={`team kills ${color}`}>{match.kills ? numeral(match.kills[color]).format('0,0') : null}</td>*/ /*<td className={`team deaths ${color}`}>{match.deaths ? numeral(match.deaths[color]).format('0,0') : null}</td>*/\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./../../common/Icons/Pie\":29}],17:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _Match = require('./Match');\n\nvar _Match2 = _interopRequireDefault(_Match);\n\nvar loadingHtml = _react2['default'].createElement(\n    'span',\n    { style: { paddingLeft: '.5em' } },\n    _react2['default'].createElement('i', { className: 'fa fa-spinner fa-spin' })\n);\n\nexports['default'] = function (_ref) {\n    var lang = _ref.lang;\n    var matches = _ref.matches;\n    var region = _ref.region;\n    return _react2['default'].createElement(\n        'div',\n        { className: 'RegionMatches' },\n        _react2['default'].createElement(\n            'h2',\n            null,\n            region.label,\n            ' Matches',\n            _lodash2['default'].isEmpty(matches) ? loadingHtml : null\n        ),\n        _lodash2['default'].chain(matches).sortBy('id').map(function (match) {\n            return _react2['default'].createElement(_Match2['default'], {\n                key: match.id,\n                lang: lang,\n                match: match\n            });\n        }).value()\n    );\n};\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./Match\":15}],18:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libStatic = require('./../../lib/static');\n\n/*\r\n*\r\n* Component Definition\r\n*\r\n*/\n\nexports['default'] = function (_ref) {\n    var lang = _ref.lang;\n    var region = _ref.region;\n    return _react2['default'].createElement(\n        'div',\n        { className: 'RegionWorlds' },\n        _react2['default'].createElement(\n            'h2',\n            null,\n            region.label,\n            ' Worlds'\n        ),\n        _react2['default'].createElement(\n            'ul',\n            { className: 'list-unstyled' },\n            _.chain(_libStatic.worlds).filter(function (world) {\n                return world.region === region.id;\n            }).map(function (world) {\n                return world[lang.slug];\n            }).sortBy('name').map(function (world) {\n                return _react2['default'].createElement(\n                    'li',\n                    { key: world.slug },\n                    _react2['default'].createElement(\n                        'a',\n                        { href: world.link },\n                        world.name\n                    )\n                );\n            }).value()\n        )\n    );\n};\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./../../lib/static\":42}],19:[function(require,module,exports){\n(function (global){\n'use strict';\n\n/*\r\n*\r\n*   Dependencies\r\n*\r\n*/\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\n/*\r\n*   Data\r\n*/\n\nvar _libDataOverview = require('./../lib/data/overview');\n\nvar _libDataOverview2 = _interopRequireDefault(_libDataOverview);\n\n/*\r\n*   React Components\r\n*/\n\nvar _Matches = require('./Matches');\n\nvar _Matches2 = _interopRequireDefault(_Matches);\n\nvar _Worlds = require('./Worlds');\n\nvar _Worlds2 = _interopRequireDefault(_Worlds);\n\n/*\r\n*\r\n*   Component Globals\r\n*\r\n*/\n\nvar REGIONS = {\n    1: { label: 'NA', id: '1' },\n    2: { label: 'EU', id: '2' }\n};\n\n/*\r\n*\r\n*   Component Definition\r\n*\r\n*/\n\nvar _ref = _react2['default'].createElement('hr', null);\n\nvar Overview = (function (_React$Component) {\n    _inherits(Overview, _React$Component);\n\n    _createClass(Overview, null, [{\n        key: 'propTypes',\n        value: {\n            lang: _react2['default'].PropTypes.object.isRequired\n        },\n        enumerable: true\n    }]);\n\n    function Overview(props) {\n        _classCallCheck(this, Overview);\n\n        _React$Component.call(this, props);\n\n        this.dao = new _libDataOverview2['default']({\n            onMatchData: this.onMatchData.bind(this)\n        });\n\n        this.state = {\n            matchData: {}\n        };\n    }\n\n    Overview.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n        return this.isNewMatchData(nextState) || this.isNewLang(nextProps);\n    };\n\n    Overview.prototype.isNewMatchData = function isNewMatchData(nextState) {\n        return getLastmod(this.state.matchData) !== getLastmod(nextState.matchData);\n    };\n\n    Overview.prototype.isNewLang = function isNewLang(nextProps) {\n        return this.props.lang.name !== nextProps.lang.name;\n    };\n\n    Overview.prototype.componentWillMount = function componentWillMount() {\n        setPageTitle(this.props.lang);\n    };\n\n    Overview.prototype.componentDidMount = function componentDidMount() {\n        this.dao.init(this.props.lang);\n    };\n\n    Overview.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n        if (this.props.lang.name !== nextProps.lang.name) {\n            setPageTitle(nextProps.lang);\n        }\n    };\n\n    Overview.prototype.componentWillUnmount = function componentWillUnmount() {\n        this.dao.close();\n    };\n\n    Overview.prototype.render = function render() {\n        var _this = this;\n\n        return _react2['default'].createElement(\n            'div',\n            { id: 'overview' },\n            _react2['default'].createElement(\n                'div',\n                { className: 'row' },\n                _.map(REGIONS, function (region, regionId) {\n                    return _react2['default'].createElement(\n                        'div',\n                        { className: 'col-sm-12', key: regionId },\n                        _react2['default'].createElement(_Matches2['default'], {\n                            lang: _this.props.lang,\n                            matches: _.filter(_this.state.matchData, function (match) {\n                                return match.region === regionId;\n                            }),\n                            region: region\n                        })\n                    );\n                })\n            ),\n            _ref,\n            _react2['default'].createElement(\n                'div',\n                { className: 'row' },\n                _.map(REGIONS, function (region, regionId) {\n                    return _react2['default'].createElement(\n                        'div',\n                        { className: 'col-sm-12', key: regionId },\n                        _react2['default'].createElement(_Worlds2['default'], {\n                            lang: _this.props.lang,\n                            region: region\n                        })\n                    );\n                })\n            )\n        );\n    };\n\n    /*\r\n    *\r\n    *   Data Listeners\r\n    *\r\n    */\n\n    Overview.prototype.onMatchData = function onMatchData(matchData) {\n        this.setState({ matchData: matchData });\n    };\n\n    return Overview;\n})(_react2['default'].Component);\n\nfunction getLastmod(matchData) {\n    return _.reduce(matchData, function (acc, match) {\n        return Math.max(match.lastmod);\n    }, 0);\n}\n\n/*\r\n*\r\n*   Direct DOM Manipulation\r\n*\r\n*/\n\nfunction setPageTitle(lang) {\n    var title = ['gw2w2w.com'];\n\n    if (lang.slug !== 'en') {\n        title.push(lang.name);\n    }\n\n    document.title = title.join(' - ');\n}\n\n/*\r\n*\r\n*   Export Module\r\n*\r\n*/\n\nmodule.exports = Overview;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./../lib/data/overview\":38,\"./Matches\":17,\"./Worlds\":18}],20:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _libStatic = require('./../../lib/static');\n\nvar _libStatic2 = _interopRequireDefault(_libStatic);\n\nvar _commonIconsSprite = require('./../../common/icons/Sprite');\n\nvar _commonIconsSprite2 = _interopRequireDefault(_commonIconsSprite);\n\nvar _commonIconsObjective = require('./../../common/icons/Objective');\n\nvar _commonIconsObjective2 = _interopRequireDefault(_commonIconsObjective);\n\nvar _commonIconsArrow = require('./../../common/icons/Arrow');\n\nvar _commonIconsArrow2 = _interopRequireDefault(_commonIconsArrow);\n\nvar _ref = _react2['default'].createElement('i', { className: 'fa fa-spinner fa-spin' });\n\nexports['default'] = function (_ref2) {\n    var guilds = _ref2.guilds;\n    var lang = _ref2.lang;\n    var log = _ref2.log;\n    var now = _ref2.now;\n    var mapFilter = _ref2.mapFilter;\n    var typeFilter = _ref2.typeFilter;\n    return _react2['default'].createElement(\n        'ol',\n        { id: 'log', className: 'list-unstyled' },\n        _.chain(log).filter(function (entry) {\n            return byType(typeFilter, entry);\n        }).filter(function (entry) {\n            return byMapId(mapFilter, entry);\n        }).map(function (entry) {\n            return _react2['default'].createElement(\n                'li',\n                { key: entry.id, className: 'team ' + entry.owner },\n                _react2['default'].createElement(\n                    'ul',\n                    { className: 'list-unstyled log-objective' },\n                    _react2['default'].createElement(\n                        'li',\n                        { className: 'log-expire' },\n                        entry.expires.isAfter(now) ? _moment2['default'](entry.expires.diff(now, 'milliseconds')).format('m:ss') : null\n                    ),\n                    _react2['default'].createElement(\n                        'li',\n                        { className: 'log-geo' },\n                        _react2['default'].createElement(_commonIconsArrow2['default'], { direction: getObjectiveDirection(entry) })\n                    ),\n                    _react2['default'].createElement(\n                        'li',\n                        { className: 'log-sprite' },\n                        _react2['default'].createElement(_commonIconsObjective2['default'], { color: entry.owner, type: entry.type })\n                    ),\n                    _react2['default'].createElement(\n                        'li',\n                        { className: 'log-time' },\n                        _moment2['default']().diff(entry.lastFlipped, 'hours') < 4 ? entry.lastFlipped.format('hh:mm:ss') : entry.lastFlipped.fromNow(true)\n                    ),\n                    _react2['default'].createElement(\n                        'li',\n                        { className: 'log-name' },\n                        _libStatic2['default'].objectives[entry.id].name[lang.slug]\n                    ),\n                    _react2['default'].createElement(\n                        'li',\n                        { className: 'log-claimed' },\n                        entry.lastClaimed.isValid() ? entry.lastClaimed.format('hh:mm:ss') : null\n                    ),\n                    _react2['default'].createElement(\n                        'li',\n                        { className: 'log-guild' },\n                        entry.guild ? _react2['default'].createElement(\n                            'a',\n                            { href: '#' + entry.guild },\n                            _react2['default'].createElement('img', { src: 'https://guilds.gw2w2w.com/' + entry.guild + '.svg' }),\n                            guilds[entry.guild] ? _react2['default'].createElement(\n                                'span',\n                                null,\n                                ' ',\n                                guilds[entry.guild].name,\n                                ' [',\n                                guilds[entry.guild].tag,\n                                '] '\n                            ) : _ref\n                        ) : null\n                    )\n                )\n            );\n        }).value()\n    );\n};\n\nfunction getObjectiveDirection(objective) {\n    var baseId = objective.id.split('-')[1].toString();\n    var meta = _libStatic2['default'].objectivesMeta[baseId];\n\n    return meta.direction;\n}\n\nfunction byType(typeFilter, entry) {\n    return typeFilter[entry.type];\n}\n\nfunction byMapId(mapFilter, entry) {\n    if (mapFilter) {\n        return entry.mapId === mapFilter;\n    } else {\n        return true;\n    }\n}\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./../../common/icons/Arrow\":33,\"./../../common/icons/Objective\":34,\"./../../common/icons/Sprite\":35,\"./../../lib/static\":42}],21:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = (typeof window !== \"undefined\" ? window['classNames'] : typeof global !== \"undefined\" ? global['classNames'] : null);\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _commonIconsSprite = require('./../../common/icons/Sprite');\n\nvar _commonIconsSprite2 = _interopRequireDefault(_commonIconsSprite);\n\nvar _libStatic = require('./../../lib/static');\n\nvar _libStatic2 = _interopRequireDefault(_libStatic);\n\nexports['default'] = function (_ref) {\n    var maps = _ref.maps;\n    var _ref$mapFilter = _ref.mapFilter;\n    var mapFilter = _ref$mapFilter === undefined ? '' : _ref$mapFilter;\n    var _ref$typeFilter = _ref.typeFilter;\n    var typeFilter = _ref$typeFilter === undefined ? '' : _ref$typeFilter;\n    var handleMapFilterClick = _ref.handleMapFilterClick;\n    var handleTypeFilterClick = _ref.handleTypeFilterClick;\n\n    return _react2['default'].createElement(\n        'div',\n        { id: 'log-tabs', className: 'flex-tabs' },\n        _react2['default'].createElement('a', {\n            className: _classnames2['default']({ tab: true, active: !mapFilter }),\n            onClick: function () {\n                return handleMapFilterClick('');\n            },\n            children: 'All'\n        }),\n        _.map(_libStatic2['default'].mapsMeta, function (mm) {\n            return _.some(maps, function (matchMap) {\n                return matchMap.id == mm.id;\n            }) ? _react2['default'].createElement('a', {\n                key: mm.id,\n                className: _classnames2['default']({ tab: true, active: mapFilter == mm.id }),\n                onClick: function () {\n                    return handleMapFilterClick(_.parseInt(mm.id));\n                },\n                title: mm.name,\n                children: mm.abbr\n            }) : null;\n        }),\n        _.map(['castle', 'keep', 'tower', 'camp'], function (t) {\n            return _react2['default'].createElement(\n                'a',\n                {\n                    key: t,\n                    className: _classnames2['default']({ check: true, active: typeFilter[t], first: t === 'castle' }),\n                    onClick: function () {\n                        return handleTypeFilterClick(t);\n                    }\n                },\n                _react2['default'].createElement(_commonIconsSprite2['default'], { type: t })\n            );\n        })\n    );\n};\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./../../common/icons/Sprite\":35,\"./../../lib/static\":42}],22:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Entries = require('./Entries');\n\nvar _Entries2 = _interopRequireDefault(_Entries);\n\nvar _Tabs = require('./Tabs');\n\nvar _Tabs2 = _interopRequireDefault(_Tabs);\n\nvar LogContainer = (function (_React$Component) {\n    _inherits(LogContainer, _React$Component);\n\n    _createClass(LogContainer, null, [{\n        key: 'propTypes',\n        value: {\n            lang: _react2['default'].PropTypes.object.isRequired,\n            log: _react2['default'].PropTypes.array.isRequired,\n            guilds: _react2['default'].PropTypes.object.isRequired,\n            match: _react2['default'].PropTypes.object.isRequired\n        },\n        enumerable: true\n    }]);\n\n    function LogContainer(props) {\n        _classCallCheck(this, LogContainer);\n\n        _React$Component.call(this, props);\n\n        this.state = {\n            mapFilter: '',\n            typeFilter: {\n                castle: true,\n                keep: true,\n                tower: true,\n                camp: true\n            }\n        };\n    }\n\n    LogContainer.prototype.render = function render() {\n        return _react2['default'].createElement(\n            'div',\n            { id: 'log-container' },\n            _react2['default'].createElement(_Tabs2['default'], {\n                maps: this.props.match.maps,\n                mapFilter: this.state.mapFilter,\n                typeFilter: this.state.typeFilter,\n\n                handleMapFilterClick: this.handleMapFilterClick.bind(this),\n                handleTypeFilterClick: this.handleTypeFilterClick.bind(this)\n            }),\n            _react2['default'].createElement(_Entries2['default'], {\n                guilds: this.props.guilds,\n                lang: this.props.lang,\n                log: this.props.log,\n                now: this.props.now,\n                mapFilter: this.state.mapFilter,\n                typeFilter: this.state.typeFilter\n            })\n        );\n    };\n\n    LogContainer.prototype.handleMapFilterClick = function handleMapFilterClick(mapFilter) {\n        console.log('set mapFilter', mapFilter);\n\n        this.setState({ mapFilter: mapFilter });\n    };\n\n    LogContainer.prototype.handleTypeFilterClick = function handleTypeFilterClick(toggleType) {\n        console.log('toggle typeFilter', toggleType);\n\n        this.setState(function (state) {\n            state.typeFilter[toggleType] = !state.typeFilter[toggleType];\n            return state;\n        });\n    };\n\n    return LogContainer;\n})(_react2['default'].Component);\n\nexports['default'] = LogContainer;\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./Entries\":20,\"./Tabs\":21}],23:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = (typeof window !== \"undefined\" ? window['classNames'] : typeof global !== \"undefined\" ? global['classNames'] : null);\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _libStatic = require('./../../lib/static');\n\nvar _libStatic2 = _interopRequireDefault(_libStatic);\n\nvar _commonIconsArrow = require('./../../common/icons/Arrow');\n\nvar _commonIconsArrow2 = _interopRequireDefault(_commonIconsArrow);\n\nvar _commonIconsSprite = require('./../../common/icons/Sprite');\n\nvar _commonIconsSprite2 = _interopRequireDefault(_commonIconsSprite);\n\nvar _commonIconsObjective = require('./../../common/icons/Objective');\n\nvar _commonIconsObjective2 = _interopRequireDefault(_commonIconsObjective);\n\n/*\r\n*\r\n* Component Definition\r\n*\r\n*/\n\nexports['default'] = function (_ref) {\n    var guilds = _ref.guilds;\n    var lang = _ref.lang;\n    var match = _ref.match;\n    var now = _ref.now;\n\n    if (_.isEmpty(match)) {\n        return null;\n    }\n\n    // console.log('match', match);\n\n    return _react2['default'].createElement(\n        'section',\n        { id: 'maps' },\n        _.map(_libStatic2['default'].mapsMeta, function (mm) {\n            var matchMap = _.find(match.maps, function (m) {\n                return m.id == mm.id;\n            });\n\n            return matchMap ? _react2['default'].createElement(MapTracker, {\n                key: mm.id,\n                guilds: guilds,\n                lang: lang,\n                mapMeta: mm,\n                matchMap: matchMap,\n                now: now\n            }) : null;\n        })\n    );\n};\n\nvar MapTracker = function MapTracker(_ref2) {\n    var guilds = _ref2.guilds;\n    var lang = _ref2.lang;\n    var mapMeta = _ref2.mapMeta;\n    var matchMap = _ref2.matchMap;\n    var now = _ref2.now;\n    return _react2['default'].createElement(\n        'div',\n        { className: 'map' },\n        _react2['default'].createElement(\n            'h2',\n            null,\n            mapMeta.name\n        ),\n        _react2['default'].createElement(Scoreboard, {\n            scores: matchMap.scores,\n            ticks: matchMap.ticks,\n            holdings: matchMap.holdings,\n            deaths: matchMap.deaths,\n            kills: matchMap.kills\n        }),\n        _react2['default'].createElement(MapSections, {\n            guilds: guilds,\n            lang: lang,\n            mapMeta: mapMeta,\n            matchMap: matchMap,\n            now: now\n        })\n    );\n};\n\nvar Scoreboard = function Scoreboard(_ref3) {\n    var scores = _ref3.scores;\n    var ticks = _ref3.ticks;\n    var holdings = _ref3.holdings;\n    var deaths = _ref3.deaths;\n    var kills = _ref3.kills;\n    return _react2['default'].createElement('ul', null);\n};\n\nvar MapSections = function MapSections(_ref4) {\n    var guilds = _ref4.guilds;\n    var lang = _ref4.lang;\n    var matchMap = _ref4.matchMap;\n    var now = _ref4.now;\n\n    return _react2['default'].createElement(\n        'div',\n        { className: 'map-sections' },\n        _.map(getMapObjectivesMeta(matchMap.id), function (section, ix) {\n            return _react2['default'].createElement(\n                'div',\n                { className: _classnames2['default']({\n                        'map-section': true,\n                        solo: section.length === 1\n                    }), key: ix },\n                _.map(section, function (geo) {\n                    return _react2['default'].createElement(Objective, {\n                        key: geo.id,\n                        id: geo.id,\n                        guilds: guilds,\n                        lang: lang,\n                        direction: geo.direction,\n                        matchMap: matchMap,\n                        now: now\n                    });\n                })\n            );\n        })\n    );\n};\n\nvar Objective = function Objective(_ref5) {\n    var id = _ref5.id;\n    var guilds = _ref5.guilds;\n    var lang = _ref5.lang;\n    var direction = _ref5.direction;\n    var matchMap = _ref5.matchMap;\n    var now = _ref5.now;\n\n    var objectiveId = matchMap.id + '-' + id;\n    var oMeta = _libStatic2['default'].objectives[objectiveId];\n    var mo = _.find(matchMap.objectives, function (o) {\n        return o.id === objectiveId;\n    });\n\n    if (!mo) {\n        // console.log('matchMap.objectives', matchMap.objectives);\n        console.log(matchMap.id, id, objectiveId, mo);\n    }\n\n    return _react2['default'].createElement(\n        'ul',\n        { className: _classnames2['default']({\n                'list-unstyled': true,\n                'track-objective': true,\n                'fresh': now.diff(mo.lastFlipped, 'seconds') < 30,\n                'expiring': mo.expires.isAfter(now) && mo.expires.diff(now, 'seconds') < 30,\n                'expired': now.isAfter(mo.expires),\n                'active': now.isBefore(mo.expires)\n            }) },\n        _react2['default'].createElement(\n            'li',\n            { className: 'left' },\n            _react2['default'].createElement(\n                'span',\n                { className: 'track-geo' },\n                _react2['default'].createElement(_commonIconsArrow2['default'], { direction: direction })\n            ),\n            _react2['default'].createElement(\n                'span',\n                { className: 'track-sprite' },\n                _react2['default'].createElement(_commonIconsObjective2['default'], { color: mo.owner, type: mo.type })\n            ),\n            _react2['default'].createElement(\n                'span',\n                { className: 'track-name' },\n                oMeta.name[lang.slug]\n            )\n        ),\n        _react2['default'].createElement(\n            'li',\n            { className: 'right' },\n            mo.guild ? _react2['default'].createElement(\n                'a',\n                {\n                    className: 'track-guild',\n                    href: '#' + mo.guild,\n                    title: guilds[mo.guild] ? guilds[mo.guild].name + ' [' + guilds[mo.guild].tag + ']' : 'Loading...'\n                },\n                _react2['default'].createElement('img', { src: 'https://guilds.gw2w2w.com/' + mo.guild + '.svg', className: 'emblem' })\n            ) : null,\n            _react2['default'].createElement(\n                'span',\n                { className: 'track-expire' },\n                mo.expires.isAfter(now) ? moment(mo.expires.diff(now, 'milliseconds')).format('m:ss') : null\n            )\n        )\n    );\n};\n\nfunction getMapObjectivesMeta(mapId) {\n    var mapCode = 'bl2';\n\n    if (mapId === 38) {\n        mapCode = 'eb';\n    }\n\n    return _.chain(_libStatic2['default'].objectivesMeta).cloneDeep().filter(function (om) {\n        return om.map === mapCode;\n    }).groupBy(function (om) {\n        return om.group;\n    }).value();\n}\n\n/*\r\n\r\n\r\n                    <div className='col-md-6'>{<MapDetails mapKey='Center' mapMeta={getMapMeta('Center')} {...this.props} />}</div>\r\n\r\n                    <div className='col-md-18'>\r\n\r\n                        <div className='row'>\r\n                            <div className='col-md-8'>{<MapDetails mapKey='RedHome' mapMeta={getMapMeta('RedHome')} {...this.props} />}</div>\r\n                            <div className='col-md-8'>{<MapDetails mapKey='BlueHome' mapMeta={getMapMeta('BlueHome')} {...this.props} />}</div>\r\n                            <div className='col-md-8'>{<MapDetails mapKey='GreenHome' mapMeta={getMapMeta('GreenHome')} {...this.props} />}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                 */\nmodule.exports = exports['default'];\n/*<pre>{JSON.stringify(matchMap, null, '\\t')}</pre>*/ /*<li>{JSON.stringify(scores)}</li>*/ /*<li>{JSON.stringify(ticks)}</li>*/ /*<li>{JSON.stringify(holdings)}</li>*/ /*<li>{JSON.stringify(deaths)}</li>*/ /*<li>{JSON.stringify(kills)}</li>*/\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./../../common/icons/Arrow\":33,\"./../../common/icons/Objective\":34,\"./../../common/icons/Sprite\":35,\"./../../lib/static\":42}],24:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _commonIconsSprite = require('./../../common/Icons/Sprite');\n\nvar _commonIconsSprite2 = _interopRequireDefault(_commonIconsSprite);\n\nexports['default'] = function (_ref) {\n    var color = _ref.color;\n    var holdings = _ref.holdings;\n    return _react2['default'].createElement(\n        'ul',\n        { className: 'list-inline' },\n        _.map(holdings, function (typeQuantity, typeIndex) {\n            return _react2['default'].createElement(\n                'li',\n                { key: typeIndex },\n                _react2['default'].createElement(_commonIconsSprite2['default'], {\n                    type: typeIndex,\n                    color: color\n                }),\n                _react2['default'].createElement(\n                    'span',\n                    { className: 'quantity' },\n                    'x',\n                    typeQuantity\n                )\n            );\n        })\n    );\n};\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./../../common/Icons/Sprite\":30}],25:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _numeral = (typeof window !== \"undefined\" ? window['numeral'] : typeof global !== \"undefined\" ? global['numeral'] : null);\n\nvar _numeral2 = _interopRequireDefault(_numeral);\n\nvar _Holdings = require('./Holdings');\n\nvar _Holdings2 = _interopRequireDefault(_Holdings);\n\nvar _libStatic = require('./../../lib/static');\n\nvar _ref = _react2['default'].createElement('i', { className: 'fa fa-spinner fa-spin' });\n\nvar Loading = function Loading() {\n    return _react2['default'].createElement(\n        'h1',\n        { style: { height: '90px', fontSize: '32pt', lineHeight: '90px' } },\n        _ref\n    );\n};\n\nvar _ref2 = _react2['default'].createElement(Loading, null);\n\nexports['default'] = function (_ref3) {\n    var color = _ref3.color;\n    var deaths = _ref3.deaths;\n    var id = _ref3.id;\n    var holdings = _ref3.holdings;\n    var kills = _ref3.kills;\n    var lang = _ref3.lang;\n    var score = _ref3.score;\n    var tick = _ref3.tick;\n\n    var world = _libStatic.worlds[id][lang.slug];\n\n    if (!world && _lodash2['default'].isEmpty(world)) {\n        return _ref2;\n    }\n\n    return _react2['default'].createElement(\n        'div',\n        { className: 'scoreboard team-bg team text-center ' + color },\n        _react2['default'].createElement(\n            'h1',\n            null,\n            _react2['default'].createElement(\n                'a',\n                { href: world.link },\n                world.name\n            )\n        ),\n        _react2['default'].createElement(\n            'h2',\n            null,\n            _react2['default'].createElement(\n                'div',\n                { className: 'stats' },\n                _react2['default'].createElement(\n                    'span',\n                    { title: 'Total Score' },\n                    _numeral2['default'](score).format('0,0')\n                ),\n                ' ',\n                _react2['default'].createElement(\n                    'span',\n                    { title: 'Total Tick' },\n                    _numeral2['default'](tick).format('+0,0')\n                )\n            ),\n            kills ? _react2['default'].createElement(\n                'div',\n                { className: 'sub-stats' },\n                _react2['default'].createElement(\n                    'span',\n                    { title: 'Total Kills' },\n                    _numeral2['default'](kills).format('0,0'),\n                    'k'\n                ),\n                ' ',\n                _react2['default'].createElement(\n                    'span',\n                    { title: 'Total Deaths' },\n                    _numeral2['default'](deaths).format('0,0'),\n                    'd'\n                )\n            ) : null\n        ),\n        _react2['default'].createElement(_Holdings2['default'], {\n            color: color,\n            holdings: holdings\n        })\n    );\n};\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./../../lib/static\":42,\"./Holdings\":24}],26:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _World = require('./World');\n\nvar _World2 = _interopRequireDefault(_World);\n\n/*\r\n*\r\n* Component Definition\r\n*\r\n*/\n\nexports['default'] = function (_ref) {\n    var match = _ref.match;\n    var lang = _ref.lang;\n\n    var worldsProps = getWorldsProps(match, lang);\n\n    return _react2['default'].createElement(\n        'section',\n        { className: 'row', id: 'scoreboards' },\n        _lodash2['default'].map(worldsProps, function (worldProps) {\n            return _react2['default'].createElement(\n                'div',\n                { className: 'col-sm-8', key: worldProps.id },\n                _react2['default'].createElement(_World2['default'], worldProps)\n            );\n        })\n    );\n};\n\nfunction getWorldsProps(match, lang) {\n    return _lodash2['default'].reduce(match.worlds, function (acc, worldId, color) {\n        acc[color] = {\n            color: color,\n            lang: lang,\n            id: worldId,\n            score: _lodash2['default'].get(match, ['scores', color], 0),\n            deaths: _lodash2['default'].get(match, ['deaths', color], 0),\n            kills: _lodash2['default'].get(match, ['kills', color], 0),\n            tick: _lodash2['default'].get(match, ['ticks', color], 0),\n            holdings: _lodash2['default'].get(match, ['holdings', color], [])\n        };\n        return acc;\n    }, { red: {}, blue: {}, green: {} });\n}\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./World\":25}],27:[function(require,module,exports){\n(function (global){\n'use strict';\n\n/*\r\n*\r\n* Dependencies\r\n*\r\n*/\n\nexports.__esModule = true;\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\n\nvar _moment2 = _interopRequireDefault(_moment);\n\n/*\r\n *   libs\r\n */\n\nvar _libDate = require('./../lib/date');\n\nvar _libDate2 = _interopRequireDefault(_libDate);\n\nvar _libTrackerTimers = require('./../lib/trackerTimers');\n\nvar _libTrackerTimers2 = _interopRequireDefault(_libTrackerTimers);\n\n/*\r\n *   Data\r\n */\n\nvar _libDataTracker = require('./../lib/data/tracker');\n\nvar _libDataTracker2 = _interopRequireDefault(_libDataTracker);\n\n/*\r\n * React Components\r\n */\n\nvar _Scoreboard = require('./Scoreboard');\n\nvar _Scoreboard2 = _interopRequireDefault(_Scoreboard);\n\nvar _Maps = require('./Maps');\n\nvar _Maps2 = _interopRequireDefault(_Maps);\n\nvar _Log = require('./Log');\n\nvar _Log2 = _interopRequireDefault(_Log);\n\n// import Guilds from './Guilds';\n\n/*\r\n* Globals\r\n*/\n\nvar updateTimeInterval = 1000;\n\nvar _ref = _react2['default'].createElement(\n    'h1',\n    { id: 'AppLoading' },\n    _react2['default'].createElement('i', { className: 'fa fa-spinner fa-spin' })\n);\n\nvar LoadingSpinner = function LoadingSpinner() {\n    return _ref;\n};\n\n/*\r\n*\r\n* Component Export\r\n*\r\n*/\n\nvar _ref2 = _react2['default'].createElement(LoadingSpinner, null);\n\nvar Tracker = (function (_React$Component) {\n    _inherits(Tracker, _React$Component);\n\n    _createClass(Tracker, null, [{\n        key: 'propTypes',\n        value: {\n            lang: _react2['default'].PropTypes.object.isRequired,\n            world: _react2['default'].PropTypes.object.isRequired\n        },\n\n        /*\r\n        *\r\n        *     React Lifecycle\r\n        *\r\n        */\n\n        enumerable: true\n    }]);\n\n    function Tracker(props) {\n        var _this = this;\n\n        _classCallCheck(this, Tracker);\n\n        _React$Component.call(this, props);\n\n        this.__mounted = false;\n        this.__timeouts = {};\n        this.__intervals = {};\n\n        var dataListeners = {\n            onMatchDetails: this.onMatchDetails.bind(this),\n            onGuildDetails: this.onGuildDetails.bind(this)\n        };\n\n        this.dao = new _libDataTracker2['default'](dataListeners);\n\n        this.state = {\n            hasData: false,\n            match: {},\n            log: [],\n            guilds: {},\n            now: now()\n        };\n\n        this.__intervals.setDate = setInterval(function () {\n            return _this.setState({ now: now() });\n        }, updateTimeInterval);\n    }\n\n    /*\r\n    *\r\n    * Private methods\r\n    *\r\n    */\n\n    Tracker.prototype.componentDidMount = function componentDidMount() {\n        // console.log('Tracker::componentDidMount()');\n        this.__mounted = true;\n\n        setPageTitle(this.props.lang, this.props.world);\n\n        this.dao.init(this.props.world);\n    };\n\n    Tracker.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n        setPageTitle(nextProps.lang, nextProps.world);\n        this.dao.setWorld(nextProps.world);\n    };\n\n    Tracker.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n        return this.isNewSecond(nextState) || this.isNewLang(nextProps);\n    };\n\n    Tracker.prototype.isNewSecond = function isNewSecond(nextState) {\n        return !this.state.now.isSame(nextState.now);\n    };\n\n    Tracker.prototype.isNewLang = function isNewLang(nextProps) {\n        return this.props.lang.name !== nextProps.lang.name;\n    };\n\n    Tracker.prototype.componentWillUnmount = function componentWillUnmount() {\n        // console.log('Tracker::componentWillUnmount()');\n\n        this.__mounted = false;\n        this.__timeouts = _lodash2['default'].map(this.__timeouts, function (t) {\n            return clearTimeout(t);\n        });\n        this.__intervals = _lodash2['default'].map(this.__intervals, function (i) {\n            return clearInterval(i);\n        });\n\n        this.dao.close();\n    };\n\n    // componentWillUpdate() {\n    //  console.log('Tracker::componentWillUpdate()');\n    // }\n\n    Tracker.prototype.render = function render() {\n        // console.log('Tracker::render()');\n\n        return _react2['default'].createElement(\n            'div',\n            { id: 'tracker' },\n            !this.state.hasData ? _ref2 : null,\n            this.state.match && !_lodash2['default'].isEmpty(this.state.match) ? _react2['default'].createElement(_Scoreboard2['default'], {\n                lang: this.props.lang,\n                match: this.state.match\n            }) : null,\n            this.state.match && !_lodash2['default'].isEmpty(this.state.match) ? _react2['default'].createElement(_Maps2['default'], {\n                guilds: this.state.guilds,\n                lang: this.props.lang,\n                match: this.state.match,\n                now: this.state.now\n            }) : null,\n            _react2['default'].createElement(\n                'div',\n                { className: 'row' },\n                _react2['default'].createElement(\n                    'div',\n                    { className: 'col-md-24' },\n                    _react2['default'].createElement(_Log2['default'], {\n                        guilds: this.state.guilds,\n                        lang: this.props.lang,\n                        log: this.state.log,\n                        match: this.state.match,\n                        now: this.state.now\n                    })\n                )\n            )\n        );\n    };\n\n    /*\r\n    *\r\n    *   Data Listeners\r\n    *\r\n    */\n\n    // updateTimers(cb = _.noop) {\n    //     if (this.__mounted) {\n    //         trackerTimers.update(this.state.time.offset, cb);\n    //         this.__timeouts.updateTimers = setTimeout(this.updateTimers.bind(this), updateTimeInterval);\n    //     }\n    // }\n\n    Tracker.prototype.onMatchDetails = function onMatchDetails(match) {\n        var _this2 = this;\n\n        var log = getLog(match);\n\n        this.setState({\n            hasData: true,\n            match: match,\n            log: log\n        });\n\n        setImmediate(function () {\n            var knownGuilds = _lodash2['default'].keys(_this2.state.guilds);\n            var unknownGuilds = getNewClaims(log, knownGuilds);\n\n            _this2.dao.guilds.lookup(unknownGuilds, _this2.onGuildDetails.bind(_this2));\n        });\n    };\n\n    // onMatchDetails(timeRemote, match, details) {\n    //     const lastmod      = match.get('lastmod');\n    //     const isModified   = (lastmod !== this.state.match.get('lastmod'));\n\n    //     if (isModified) {\n    //         // console.log('onMatchDetails', lastmod);\n\n    //         const matchWorlds = (this.state.matchWorlds && Immutable.Map.isMap(this.state.matchWorlds))\n    //             ? this.state.matchWorlds\n    //             : this.dao.getMatchWorlds(this.props.lang, match);\n\n    //         this.setState({\n    //             hasData: true,\n    //             time: this.getTime(timeRemote),\n    //             lastmod,\n\n    //             claimEvents,\n    //             details,\n    //             match,\n    //             matchWorlds,\n    //         });\n\n    //         setImmediate(() => this.dao.guilds.lookup(\n    //             this.state.guilds,\n    //             details,\n    //             this.onGuildDetails.bind(this)\n    //         ));\n    //     }\n    // }\n\n    Tracker.prototype.onGuildDetails = function onGuildDetails(guild) {\n        // console.log('onGuildDetails', guild);\n\n        this.setState(function (state) {\n            state.guilds[guild.id] = guild;\n\n            return { guilds: state.guilds };\n        });\n    };\n\n    return Tracker;\n})(_react2['default'].Component);\n\nexports['default'] = Tracker;\nfunction now() {\n    return _moment2['default'](Math.floor(Date.now() / 1000) * 1000);\n}\n\nfunction setPageTitle(lang, world) {\n    var langSlug = lang.slug;\n    var worldName = world[langSlug].name;\n\n    var title = [worldName, 'gw2w2w'];\n\n    if (langSlug !== 'en') {\n        title.push(lang.name);\n    }\n\n    document.title = title.join(' - ');\n}\n\nfunction getLog(match) {\n    return _lodash2['default'].chain(match.maps).pluck('objectives').flatten().clone().sortBy('lastFlipped').reverse().map(function (o) {\n        o.mapId = _lodash2['default'].parseInt(o.id.split('-')[0]);\n        o.lastmod = _moment2['default'](o.lastmod, 'X');\n        o.lastFlipped = _moment2['default'](o.lastFlipped, 'X');\n        o.lastClaimed = _moment2['default'](o.lastClaimed, 'X');\n        o.expires = _moment2['default'](o.lastFlipped).add(5, 'minutes');\n        return o;\n    }).value();\n};\n\nfunction getNewClaims(log, knownGuilds) {\n    return _lodash2['default'].chain(log).reject(function (o) {\n        return _lodash2['default'].isEmpty(o.guild);\n    }).pluck('guild').unique().difference(knownGuilds).value();\n}\nmodule.exports = exports['default'];\n/*(this.state.guilds && !this.state.guilds.isEmpty())\r\n   ? <div className='row'>\r\n       <div className='col-md-24'>\r\n           <Guilds\r\n               claimEvents={this.state.claimEvents}\r\n               guilds={this.state.guilds}\r\n               lang={this.props.lang}\r\n               time={this.state.time}\r\n           />\r\n       </div>\r\n   </div>\r\n   : null\r\n*/\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./../lib/data/tracker\":40,\"./../lib/date\":41,\"./../lib/trackerTimers\":43,\"./Log\":22,\"./Maps\":23,\"./Scoreboard\":26}],28:[function(require,module,exports){\n(function (global){\n'use strict';\n\n// require('babel/polyfill');\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*\r\n*\r\n* Dependencies\r\n*\r\n*/\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _page = (typeof window !== \"undefined\" ? window['page'] : typeof global !== \"undefined\" ? global['page'] : null);\n\nvar _page2 = _interopRequireDefault(_page);\n\nvar _libStatic = require('./lib/static');\n\nvar _libStatic2 = _interopRequireDefault(_libStatic);\n\n/*\r\n* React Components\r\n*/\n\nvar _commonLangs = require('./common/Langs');\n\nvar _commonLangs2 = _interopRequireDefault(_commonLangs);\n\nvar _commonLayoutNavbarHeader = require('./common/layout/NavbarHeader');\n\nvar _commonLayoutNavbarHeader2 = _interopRequireDefault(_commonLayoutNavbarHeader);\n\nvar _Overview = require('./Overview');\n\nvar _Overview2 = _interopRequireDefault(_Overview);\n\nvar _Tracker = require('./Tracker');\n\nvar _Tracker2 = _interopRequireDefault(_Tracker);\n\n/*\r\n*\r\n* DOM Ready\r\n*\r\n*/\n\nconsole.clear();$(function () {\n    attachRoutes();\n    setImmediate(eml);\n});\n\n/*\r\n*\r\n* Routes\r\n*\r\n*/\n\nfunction attachRoutes() {\n\n    // Redirect '/' to '/en'\n    _page2['default']('/', redirectPage.bind(null, '/en'));\n\n    _page2['default']('/:langSlug(en|de|es|fr)/:worldSlug([a-z-]+)?', function (ctx) {\n        _reactDom2['default'].render(_react2['default'].createElement(App, ctx.params), document.getElementById('react-app'));\n    });\n\n    _page2['default'].start({\n        click: true,\n        popstate: true,\n        dispatch: true,\n        hashbang: false,\n        decodeURLComponents: true\n    });\n}\n\n/*\r\n*\r\n* App Container\r\n*\r\n*/\n\nvar _ref = _react2['default'].createElement(_commonLayoutNavbarHeader2['default'], null);\n\nvar App = (function (_React$Component) {\n    _inherits(App, _React$Component);\n\n    function App() {\n        _classCallCheck(this, App);\n\n        _React$Component.apply(this, arguments);\n    }\n\n    /*\r\n    *\r\n    * Util\r\n    *\r\n    */\n\n    App.prototype.componentDidMount = function componentDidMount() {\n        // console.log('App Started!');\n    };\n\n    App.prototype.render = function render() {\n        var langSlug = this.props.langSlug;\n        var worldSlug = this.props.worldSlug;\n\n        var lang = _libStatic2['default'].langs[langSlug];\n        var world = getWorldFromSlug(langSlug, worldSlug);\n\n        var hasWorld = world && !_.isEmpty(world);\n        var Handler = hasWorld ? _Tracker2['default'] : _Overview2['default'];\n\n        return _react2['default'].createElement(\n            'div',\n            null,\n            _react2['default'].createElement(\n                'nav',\n                { className: 'navbar navbar-default' },\n                _react2['default'].createElement(\n                    'div',\n                    { className: 'container' },\n                    _ref,\n                    _react2['default'].createElement(\n                        'div',\n                        { id: 'nav-langs', className: 'pull-right' },\n                        _react2['default'].createElement(_commonLangs2['default'], { lang: lang, world: world })\n                    )\n                )\n            ),\n            _react2['default'].createElement(\n                'div',\n                { id: 'content', className: 'container' },\n                _react2['default'].createElement(Handler, { lang: lang, world: world })\n            ),\n            _react2['default'].createElement(\n                'h1',\n                { style: { textAlign: 'center' } },\n                'Updates for HoT expansion changes are ongoing'\n            )\n        );\n    };\n\n    _createClass(App, null, [{\n        key: 'propTypes',\n        value: {\n            langSlug: _react2['default'].PropTypes.string.isRequired,\n            worldSlug: _react2['default'].PropTypes.string\n        },\n        enumerable: true\n    }]);\n\n    return App;\n})(_react2['default'].Component);\n\nfunction redirectPage(destination) {\n    _page2['default'].redirect(destination);\n}\n\nfunction getWorldFromSlug(langSlug, worldSlug) {\n    return _.find(_libStatic2['default'].worlds, function (world) {\n        return world[langSlug].slug === worldSlug;\n    });\n}\n\nfunction eml() {\n    var chunks = ['gw2w2w', 'schtuph', 'com', '@', '.'];\n    var addr = [chunks[0], chunks[3], chunks[1], chunks[4], chunks[2]].join('');\n\n    $('.nospam-prz').each(function (i, el) {\n        $(el).replaceWith($('<a>', { href: 'mailto:' + addr, text: addr }));\n    });\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./Overview\":19,\"./Tracker\":27,\"./common/Langs\":32,\"./common/layout/NavbarHeader\":36,\"./lib/static\":42}],29:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\n/*\r\n * Component Globals\r\n */\n\nvar INSTANCE = {\n    size: 60,\n    stroke: 2\n};\n\nexports['default'] = function (_ref) {\n    var scores = _ref.scores;\n    return _react2['default'].createElement('img', {\n        src: getImageSource(scores),\n\n        width: INSTANCE.size,\n        height: INSTANCE.size\n    });\n};\n\nfunction getImageSource(scores) {\n    return 'https://www.piely.net/' + INSTANCE.size + '/' + scores.red + ',' + scores.blue + ',' + scores.green + '?strokeWidth=' + INSTANCE.stroke;\n}\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],30:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nexports['default'] = function (_ref) {\n    var color = _ref.color;\n    var type = _ref.type;\n    return _react2['default'].createElement('span', { className: 'sprite ' + type + ' ' + color });\n};\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],31:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = (typeof window !== \"undefined\" ? window['classNames'] : typeof global !== \"undefined\" ? global['classNames'] : null);\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nexports['default'] = function (_ref) {\n    var lang = _ref.lang;\n    var linkLang = _ref.linkLang;\n    var world = _ref.world;\n    return _react2['default'].createElement(\n        'li',\n        {\n            className: getClassname(lang, linkLang),\n            title: linkLang.name\n        },\n        _react2['default'].createElement(\n            'a',\n            { href: getLink(linkLang, world) },\n            linkLang.label\n        )\n    );\n};\n\nfunction getClassname(lang, linkLang) {\n    return _classnames2['default']({\n        active: lang.label === linkLang.label\n    });\n}\n\nfunction getLink(lang, world) {\n    var langSlug = lang.slug;\n\n    var link = '/' + langSlug;\n\n    if (world) {\n        var worldSlug = world[langSlug].slug;\n\n        link += '/' + worldSlug;\n    }\n\n    return link;\n}\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],32:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libStatic = require('./../../lib/static');\n\nvar _libStatic2 = _interopRequireDefault(_libStatic);\n\nvar _LangLink = require('./LangLink');\n\nvar _LangLink2 = _interopRequireDefault(_LangLink);\n\nexports['default'] = function (_ref) {\n    var lang = _ref.lang;\n    var world = _ref.world;\n    return _react2['default'].createElement(\n        'ul',\n        { className: 'nav navbar-nav' },\n        _.map(_libStatic2['default'].langs, function (linkLang, key) {\n            return _react2['default'].createElement(_LangLink2['default'], {\n                key: key,\n\n                lang: lang,\n                linkLang: linkLang,\n                world: world\n            });\n        })\n    );\n};\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./../../lib/static\":42,\"./LangLink\":31}],33:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ref = _react2['default'].createElement('span', null);\n\nexports['default'] = function (_ref2) {\n    var direction = _ref2.direction;\n    return direction ? _react2['default'].createElement('img', { src: getArrowSrc(direction), className: 'arrow' }) : _ref;\n};\n\n/*\r\n *\r\n * Private Methods\r\n *\r\n */\n\nfunction getArrowSrc(direction) {\n    if (!direction) {\n        return null;\n    }\n\n    var src = ['/img/icons/dist/arrow'];\n\n    if (direction.indexOf('N') >= 0) {\n        src.push('north');\n    } else if (direction.indexOf('S') >= 0) {\n        src.push('south');\n    }\n\n    if (direction.indexOf('W') >= 0) {\n        src.push('west');\n    } else if (direction.indexOf('E') >= 0) {\n        src.push('east');\n    }\n\n    return src.join('-') + '.svg';\n}\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],34:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nexports['default'] = function (_ref) {\n    var _ref$color = _ref.color;\n    var color = _ref$color === undefined ? 'black' : _ref$color;\n    var type = _ref.type;\n\n    var src = '/img/icons/dist/';\n    src += type;\n    if (color !== 'black') {\n        src += '-' + color;\n    }\n    src += '.svg';\n\n    return _react2['default'].createElement('img', { src: src, className: 'icon-objective icon-objective-' + type });\n};\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],35:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nexports['default'] = function (_ref) {\n    var color = _ref.color;\n    var type = _ref.type;\n    return _react2['default'].createElement('span', { className: 'sprite ' + type + ' ' + color });\n};\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],36:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ref = _react2['default'].createElement(\n    'div',\n    { className: 'navbar-header' },\n    _react2['default'].createElement(\n        'a',\n        { className: 'navbar-brand', href: '/' },\n        _react2['default'].createElement('img', { src: '/img/logo/logo-96x36.png' })\n    )\n);\n\nexports['default'] = function () {\n    return _ref;\n};\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],37:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\nexports.getGuildById = getGuildById;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _jQuery = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar _jQuery2 = _interopRequireDefault(_jQuery);\n\nvar _lodash = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nexports['default'] = {\n    // getMatches: getMatches,\n    getMatchByWorldSlug: getMatchByWorldSlug,\n    getMatchByWorldId: getMatchByWorldId,\n    getGuildById: getGuildById\n};\n\nfunction getMatchByWorldSlug(_ref) {\n    var worldSlug = _ref.worldSlug;\n    var _ref$success = _ref.success;\n    var success = _ref$success === undefined ? _lodash2['default'].noop : _ref$success;\n    var _ref$error = _ref.error;\n    var error = _ref$error === undefined ? _lodash2['default'].noop : _ref$error;\n    var _ref$complete = _ref.complete;\n    var complete = _ref$complete === undefined ? _lodash2['default'].noop : _ref$complete;\n\n    _jQuery2['default'].ajax({\n        url: 'http://state.gw2w2w.com/world/' + worldSlug,\n        success: success,\n        error: error,\n        complete: complete\n    });\n}\n\nfunction getMatchByWorldId(_ref2) {\n    var worldId = _ref2.worldId;\n    var _ref2$success = _ref2.success;\n    var success = _ref2$success === undefined ? _lodash2['default'].noop : _ref2$success;\n    var _ref2$error = _ref2.error;\n    var error = _ref2$error === undefined ? _lodash2['default'].noop : _ref2$error;\n    var _ref2$complete = _ref2.complete;\n    var complete = _ref2$complete === undefined ? _lodash2['default'].noop : _ref2$complete;\n\n    _jQuery2['default'].ajax({\n        url: 'http://state.gw2w2w.com/world/' + worldId,\n        success: success,\n        error: error,\n        complete: complete\n    });\n}\n\nfunction getGuildById(_ref3) {\n    var guildId = _ref3.guildId;\n    var _ref3$success = _ref3.success;\n    var success = _ref3$success === undefined ? _lodash2['default'].noop : _ref3$success;\n    var _ref3$error = _ref3.error;\n    var error = _ref3$error === undefined ? _lodash2['default'].noop : _ref3$error;\n    var _ref3$complete = _ref3.complete;\n    var complete = _ref3$complete === undefined ? _lodash2['default'].noop : _ref3$complete;\n\n    _jQuery2['default'].ajax({\n        url: 'https://api.guildwars2.com/v1/guild_details.json?guild_id=' + guildId,\n        success: success,\n        error: error,\n        complete: complete\n    });\n}\n\n// function getMatchDetails(matchId, callback) {\n//   gw2api.getMatchDetailsState({match_id: matchId}, callback);\n// }\n\nfunction getMatchDetailsByWorld(worldSlug, callback) {\n    // setTimeout(\n    //  gw2api.getMatchDetailsState.bind(null, {world_slug: worldSlug}, callback),\n    //  3000\n    // );\n    gw2api.getMatchDetailsState({\n        world_slug: worldSlug\n    }, callback);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],38:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _lodash = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _jQuery = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar _jQuery2 = _interopRequireDefault(_jQuery);\n\n// import STATIC from 'lib/static';\n\nvar URL_API_MATCHES = 'http://state.gw2w2w.com/matches';\n\nvar OverviewDataProvider = (function () {\n    function OverviewDataProvider(listeners) {\n        _classCallCheck(this, OverviewDataProvider);\n\n        // console.log('lib::data::overview::constructor()');\n\n        this.__mounted = false;\n        this.__listeners = listeners;\n\n        this.__timeouts = {};\n        this.__intervals = {};\n    }\n\n    OverviewDataProvider.prototype.init = function init() {\n        // console.log('lib::data::overview::init()');\n\n        this.__mounted = true;\n        this.__getData();\n    };\n\n    OverviewDataProvider.prototype.close = function close() {\n        // console.log('lib::data::overview::close()');\n\n        this.__mounted = false;\n\n        this.__timeouts = _lodash2['default'].map(this.__timeouts, function (t) {\n            return clearTimeout(t);\n        });\n        this.__intervals = _lodash2['default'].map(this.__intervals, function (i) {\n            return clearInterval(i);\n        });\n    };\n\n    /*\r\n    *\r\n    *   Private Methods\r\n    *\r\n    */\n\n    OverviewDataProvider.prototype.__getData = function __getData() {\n        // console.log('lib::data::overview::__getData()');\n\n        // api.getMatches(this.__onMatchData.bind(this));\n\n        _jQuery2['default'].ajax({\n            url: URL_API_MATCHES,\n            success: this.__onMatchData.bind(this),\n            complete: this.__setDataTimeout.bind(this)\n        });\n    };\n\n    OverviewDataProvider.prototype.__onMatchData = function __onMatchData(data) {\n        // console.log('lib::data::overview::__onMatchData()', textStatus, jqXHR, data);\n\n        if (data && !_lodash2['default'].isEmpty(data)) {\n            (this.__listeners.onMatchData || _lodash2['default'].noop)(data);\n        }\n    };\n\n    OverviewDataProvider.prototype.__setDataTimeout = function __setDataTimeout() {\n        var interval = getInterval();\n\n        // console.log('lib::data::overview::__setDataTimeout()', interval);\n\n        this.__timeouts.matchData = setTimeout(this.__getData.bind(this), interval);\n    };\n\n    return OverviewDataProvider;\n})();\n\nexports['default'] = OverviewDataProvider;\n\nfunction getInterval() {\n    return _lodash2['default'].random(4000, 8000);\n}\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],39:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _jQuery = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar _jQuery2 = _interopRequireDefault(_jQuery);\n\nvar _lodash = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _async = (typeof window !== \"undefined\" ? window['async'] : typeof global !== \"undefined\" ? global['async'] : null);\n\nvar _async2 = _interopRequireDefault(_async);\n\nvar _libApi = require('./../../api');\n\nvar api = _interopRequireWildcard(_libApi);\n\nvar URL_API_GUILDS = 'https://api.guildwars2.com/v1/guild_details.json';\n\n/*\r\n *\r\n * Module Globals\r\n *\r\n */\n\nvar NUM_QUEUE_CONCURRENT = 4;\n\n/*\r\n *\r\n * Public Methods\r\n *\r\n */\n\nvar LibGuilds = (function () {\n    function LibGuilds() {\n        _classCallCheck(this, LibGuilds);\n\n        // this.component = component;\n\n        this.__asyncGuildQueue = _async2['default'].queue(getGuildDetailsFromQueue, NUM_QUEUE_CONCURRENT);\n    }\n\n    /*\r\n     *\r\n     * Private Methods\r\n     *\r\n     */\n\n    LibGuilds.prototype.lookup = function lookup(guilds, onDataListener) {\n        var toQueue = _lodash2['default'].map(guilds, function (guildId) {\n            return {\n                guildId: guildId,\n                onData: onDataListener\n            };\n        });\n\n        this.__asyncGuildQueue.push(toQueue);\n    };\n\n    return LibGuilds;\n})();\n\nexports['default'] = LibGuilds;\nfunction getGuildDetailsFromQueue(cargo, onComplete) {\n    // console.log('getGuildDetailsFromQueue', cargo, cargo.guildId);\n\n    api.getGuildById({\n        guildId: cargo.guildId,\n        success: function success(data) {\n            return onGuildData(data, cargo);\n        },\n        complete: onComplete\n    });\n}\n\nfunction onGuildData(data, cargo) {\n    console.log('onGuildData', data);\n\n    if (data && !_lodash2['default'].isEmpty(data)) {\n        cargo.onData({\n            id: data.guild_id,\n            name: data.guild_name,\n            tag: data.tag\n        });\n    }\n}\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./../../api\":37}],40:[function(require,module,exports){\n(function (global){\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _lodash = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _guilds = require('./guilds');\n\nvar _guilds2 = _interopRequireDefault(_guilds);\n\nvar _libApi = require('./../../api');\n\nvar _libApi2 = _interopRequireDefault(_libApi);\n\nvar _libStatic = require('./../../static');\n\nvar _libStatic2 = _interopRequireDefault(_libStatic);\n\nvar URL_API_MATCHES = 'http://state.gw2w2w.com/world';\n\nvar OverviewDataProvider = (function () {\n    function OverviewDataProvider(listeners) {\n        _classCallCheck(this, OverviewDataProvider);\n\n        // console.log('lib::data::tracker::constructor()');\n\n        this.__langSlug = null;\n        this.__worldSlug = null;\n\n        this.guilds = new _guilds2['default']();\n\n        this.__mounted = false;\n        this.__listeners = listeners;\n\n        this.__timeouts = {};\n        this.__intervals = {};\n    }\n\n    /*\r\n    *   Worlds\r\n    */\n\n    OverviewDataProvider.prototype.init = function init(world) {\n        // console.log('lib::data::tracker::init()', lang, world);\n\n        this.setWorld(world);\n\n        this.__mounted = true;\n        this.__getData();\n    };\n\n    OverviewDataProvider.prototype.setWorld = function setWorld(world) {\n        this.__worldId = world.id;\n    };\n\n    OverviewDataProvider.prototype.close = function close() {\n        // console.log('lib::data::tracker::close()');\n\n        this.__mounted = false;\n\n        this.__timeouts = _lodash2['default'].map(this.__timeouts, function (t) {\n            return clearTimeout(t);\n        });\n        this.__intervals = _lodash2['default'].map(this.__intervals, function (i) {\n            return clearInterval(i);\n        });\n    };\n\n    OverviewDataProvider.prototype.getMatchWorlds = function getMatchWorlds(match) {\n        return _lodash2['default'].map({ red: {}, blue: {}, green: {} }, function (j, color) {\n            return getMatchWorld(match, color);\n        });\n    };\n\n    /*\r\n    *\r\n    *   Private Methods\r\n    *\r\n    */\n\n    OverviewDataProvider.prototype.__getData = function __getData() {\n        var _this = this;\n\n        // console.log('lib::data::tracker::__getData()');\n\n        // api.getMatchByWorldSlug({\n        //     worldSlug: this.__worldSlug,\n        //     success: (data) => this.__onMatchDetails(data),\n        //     complete: () => this.__rescheduleDataUpdate(),\n        // });\n        _libApi2['default'].getMatchByWorldId({\n            worldId: this.__worldId,\n            success: function success(data) {\n                return _this.__onMatchDetails(data);\n            },\n            complete: function complete() {\n                return _this.__rescheduleDataUpdate();\n            }\n        });\n    };\n\n    OverviewDataProvider.prototype.__onMatchDetails = function __onMatchDetails(data) {\n        // console.log('lib::data::tracker::__onMatchData()', data);\n\n        if (!this.__mounted) {\n            return;\n        }\n\n        if (data && !_lodash2['default'].isEmpty(data)) {\n            this.__listeners.onMatchDetails(data);\n        }\n    };\n\n    OverviewDataProvider.prototype.__rescheduleDataUpdate = function __rescheduleDataUpdate() {\n        var refreshTime = _lodash2['default'].random(1000 * 4, 1000 * 8);\n\n        // console.log('data refresh: ', refreshTime);\n\n        this.__timeouts.data = setTimeout(this.__getData.bind(this), refreshTime);\n    };\n\n    return OverviewDataProvider;\n})();\n\nexports['default'] = OverviewDataProvider;\nfunction getMatchWorld(match, color) {\n    var worldId = match.worlds[color].toString();\n\n    var world = _lodash2['default'].merge({ color: color }, _libStatic2['default'].worlds[worldId]);\n\n    return world;\n}\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./../../api\":37,\"./../../static\":42,\"./guilds\":39}],41:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nmodule.exports = {\n    dateNow: dateNow,\n    add5: add5\n};\n\nfunction dateNow() {\n    return Math.floor(_.now() / 1000);\n}\n\nfunction add5(inDate) {\n    var _baseDate = inDate || dateNow();\n\n    return _baseDate + 5 * 60;\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],42:[function(require,module,exports){\n(function (global){\n'use strict';\n/*eslint camelcase: 0 */\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lodash = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _gw2w2wStatic = require('gw2w2w-static');\n\nvar _gw2w2wStatic2 = _interopRequireDefault(_gw2w2wStatic);\n\nvar worlds = _lodash2['default'].chain(_gw2w2wStatic2['default'].worlds).map(function (world) {\n    _lodash2['default'].forEach(_gw2w2wStatic2['default'].langs, function (lang) {\n        return world[lang.slug].link = getWorldLink(lang.slug, world);\n    });\n    return world;\n}).indexBy('id').value();\n\nexports['default'] = {\n    langs: _gw2w2wStatic2['default'].langs,\n    worlds: worlds,\n    objectives: enhanceObjectives(_gw2w2wStatic2['default'].objectives_v2),\n    objectivesGeo: getObjectiveGeo(),\n    objectivesMeta: getObjectiveMeta(),\n    mapsMeta: getMapsMeta()\n};\n// objectives      : objectives2,\n// objective_names : statics.objective_names,\n// objective_types : statics.objective_types,\n// objective_meta  : statics.objective_meta,\n// objective_labels: statics.objective_labels,\n// objective_map   : statics.objective_map,\n\nfunction getWorldLink(langSlug, world) {\n    return ['', langSlug, world[langSlug].slug].join('/');\n}\n\nfunction enhanceObjectives(objectives) {\n    console.log('objectives', objectives);\n\n    return objectives;\n}\n\nfunction getMapsMeta() {\n    return [{ id: 38, name: 'Eternal Battlegrounds', abbr: 'EB' }, { id: 1099, name: 'Red Borderlands', abbr: 'Red' }, { id: 1102, name: 'Green Borderlands', abbr: 'Grn' }, { id: 1143, name: 'Blue Borderlands', abbr: 'Blu' }];\n}\n\nfunction getObjectiveGeo() {\n    return {\n        eb: [[{ id: '9', direction: '' }], // stonemist\n        [{ id: '1', direction: 'N' }, // overlook\n        { id: '17', direction: 'NW' }, // mendons\n        { id: '20', direction: 'NE' }, // veloka\n        { id: '18', direction: 'SW' }, // anz\n        { id: '19', direction: 'SE' }, // ogre\n        { id: '6', direction: 'W' }, // speldan\n        { id: '5', direction: 'E' }], // pang\n        [{ id: '2', direction: 'SE' }, // valley\n        { id: '15', direction: 'S' }, // langor\n        { id: '22', direction: 'E' }, // bravost\n        { id: '16', direction: 'W' }, // quentin\n        { id: '21', direction: 'N' }, // durios\n        { id: '7', direction: 'SW' }, // dane\n        { id: '8', direction: 'NE' }], // umber\n        [{ id: '3', direction: 'SW' }, // lowlands\n        { id: '11', direction: 'W' }, // aldons\n        { id: '13', direction: 'S' }, // jerrifer\n        { id: '12', direction: 'N' }, // wildcreek\n        { id: '14', direction: 'E' }, // klovan\n        { id: '10', direction: 'NW' }, // rogues\n        { id: '4', direction: 'SE' }]],\n        // golanta\n        bl2: [[{ id: '113', direction: 'N' }, // rampart\n        { id: '106', direction: 'W' }, // undercroft\n        { id: '114', direction: 'E' }], // palace\n        [{ id: '102', direction: 'NW' }, // academy\n        { id: '104', direction: 'NE' }, // necropolis\n        { id: '99', direction: 'N' }, // lab\n        { id: '115', direction: 'NW' }, // hideaway\n        { id: '109', direction: 'NE' }], // refuge\n        [{ id: '110', direction: 'SW' }, // outpost\n        { id: '105', direction: 'SE' }, // depot\n        { id: '101', direction: 'SW' }, // encamp\n        { id: '100', direction: 'SE' }, // farm\n        { id: '116', direction: 'S' }]]\n    };\n}\n\n// well\nfunction getObjectiveMeta() {\n    return _lodash2['default'].chain([{ map: 'eb', group: 1, id: '9', direction: '' }, // stonemist\n    { map: 'eb', group: 2, id: '1', direction: 'N' }, // overlook\n    { map: 'eb', group: 2, id: '17', direction: 'NW' }, // mendons\n    { map: 'eb', group: 2, id: '20', direction: 'NE' }, // veloka\n    { map: 'eb', group: 2, id: '18', direction: 'SW' }, // anz\n    { map: 'eb', group: 2, id: '19', direction: 'SE' }, // ogre\n    { map: 'eb', group: 2, id: '6', direction: 'W' }, // speldan\n    { map: 'eb', group: 2, id: '5', direction: 'E' }, // pang\n    { map: 'eb', group: 3, id: '2', direction: 'SE' }, // valley\n    { map: 'eb', group: 3, id: '15', direction: 'S' }, // langor\n    { map: 'eb', group: 3, id: '22', direction: 'E' }, // bravost\n    { map: 'eb', group: 3, id: '16', direction: 'W' }, // quentin\n    { map: 'eb', group: 3, id: '21', direction: 'N' }, // durios\n    { map: 'eb', group: 3, id: '7', direction: 'SW' }, // dane\n    { map: 'eb', group: 3, id: '8', direction: 'NE' }, // umber\n    { map: 'eb', group: 4, id: '3', direction: 'SW' }, // lowlands\n    { map: 'eb', group: 4, id: '11', direction: 'W' }, // aldons\n    { map: 'eb', group: 4, id: '13', direction: 'S' }, // jerrifer\n    { map: 'eb', group: 4, id: '12', direction: 'N' }, // wildcreek\n    { map: 'eb', group: 4, id: '14', direction: 'E' }, // klovan\n    { map: 'eb', group: 4, id: '10', direction: 'NW' }, // rogues\n    { map: 'eb', group: 4, id: '4', direction: 'SE' }, // golanta\n\n    { map: 'bl2', group: 1, id: '113', direction: 'N' }, // rampart\n    { map: 'bl2', group: 1, id: '106', direction: 'W' }, // undercroft\n    { map: 'bl2', group: 1, id: '114', direction: 'E' }, // palace\n    { map: 'bl2', group: 2, id: '102', direction: 'NW' }, // academy\n    { map: 'bl2', group: 2, id: '104', direction: 'NE' }, // necropolis\n    { map: 'bl2', group: 2, id: '99', direction: 'N' }, // lab\n    { map: 'bl2', group: 2, id: '115', direction: 'NW' }, // hideaway\n    { map: 'bl2', group: 2, id: '109', direction: 'NE' }, // refuge\n    { map: 'bl2', group: 3, id: '110', direction: 'SW' }, // outpost\n    { map: 'bl2', group: 3, id: '105', direction: 'SE' }, // depot\n    { map: 'bl2', group: 3, id: '101', direction: 'SW' }, // encamp\n    { map: 'bl2', group: 3, id: '100', direction: 'SE' }, // farm\n    { map: 'bl2', group: 3, id: '116', direction: 'S' }]). // well\n    indexBy('id').value();\n}\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"gw2w2w-static\":13}],43:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar async = (typeof window !== \"undefined\" ? window['async'] : typeof global !== \"undefined\" ? global['async'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\n\nvar buffTime = 5 * 60 * 1000;\nvar highliteTime = 10 * 1000;\n\nfunction update() {\n    var remoteOffset = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n    var cb = arguments.length <= 1 || arguments[1] === undefined ? _.noop : arguments[1];\n\n    var timeLocal = Date.now();\n    var timeRemote = timeLocal - remoteOffset;\n\n    // console.log('update', remoteOffset, timeLocal, timeRemote);\n\n    var $timers = $('.timer');\n    var $countdowns = $timers.filter('.countdown');\n    var $relatives = $timers.filter('.relative');\n\n    async.parallel([updateRelativeTimers.bind(null, $relatives, remoteOffset), updateCountdownTimers.bind(null, $countdowns, timeRemote)], cb);\n}\n\nfunction updateRelativeTimers(relatives, offset, cb) {\n    async.each(relatives, updateRelativeTimeNode.bind(null, offset), cb);\n}\n\nfunction updateCountdownTimers(countdowns, timeRemote, cb) {\n    async.each(countdowns, updateCountdownTimerNode.bind(null, timeRemote), cb);\n}\n\nfunction updateRelativeTimeNode(offset, el, next) {\n    var $el = $(el);\n\n    var timestamp = _.parseInt($el.attr('data-timestamp'));\n    var offsetTimestamp = timestamp * 1000 + offset;\n    var timestampMoment = moment(offsetTimestamp);\n    var timestampRelative = timestampMoment.twitterShort();\n\n    // console.log(offset, $el, timestamp, offsetTimestamp, timestampMoment);\n\n    $el.text(timestampRelative);\n\n    next();\n}\n\nfunction updateCountdownTimerNode(timeRemote, el, next) {\n    var $el = $(el);\n\n    var timestamp = _.parseInt($el.attr('data-timestamp')) * 1000;\n    var expires = timestamp + buffTime;\n    var msRemaining = expires - timeRemote;\n    var msElapsed = buffTime - msRemaining;\n\n    var isVisible = expires + highliteTime >= timeRemote;\n    var isExpired = expires < timeRemote;\n    var isActive = !isExpired;\n    var isHighlighted = msRemaining <= Math.abs(highliteTime);\n    var isFresh = msElapsed <= highliteTime;\n\n    if (isVisible) {\n        var timerText = isActive ? moment(msRemaining).format('m:ss') : '0:00';\n\n        var $objective = $el.closest('.objective');\n        var hasClassHighlight = $objective.hasClass('highlight');\n        var hasClassFresh = $objective.hasClass('fresh');\n\n        if (isHighlighted && !hasClassHighlight) {\n            $objective.addClass('highlight');\n        } else if (!isHighlighted && hasClassHighlight) {\n            $objective.removeClass('highlight');\n        }\n\n        if (isFresh && !hasClassFresh) {\n            $objective.addClass('fresh');\n        } else if (!isFresh && hasClassFresh) {\n            $objective.removeClass('fresh');\n        }\n\n        $el.text(timerText).filter('.inactive').addClass('active').removeClass('inactive').end();\n    } else {\n        $el.filter('.active').addClass('inactive').removeClass('active').removeClass('highlight').end();\n    }\n\n    next();\n}\n\nmodule.exports = { update: update };\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}]},{},[28])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","module.exports = {\r\n\t\"1\": {\"id\": \"1\", \"en\": \"Overlook\", \"fr\": \"Belvédère\", \"es\": \"Mirador\", \"de\": \"Aussichtspunkt\"},\r\n\t\"2\": {\"id\": \"2\", \"en\": \"Valley\", \"fr\": \"Vallée\", \"es\": \"Valle\", \"de\": \"Tal\"},\r\n\t\"3\": {\"id\": \"3\", \"en\": \"Lowlands\", \"fr\": \"Basses terres\", \"es\": \"Vega\", \"de\": \"Tiefland\"},\r\n\t\"4\": {\"id\": \"4\", \"en\": \"Golanta Clearing\", \"fr\": \"Clairière de Golanta\", \"es\": \"Claro Golanta\", \"de\": \"Golanta-Lichtung\"},\r\n\t\"5\": {\"id\": \"5\", \"en\": \"Pangloss Rise\", \"fr\": \"Montée de Pangloss\", \"es\": \"Colina Pangloss\", \"de\": \"Pangloss-Anhöhe\"},\r\n\t\"6\": {\"id\": \"6\", \"en\": \"Speldan Clearcut\", \"fr\": \"Forêt rasée de Speldan\", \"es\": \"Claro Espeldia\", \"de\": \"Speldan Kahlschlag\"},\r\n\t\"7\": {\"id\": \"7\", \"en\": \"Danelon Passage\", \"fr\": \"Passage Danelon\", \"es\": \"Pasaje Danelon\", \"de\": \"Danelon-Passage\"},\r\n\t\"8\": {\"id\": \"8\", \"en\": \"Umberglade Woods\", \"fr\": \"Bois d'Ombreclair\", \"es\": \"Bosques Clarosombra\", \"de\": \"Umberlichtung-Forst\"},\r\n\t\"9\": {\"id\": \"9\", \"en\": \"Stonemist Castle\", \"fr\": \"Château Brumepierre\", \"es\": \"Castillo Piedraniebla\", \"de\": \"Schloss Steinnebel\"},\r\n\t\"10\": {\"id\": \"10\", \"en\": \"Rogue's Quarry\", \"fr\": \"Carrière des voleurs\", \"es\": \"Cantera del Pícaro\", \"de\": \"Schurkenbruch\"},\r\n\t\"11\": {\"id\": \"11\", \"en\": \"Aldon's Ledge\", \"fr\": \"Corniche d'Aldon\", \"es\": \"Cornisa de Aldon\", \"de\": \"Aldons Vorsprung\"},\r\n\t\"12\": {\"id\": \"12\", \"en\": \"Wildcreek Run\", \"fr\": \"Piste du Ruisseau sauvage\", \"es\": \"Pista Arroyosalvaje\", \"de\": \"Wildbachstrecke\"},\r\n\t\"13\": {\"id\": \"13\", \"en\": \"Jerrifer's Slough\", \"fr\": \"Bourbier de Jerrifer\", \"es\": \"Cenagal de Jerrifer\", \"de\": \"Jerrifers Sumpfloch\"},\r\n\t\"14\": {\"id\": \"14\", \"en\": \"Klovan Gully\", \"fr\": \"Petit ravin de Klovan\", \"es\": \"Barranco Klovan\", \"de\": \"Klovan-Senke\"},\r\n\t\"15\": {\"id\": \"15\", \"en\": \"Langor Gulch\", \"fr\": \"Ravin de Langor\", \"es\": \"Barranco Langor\", \"de\": \"Langor - Schlucht\"},\r\n\t\"16\": {\"id\": \"16\", \"en\": \"Quentin Lake\", \"fr\": \"Lac Quentin\", \"es\": \"Lago Quentin\", \"de\": \"Quentinsee\"},\r\n\t\"17\": {\"id\": \"17\", \"en\": \"Mendon's Gap\", \"fr\": \"Faille de Mendon\", \"es\": \"Zanja de Mendon\", \"de\": \"Mendons Spalt\"},\r\n\t\"18\": {\"id\": \"18\", \"en\": \"Anzalias Pass\", \"fr\": \"Col d'Anzalias\", \"es\": \"Paso Anzalias\", \"de\": \"Anzalias-Pass\"},\r\n\t\"19\": {\"id\": \"19\", \"en\": \"Ogrewatch Cut\", \"fr\": \"Percée de Gardogre\", \"es\": \"Tajo de la Guardia del Ogro\", \"de\": \"Ogerwacht-Kanal\"},\r\n\t\"20\": {\"id\": \"20\", \"en\": \"Veloka Slope\", \"fr\": \"Flanc de Veloka\", \"es\": \"Pendiente Veloka\", \"de\": \"Veloka-Hang\"},\r\n\t\"21\": {\"id\": \"21\", \"en\": \"Durios Gulch\", \"fr\": \"Ravin de Durios\", \"es\": \"Barranco Durios\", \"de\": \"Durios-Schlucht\"},\r\n\t\"22\": {\"id\": \"22\", \"en\": \"Bravost Escarpment\", \"fr\": \"Falaise de Bravost\", \"es\": \"Escarpadura Bravost\", \"de\": \"Bravost-Abhang\"},\r\n\t\"23\": {\"id\": \"23\", \"en\": \"Garrison\", \"fr\": \"Garnison\", \"es\": \"Fuerte\", \"de\": \"Festung\"},\r\n\t\"24\": {\"id\": \"24\", \"en\": \"Champion's Demense\", \"fr\": \"Fief du champion\", \"es\": \"Dominio del Campeón\", \"de\": \"Landgut des Champions\"},\r\n\t\"25\": {\"id\": \"25\", \"en\": \"Redbriar\", \"fr\": \"Bruyerouge\", \"es\": \"Zarzarroja\", \"de\": \"Rotdornstrauch\"},\r\n\t\"26\": {\"id\": \"26\", \"en\": \"Greenlake\", \"fr\": \"Lac Vert\", \"es\": \"Lagoverde\", \"de\": \"Grünsee\"},\r\n\t\"27\": {\"id\": \"27\", \"en\": \"Ascension Bay\", \"fr\": \"Baie de l'Ascension\", \"es\": \"Bahía de la Ascensión\", \"de\": \"Bucht des Aufstiegs\"},\r\n\t\"28\": {\"id\": \"28\", \"en\": \"Dawn's Eyrie\", \"fr\": \"Promontoire de l'aube\", \"es\": \"Aguilera del Alba\", \"de\": \"Horst der Morgendammerung\"},\r\n\t\"29\": {\"id\": \"29\", \"en\": \"The Spiritholme\", \"fr\": \"L'antre des esprits\", \"es\": \"La Isleta Espiritual\", \"de\": \"Der Geisterholm\"},\r\n\t\"30\": {\"id\": \"30\", \"en\": \"Woodhaven\", \"fr\": \"Gentesylve\", \"es\": \"Refugio Forestal\", \"de\": \"Wald - Freistatt\"},\r\n\t\"31\": {\"id\": \"31\", \"en\": \"Askalion Hills\", \"fr\": \"Collines d'Askalion\", \"es\": \"Colinas Askalion\", \"de\": \"Askalion - Hügel\"},\r\n\t\"32\": {\"id\": \"32\", \"en\": \"Etheron Hills\", \"fr\": \"Collines d'Etheron\", \"es\": \"Colinas Etheron\", \"de\": \"Etheron - Hügel\"},\r\n\t\"33\": {\"id\": \"33\", \"en\": \"Dreaming Bay\", \"fr\": \"Baie des rêves\", \"es\": \"Bahía Onírica\", \"de\": \"Traumbucht\"},\r\n\t\"34\": {\"id\": \"34\", \"en\": \"Victor's Lodge\", \"fr\": \"Pavillon du vainqueur\", \"es\": \"Albergue del Vencedor\", \"de\": \"Sieger - Hütte\"},\r\n\t\"35\": {\"id\": \"35\", \"en\": \"Greenbriar\", \"fr\": \"Vertebranche\", \"es\": \"Zarzaverde\", \"de\": \"Grünstrauch\"},\r\n\t\"36\": {\"id\": \"36\", \"en\": \"Bluelake\", \"fr\": \"Lac bleu\", \"es\": \"Lagoazul\", \"de\": \"Blausee\"},\r\n\t\"37\": {\"id\": \"37\", \"en\": \"Garrison\", \"fr\": \"Garnison\", \"es\": \"Fuerte\", \"de\": \"Festung\"},\r\n\t\"38\": {\"id\": \"38\", \"en\": \"Longview\", \"fr\": \"Longuevue\", \"es\": \"Vistaluenga\", \"de\": \"Weitsicht\"},\r\n\t\"39\": {\"id\": \"39\", \"en\": \"The Godsword\", \"fr\": \"L'Epée divine\", \"es\": \"La Hoja Divina\", \"de\": \"Das Gottschwert\"},\r\n\t\"40\": {\"id\": \"40\", \"en\": \"Cliffside\", \"fr\": \"Flanc de falaise\", \"es\": \"Despeñadero\", \"de\": \"Felswand\"},\r\n\t\"41\": {\"id\": \"41\", \"en\": \"Shadaran Hills\", \"fr\": \"Collines de Shadaran\", \"es\": \"Colinas Shadaran\", \"de\": \"Shadaran Hügel\"},\r\n\t\"42\": {\"id\": \"42\", \"en\": \"Redlake\", \"fr\": \"Rougelac\", \"es\": \"Lagorrojo\", \"de\": \"Rotsee\"},\r\n\t\"43\": {\"id\": \"43\", \"en\": \"Hero's Lodge\", \"fr\": \"Pavillon du Héros\", \"es\": \"Albergue del Héroe\", \"de\": \"Hütte des Helden\"},\r\n\t\"44\": {\"id\": \"44\", \"en\": \"Dreadfall Bay\", \"fr\": \"Baie du Noir déclin\", \"es\": \"Bahía Salto Aciago\", \"de\": \"Schreckensfall - Bucht\"},\r\n\t\"45\": {\"id\": \"45\", \"en\": \"Bluebriar\", \"fr\": \"Bruyazur\", \"es\": \"Zarzazul\", \"de\": \"Blaudornstrauch\"},\r\n\t\"46\": {\"id\": \"46\", \"en\": \"Garrison\", \"fr\": \"Garnison\", \"es\": \"Fuerte\", \"de\": \"Festung\"},\r\n\t\"47\": {\"id\": \"47\", \"en\": \"Sunnyhill\", \"fr\": \"Colline ensoleillée\", \"es\": \"Colina Soleada\", \"de\": \"Sonnenlichthügel\"},\r\n\t\"48\": {\"id\": \"48\", \"en\": \"Faithleap\", \"fr\": \"Ferveur\", \"es\": \"Salto de Fe\", \"de\": \"Glaubenssprung\"},\r\n\t\"49\": {\"id\": \"49\", \"en\": \"Bluevale Refuge\", \"fr\": \"Refuge de bleuval\", \"es\": \"Refugio Valleazul\", \"de\": \"Blautal - Zuflucht\"},\r\n\t\"50\": {\"id\": \"50\", \"en\": \"Bluewater Lowlands\", \"fr\": \"Basses terres d'Eau-Azur\", \"es\": \"Tierras Bajas de Aguazul\", \"de\": \"Blauwasser - Tiefland\"},\r\n\t\"51\": {\"id\": \"51\", \"en\": \"Astralholme\", \"fr\": \"Astralholme\", \"es\": \"Isleta Astral\", \"de\": \"Astralholm\"},\r\n\t\"52\": {\"id\": \"52\", \"en\": \"Arah's Hope\", \"fr\": \"Espoir d'Arah\", \"es\": \"Esperanza de Arah\", \"de\": \"Arahs Hoffnung\"},\r\n\t\"53\": {\"id\": \"53\", \"en\": \"Greenvale Refuge\", \"fr\": \"Refuge de Valvert\", \"es\": \"Refugio de Valleverde\", \"de\": \"Grüntal - Zuflucht\"},\r\n\t\"54\": {\"id\": \"54\", \"en\": \"Foghaven\", \"fr\": \"Havre gris\", \"es\": \"Refugio Neblinoso\", \"de\": \"Nebel - Freistatt\"},\r\n\t\"55\": {\"id\": \"55\", \"en\": \"Redwater Lowlands\", \"fr\": \"Basses terres de Rubicon\", \"es\": \"Tierras Bajas de Aguarroja\", \"de\": \"Rotwasser - Tiefland\"},\r\n\t\"56\": {\"id\": \"56\", \"en\": \"The Titanpaw\", \"fr\": \"Bras du titan\", \"es\": \"La Garra del Titán\", \"de\": \"Die Titanenpranke\"},\r\n\t\"57\": {\"id\": \"57\", \"en\": \"Cragtop\", \"fr\": \"Sommet de l'escarpement\", \"es\": \"Cumbrepeñasco\", \"de\": \"Felsenspitze\"},\r\n\t\"58\": {\"id\": \"58\", \"en\": \"Godslore\", \"fr\": \"Divination\", \"es\": \"Sabiduría de los Dioses\", \"de\": \"Götterkunde\"},\r\n\t\"59\": {\"id\": \"59\", \"en\": \"Redvale Refuge\", \"fr\": \"Refuge de Valrouge\", \"es\": \"Refugio Vallerojo\", \"de\": \"Rottal - Zuflucht\"},\r\n\t\"60\": {\"id\": \"60\", \"en\": \"Stargrove\", \"fr\": \"Bosquet stellaire\", \"es\": \"Arboleda de las Estrellas\", \"de\": \"Sternenhain\"},\r\n\t\"61\": {\"id\": \"61\", \"en\": \"Greenwater Lowlands\", \"fr\": \"Basses terres d'Eau-Verdoyante\", \"es\": \"Tierras Bajas de Aguaverde\", \"de\": \"Grünwasser - Tiefland\"},\r\n\t\"62\": {\"id\": \"62\", \"en\": \"Temple of Lost Prayers\", \"fr\": \"Temple des prières perdues\", \"es\": \"Templo de las Pelgarias\", \"de\": \"Tempel der Verlorenen Gebete\"},\r\n\t\"63\": {\"id\": \"63\", \"en\": \"Battle's Hollow\", \"fr\": \"Vallon de bataille\", \"es\": \"Hondonada de la Battalla\", \"de\": \"Schlachten-Senke\"},\r\n\t\"64\": {\"id\": \"64\", \"en\": \"Bauer's Estate\", \"fr\": \"Domaine de Bauer\", \"es\": \"Hacienda de Bauer\", \"de\": \"Bauers Anwesen\"},\r\n\t\"65\": {\"id\": \"65\", \"en\": \"Orchard Overlook\", \"fr\": \"Belvédère du Verger\", \"es\": \"Mirador del Huerto\", \"de\": \"Obstgarten Aussichtspunkt\"},\r\n\t\"66\": {\"id\": \"66\", \"en\": \"Carver's Ascent\", \"fr\": \"Côte du couteau\", \"es\": \"Ascenso del Trinchador\", \"de\": \"Aufstieg des Schnitzers\"},\r\n\t\"67\": {\"id\": \"67\", \"en\": \"Carver's Ascent\", \"fr\": \"Côte du couteau\", \"es\": \"Ascenso del Trinchador\", \"de\": \"Aufstieg des Schnitzers\"},\r\n\t\"68\": {\"id\": \"68\", \"en\": \"Orchard Overlook\", \"fr\": \"Belvédère du Verger\", \"es\": \"Mirador del Huerto\", \"de\": \"Obstgarten Aussichtspunkt\"},\r\n\t\"69\": {\"id\": \"69\", \"en\": \"Bauer's Estate\", \"fr\": \"Domaine de Bauer\", \"es\": \"Hacienda de Bauer\", \"de\": \"Bauers Anwesen\"},\r\n\t\"70\": {\"id\": \"70\", \"en\": \"Battle's Hollow\", \"fr\": \"Vallon de bataille\", \"es\": \"Hondonada de la Battalla\", \"de\": \"Schlachten-Senke\"},\r\n\t\"71\": {\"id\": \"71\", \"en\": \"Temple of Lost Prayers\", \"fr\": \"Temple des prières perdues\", \"es\": \"Templo de las Pelgarias\", \"de\": \"Tempel der Verlorenen Gebete\"},\r\n\t\"72\": {\"id\": \"72\", \"en\": \"Carver's Ascent\", \"fr\": \"Côte du couteau\", \"es\": \"Ascenso del Trinchador\", \"de\": \"Aufstieg des Schnitzers\"},\r\n\t\"73\": {\"id\": \"73\", \"en\": \"Orchard Overlook\", \"fr\": \"Belvédère du Verger\", \"es\": \"Mirador del Huerto\", \"de\": \"Obstgarten Aussichtspunkt\"},\r\n\t\"74\": {\"id\": \"74\", \"en\": \"Bauer's Estate\", \"fr\": \"Domaine de Bauer\", \"es\": \"Hacienda de Bauer\", \"de\": \"Bauers Anwesen\"},\r\n\t\"75\": {\"id\": \"75\", \"en\": \"Battle's Hollow\", \"fr\": \"Vallon de bataille\", \"es\": \"Hondonada de la Battalla\", \"de\": \"Schlachten-Senke\"},\r\n\t\"76\": {\"id\": \"76\", \"en\": \"Temple of Lost Prayers\", \"fr\": \"Temple des prières perdues\", \"es\": \"Templo de las Pelgarias\", \"de\": \"Tempel der Verlorenen Gebete\"},\r\n};\r\n","module.exports = [\r\n\t{\r\n\t\t\"key\": \"Center\",\r\n\t\t\"name\": \"Eternal Battlegrounds\",\r\n\t\t\"abbr\": \"EBG\",\r\n\t\t\"mapIndex\": 3,\r\n\t\t\"color\": \"neutral\",\r\n\t\t\"sections\": [{\r\n\t\t\t\t\"label\": \"Castle\",\r\n\t\t\t\t\"groupType\": \"neutral\",\r\n\t\t\t\t\"objectives\": [9], \t\t\t\t\t\t\t\t// sm\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"Red Corner\",\r\n\t\t\t\t\"groupType\": \"red\",\r\n\t\t\t\t\"objectives\": [1, 17, 20, 18, 19, 6, 5],\t\t// overlook, mendons, veloka, anz, ogre, speldan, pang\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"Blue Corner\",\r\n\t\t\t\t\"groupType\": \"blue\",\r\n\t\t\t\t\"objectives\": [2, 15, 22, 16, 21, 7, 8]\t\t\t// valley, langor, bravost, quentin, durios, dane, umber\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"Green Corner\",\r\n\t\t\t\t\"groupType\": \"green\",\r\n\t\t\t\t\"objectives\": [3, 11, 13, 12, 14, 10, 4] \t\t// lowlands, aldons, jerrifer, wildcreek, klovan, rogues, golanta\r\n\t\t\t},],\r\n\t}, {\r\n\t\t\"key\": \"RedHome\",\r\n\t\t\"name\": \"RedHome\",\r\n\t\t\"abbr\": \"Red\",\r\n\t\t\"mapIndex\": 0,\r\n\t\t\"color\": \"red\",\r\n\t\t\"sections\": [{\r\n\t\t\t\t\"label\": \"Keeps\",\r\n\t\t\t\t\"groupType\": \"red\",\r\n\t\t\t\t\"objectives\": [37, 33, 32] \t\t\t\t\t\t// keep, bay, hills, longview, cliffside, godsword, hopes, astral\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"North\",\r\n\t\t\t\t\"groupType\": \"red\",\r\n\t\t\t\t\"objectives\": [38, 40, 39, 52, 51] \t\t\t\t// keep, bay, hills, longview, cliffside, godsword, hopes, astral\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"South\",\r\n\t\t\t\t\"groupType\": \"neutral\",\r\n\t\t\t\t\"objectives\": [35, 36, 34, 53, 50] \t\t\t\t// briar, lake, lodge, vale, water\r\n\t\t\t// }, {\r\n\t\t\t// \t\"label\": \"Ruins\",\r\n\t\t\t// \t\"groupType\": \"ruins\",\r\n\t\t\t// \t\"objectives\": [62, 63, 64, 65, 66] \t\t\t\t// temple, hollow, estate, orchard, ascent\r\n\t\t\t},],\r\n\t}, {\r\n\t\t\"key\": \"BlueHome\",\r\n\t\t\"name\": \"BlueHome\",\r\n\t\t\"abbr\": \"Blu\",\r\n\t\t\"mapIndex\": 2,\r\n\t\t\"color\": \"blue\",\r\n\t\t\"sections\": [{\r\n\t\t\t\t\"label\": \"Keeps\",\r\n\t\t\t\t\"groupType\": \"blue\",\r\n\t\t\t\t\"objectives\": [23, 27, 31] \t\t\t\t\t\t// keep, bay, hills, woodhaven, dawns, spirit, gods, star\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"North\",\r\n\t\t\t\t\"groupType\": \"blue\",\r\n\t\t\t\t\"objectives\": [30, 28, 29, 58, 60] \t\t\t\t// keep, bay, hills, woodhaven, dawns, spirit, gods, star\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"South\",\r\n\t\t\t\t\"groupType\": \"neutral\",\r\n\t\t\t\t\"objectives\": [25, 26, 24, 59, 61] \t\t\t\t// briar, lake, champ, vale, water\r\n\t\t\t// }, {\r\n\t\t\t// \t\"label\": \"Ruins\",\r\n\t\t\t// \t\"groupType\": \"ruins\",\r\n\t\t\t// \t\"objectives\": [71, 70, 69, 68, 67] \t\t\t\t// temple, hollow, estate, orchard, ascent\r\n\t\t\t},],\r\n\t}, {\r\n\t\t\"key\": \"GreenHome\",\r\n\t\t\"name\": \"GreenHome\",\r\n\t\t\"abbr\": \"Grn\",\r\n\t\t\"mapIndex\": 1,\r\n\t\t\"color\": \"green\",\r\n\t\t\"sections\": [{\r\n\t\t\t\t\"label\": \"Keeps\",\r\n\t\t\t\t\"groupType\": \"green\",\r\n\t\t\t\t\"objectives\": [46, 44, 41] \t\t\t\t\t\t// keep, bay, hills, sunny, crag, titan, faith, fog\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"North\",\r\n\t\t\t\t\"groupType\": \"green\",\r\n\t\t\t\t\"objectives\": [47, 57, 56, 48, 54] \t\t\t\t// keep, bay, hills, sunny, crag, titan, faith, fog\r\n\t\t\t}, {\r\n\t\t\t\t\"label\": \"South\",\r\n\t\t\t\t\"groupType\": \"neutral\",\r\n\t\t\t\t\"objectives\": [45, 42, 43, 49, 55] \t\t\t\t// briar, lake, lodge, vale, water\r\n\t\t\t// }, {\r\n\t\t\t// \t\"label\": \"Ruins\",\r\n\t\t\t// \t\"groupType\": \"ruins\",\r\n\t\t\t// \t\"objectives\": [76 , 75 , 74 , 73 , 72 ] \t\t// temple, hollow, estate, orchard, ascent\r\n\t\t\t},]\r\n\t},\r\n];\r\n","module.exports = {\r\n\t//\tEBG\r\n\t\"9\":\t{\"type\": 1, \"timer\": 1, \"map\": 3, \"d\": 0, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 0},\t// Stonemist Castle\r\n\r\n\t//\tRed Corner\r\n\t\"1\":\t{\"type\": 2, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// Red Keep - Overlook\r\n\t\"17\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// Red Tower - Mendon's Gap\r\n\t\"20\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// Red Tower - Veloka Slope\r\n\t\"18\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// Red Tower - Anzalias Pass\r\n\t\"19\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// Red Tower - Ogrewatch Cut\r\n\t\"6\":\t{\"type\": 4, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 1, \"e\": 0},\t// Red Camp - Mill - Speldan\r\n\t\"5\":\t{\"type\": 4, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 1},\t// Red Camp - Mine - Pangloss\r\n\r\n\t//\tBlue Corner\r\n\t\"2\":\t{\"type\": 2, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// Blue Keep - Valley\r\n\t\"15\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// Blue Tower - Langor Gulch\r\n\t\"22\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// Blue Tower - Bravost Escarpment\r\n\t\"16\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// Blue Tower - Quentin Lake\r\n\t\"21\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// Blue Tower - Durios Gulch\r\n\t\"7\":\t{\"type\": 4, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 0},\t// Blue Camp - Mine - Danelon\r\n\t\"8\":\t{\"type\": 4, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 1},\t// Blue Camp - Mill - Umberglade\r\n\r\n\t//\tGreen Corner\r\n\t\"3\":\t{\"type\": 2, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// Green Keep - Lowlands\r\n\t\"11\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// Green Tower - Aldons\r\n\t\"13\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// Green Tower - Jerrifer's Slough\r\n\t\"12\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// Green Tower - Wildcreek\r\n\t\"14\":\t{\"type\": 3, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// Green Tower - Klovan Gully\r\n\t\"10\":\t{\"type\": 4, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// Green Camp - Mine - Rogues Quarry\r\n\t\"4\":\t{\"type\": 4, \"timer\": 1, \"map\": 3, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 1},\t// Green Camp - Mill - Golanta\r\n\r\n\r\n\t//\tRedHome\r\n\t\"37\":\t{\"type\": 2, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// Garrison\r\n\t\"33\":\t{\"type\": 2, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 1, \"e\": 0},\t// Bay - Dreaming Bay\r\n\t\"32\":\t{\"type\": 2, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 1},\t// Hills - Etheron Hills\r\n\t\"38\":\t{\"type\": 3, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// NW Tower - Longview\r\n\t\"40\":\t{\"type\": 3, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// NE Tower - Cliffside\r\n\t\"39\":\t{\"type\": 4, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// North Camp - Crossroads - The Godsword\r\n\t\"52\":\t{\"type\": 4, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// NW Camp - Mine - Arah's Hope\r\n\t\"51\":\t{\"type\": 4, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// NE Camp - Mill - Astralholme\r\n\r\n\t\"35\":\t{\"type\": 3, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// SW Tower - Greenbriar\r\n\t\"36\":\t{\"type\": 3, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// SE Tower - Bluelake\r\n\t\"34\":\t{\"type\": 4, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 0},\t// South Camp - Orchard - Victor's Lodge\r\n\t\"53\":\t{\"type\": 4, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// SW Camp - Workshop - Greenvale Refuge\r\n\t\"50\":\t{\"type\": 4, \"timer\": 1, \"map\": 0, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// SE Camp - Fishing Village - Bluewater Lowlands\r\n\r\n\r\n\t//\tGreenHome\r\n\t\"46\":\t{\"type\": 2, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// Garrison\r\n\t\"44\":\t{\"type\": 2, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 1, \"e\": 0},\t// Bay - Dreadfall Bay\r\n\t\"41\":\t{\"type\": 2, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 1},\t// Hills - Shadaran Hills\r\n\t\"47\":\t{\"type\": 3, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// NW Tower - Sunnyhill\r\n\t\"57\":\t{\"type\": 3, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// NE Tower - Cragtop\r\n\t\"56\":\t{\"type\": 4, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// North Camp - Crossroads - The Titanpaw\r\n\t\"48\":\t{\"type\": 4, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// NW Camp - Mine - Faithleap\r\n\t\"54\":\t{\"type\": 4, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// NE Camp - Mill - Foghaven\r\n\r\n\t\"45\":\t{\"type\": 3, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// SW Tower - Bluebriar\r\n\t\"42\":\t{\"type\": 3, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// SE Tower - Redlake\r\n\t\"43\":\t{\"type\": 4, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 0},\t// South Camp - Orchard - Hero's Lodge\r\n\t\"49\":\t{\"type\": 4, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// SW Camp - Workshop - Bluevale Refuge\r\n\t\"55\":\t{\"type\": 4, \"timer\": 1, \"map\": 1, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// SE Camp - Fishing Village - Redwater Lowlands\r\n\r\n\r\n\t//\tBlueHome\r\n\t\"23\":\t{\"type\": 2, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// Garrison\r\n\t\"27\":\t{\"type\": 2, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 1, \"e\": 0},\t// Bay - Ascension Bay\r\n\t\"31\":\t{\"type\": 2, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 0, \"w\": 0, \"e\": 1},\t// Hills - Askalion Hills\r\n\t\"30\":\t{\"type\": 3, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// NW Tower - Woodhaven\r\n\t\"28\":\t{\"type\": 3, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// NE Tower - Dawn's Eyrie\r\n\t\"29\":\t{\"type\": 4, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 0},\t// North Camp - Crossroads - The Spiritholme\r\n\t\"58\":\t{\"type\": 4, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 1, \"e\": 0},\t// NW Camp - Mine - Godslore\r\n\t\"60\":\t{\"type\": 4, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 1, \"s\": 0, \"w\": 0, \"e\": 1},\t// NE Camp - Mill - Stargrove\r\n\r\n\t\"25\":\t{\"type\": 3, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// SW Tower - Redbriar\r\n\t\"26\":\t{\"type\": 3, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// SE Tower - Greenlake\r\n\t\"24\":\t{\"type\": 4, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 0},\t// South Camp - Orchard - Champion's Demense\r\n\t\"59\":\t{\"type\": 4, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 1, \"e\": 0},\t// SW Camp - Workshop - Redvale Refuge\r\n\t\"61\":\t{\"type\": 4, \"timer\": 1, \"map\": 2, \"d\": 1, \"n\": 0, \"s\": 1, \"w\": 0, \"e\": 1},\t// SE Camp - Fishing Village - Greenwater Lowlands\r\n};\r\n","module.exports = {\r\n\t\"1\": {\"id\": 1, \"name\": \"Keep\"},\r\n\t\"2\": {\"id\": 2, \"name\": \"Keep\"},\r\n\t\"3\": {\"id\": 3, \"name\": \"Keep\"},\r\n\t\"4\": {\"id\": 4, \"name\": \"Green Mill\"},\r\n\t\"5\": {\"id\": 5, \"name\": \"Red Mine\"},\r\n\t\"6\": {\"id\": 6, \"name\": \"Red Mill\"},\r\n\t\"7\": {\"id\": 7, \"name\": \"Blue Mine\"},\r\n\t\"8\": {\"id\": 8, \"name\": \"Blue Mill\"},\r\n\t\"9\": {\"id\": 9, \"name\": \"Castle\"},\r\n\t\"10\": {\"id\": 10, \"name\": \"Green Mine\"},\r\n\t\"11\": {\"id\": 11, \"name\": \"Tower\"},\r\n\t\"12\": {\"id\": 12, \"name\": \"Tower\"},\r\n\t\"13\": {\"id\": 13, \"name\": \"Tower\"},\r\n\t\"14\": {\"id\": 14, \"name\": \"Tower\"},\r\n\t\"15\": {\"id\": 15, \"name\": \"Tower\"},\r\n\t\"16\": {\"id\": 16, \"name\": \"Tower\"},\r\n\t\"17\": {\"id\": 17, \"name\": \"Tower\"},\r\n\t\"18\": {\"id\": 18, \"name\": \"Tower\"},\r\n\t\"19\": {\"id\": 19, \"name\": \"Tower\"},\r\n\t\"20\": {\"id\": 20, \"name\": \"Tower\"},\r\n\t\"21\": {\"id\": 21, \"name\": \"Tower\"},\r\n\t\"22\": {\"id\": 22, \"name\": \"Tower\"},\r\n\t\"23\": {\"id\": 23, \"name\": \"Keep\"},\r\n\t\"25\": {\"id\": 25, \"name\": \"Tower\"},\r\n\t\"24\": {\"id\": 24, \"name\": \"Orchard\"},\r\n\t\"26\": {\"id\": 26, \"name\": \"Tower\"},\r\n\t\"27\": {\"id\": 27, \"name\": \"Keep\"},\r\n\t\"28\": {\"id\": 28, \"name\": \"Tower\"},\r\n\t\"29\": {\"id\": 29, \"name\": \"Crossroads\"},\r\n\t\"30\": {\"id\": 30, \"name\": \"Tower\"},\r\n\t\"31\": {\"id\": 31, \"name\": \"Keep\"},\r\n\t\"32\": {\"id\": 32, \"name\": \"Keep\"},\r\n\t\"33\": {\"id\": 33, \"name\": \"Keep\"},\r\n\t\"34\": {\"id\": 34, \"name\": \"Orchard\"},\r\n\t\"35\": {\"id\": 35, \"name\": \"Tower\"},\r\n\t\"36\": {\"id\": 36, \"name\": \"Tower\"},\r\n\t\"37\": {\"id\": 37, \"name\": \"Keep\"},\r\n\t\"38\": {\"id\": 38, \"name\": \"Tower\"},\r\n\t\"39\": {\"id\": 39, \"name\": \"Crossroads\"},\r\n\t\"40\": {\"id\": 40, \"name\": \"Tower\"},\r\n\t\"41\": {\"id\": 41, \"name\": \"Keep\"},\r\n\t\"42\": {\"id\": 42, \"name\": \"Tower\"},\r\n\t\"43\": {\"id\": 43, \"name\": \"Orchard\"},\r\n\t\"44\": {\"id\": 44, \"name\": \"Keep\"},\r\n\t\"45\": {\"id\": 45, \"name\": \"Tower\"},\r\n\t\"46\": {\"id\": 46, \"name\": \"Keep\"},\r\n\t\"47\": {\"id\": 47, \"name\": \"Tower\"},\r\n\t\"48\": {\"id\": 48, \"name\": \"Quarry\"},\r\n\t\"49\": {\"id\": 49, \"name\": \"Workshop\"},\r\n\t\"50\": {\"id\": 50, \"name\": \"Fishing Village\"},\r\n\t\"51\": {\"id\": 51, \"name\": \"Lumber Mill\"},\r\n\t\"52\": {\"id\": 52, \"name\": \"Quarry\"},\r\n\t\"53\": {\"id\": 53, \"name\": \"Workshop\"},\r\n\t\"54\": {\"id\": 54, \"name\": \"Lumber Mill\"},\r\n\t\"55\": {\"id\": 55, \"name\": \"Fishing Village\"},\r\n\t\"56\": {\"id\": 56, \"name\": \"Crossroads\"},\r\n\t\"57\": {\"id\": 57, \"name\": \"Tower\"},\r\n\t\"58\": {\"id\": 58, \"name\": \"Quarry\"},\r\n\t\"59\": {\"id\": 59, \"name\": \"Workshop\"},\r\n\t\"60\": {\"id\": 60, \"name\": \"Lumber Mill\"},\r\n\t\"61\": {\"id\": 61, \"name\": \"Fishing Village\"},\r\n\t\"62\": {\"id\": 62, \"name\": \"((Temple of Lost Prayers))\"},\r\n\t\"63\": {\"id\": 63, \"name\": \"((Battle's Hollow))\"},\r\n\t\"64\": {\"id\": 64, \"name\": \"((Bauer's Estate))\"},\r\n\t\"65\": {\"id\": 65, \"name\": \"((Orchard Overlook))\"},\r\n\t\"66\": {\"id\": 66, \"name\": \"((Carver's Ascent))\"},\r\n\t\"67\": {\"id\": 67, \"name\": \"((Carver's Ascent))\"},\r\n\t\"68\": {\"id\": 68, \"name\": \"((Orchard Overlook))\"},\r\n\t\"69\": {\"id\": 69, \"name\": \"((Bauer's Estate))\"},\r\n\t\"70\": {\"id\": 70, \"name\": \"((Battle's Hollow))\"},\r\n\t\"71\": {\"id\": 71, \"name\": \"((Temple of Lost Prayers))\"},\r\n\t\"72\": {\"id\": 72, \"name\": \"((Carver's Ascent))\"},\r\n\t\"73\": {\"id\": 73, \"name\": \"((Orchard Overlook))\"},\r\n\t\"74\": {\"id\": 74, \"name\": \"((Bauer's Estate))\"},\r\n\t\"75\": {\"id\": 75, \"name\": \"((Battle's Hollow))\"},\r\n\t\"76\": {\"id\": 76, \"name\": \"((Temple of Lost Prayers))\"}\r\n};\r\n","module.exports = {\r\n\t\"1\": {\"id\": 1, \"timer\": 1, \"value\": 35, \"name\": \"castle\"},\r\n\t\"2\": {\"id\": 2, \"timer\": 1, \"value\": 25, \"name\": \"keep\"},\r\n\t\"3\": {\"id\": 3, \"timer\": 1, \"value\": 10, \"name\": \"tower\"},\r\n\t\"4\": {\"id\": 4, \"timer\": 1, \"value\": 5, \"name\": \"camp\"},\r\n\t\"5\": {\"id\": 5, \"timer\": 0, \"value\": 0, \"name\": \"temple\"},\r\n\t\"6\": {\"id\": 6, \"timer\": 0, \"value\": 0, \"name\": \"hollow\"},\r\n\t\"7\": {\"id\": 7, \"timer\": 0, \"value\": 0, \"name\": \"estate\"},\r\n\t\"8\": {\"id\": 8, \"timer\": 0, \"value\": 0, \"name\": \"overlook\"},\r\n\t\"9\": {\"id\": 9, \"timer\": 0, \"value\": 0, \"name\": \"ascent\"}\r\n};\r\n","var _ = require('lodash');\r\n\r\nvar en = _.indexBy(require('./objectives_v2_en'), 'id');\r\nvar es = _.indexBy(require('./objectives_v2_es'), 'id');\r\nvar de = _.indexBy(require('./objectives_v2_de'), 'id');\r\nvar fr = _.indexBy(require('./objectives_v2_fr'), 'id');\r\n\r\n\r\n\r\nmodule.exports = _\r\n    .chain(en)\r\n    .mapValues(function(o) {\r\n        o.name = {\r\n            en: o.name,\r\n            es: es[o.id].name,\r\n            de: de[o.id].name,\r\n            fr: fr[o.id].name,\r\n        };\r\n        return o;\r\n    })\r\n    .value();\r\n","module.exports = [{\r\n    id: \"1099-99\",\r\n    name: \"Hamms Labor\",\r\n    sector_id: 1314,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10864,\r\n        9559.49\r\n    ]\r\n}, {\r\n    id: \"1102-99\",\r\n    name: \"Leshs Labor\",\r\n    sector_id: 1291,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7279.95,\r\n        12119.5\r\n    ]\r\n}, {\r\n    id: \"1143-99\",\r\n    name: \"Zakks Labor\",\r\n    sector_id: 1358,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14448,\r\n        11479.5\r\n    ]\r\n}, {\r\n    id: \"1099-100\",\r\n    name: \"Bauer-Gehöft\",\r\n    sector_id: 1280,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11793.7,\r\n        11258.4\r\n    ]\r\n}, {\r\n    id: \"1102-100\",\r\n    name: \"Barrett-Gehöft\",\r\n    sector_id: 1345,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8209.71,\r\n        13818.4\r\n    ]\r\n}, {\r\n    id: \"1143-100\",\r\n    name: \"Gee-Gehöft\",\r\n    sector_id: 1292,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15377.7,\r\n        13178.4\r\n    ]\r\n}, {\r\n    id: \"1099-101\",\r\n    name: \"McLains Lager\",\r\n    sector_id: 1286,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9712.8,\r\n        11263.5\r\n    ]\r\n}, {\r\n    id: \"1102-101\",\r\n    name: \"Patricks Lager\",\r\n    sector_id: 1342,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6128.8,\r\n        13823.5\r\n    ]\r\n}, {\r\n    id: \"1143-101\",\r\n    name: \"Habibs Lager\",\r\n    sector_id: 1306,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13296.8,\r\n        13183.5\r\n    ]\r\n}, {\r\n    id: \"1099-102\",\r\n    name: \"O'del-Akademie\",\r\n    sector_id: 1352,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9832.4,\r\n        9594.63\r\n    ]\r\n}, {\r\n    id: \"1102-102\",\r\n    name: \"Y'lan-Akademie\",\r\n    sector_id: 1336,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6248.4,\r\n        12154.6\r\n    ]\r\n}, {\r\n    id: \"1143-102\",\r\n    name: \"Kay'li-Akademie\",\r\n    sector_id: 1337,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13416.4,\r\n        11514.6\r\n    ]\r\n}, {\r\n    id: \"1099-104\",\r\n    name: \"Ewige Nekropole\",\r\n    sector_id: 1308,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11802.7,\r\n        9664.75\r\n    ]\r\n}, {\r\n    id: \"1102-104\",\r\n    name: \"Todlose Nekropole\",\r\n    sector_id: 1325,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8218.72,\r\n        12224.7\r\n    ]\r\n}, {\r\n    id: \"1143-104\",\r\n    name: \"Unsterbliche Nekropole\",\r\n    sector_id: 1355,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15386.7,\r\n        11584.7\r\n    ]\r\n}, {\r\n    id: \"1099-105\",\r\n    name: \"Kurbelwellen-Depot\",\r\n    sector_id: 1354,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11264.3,\r\n        11609.4\r\n    ]\r\n}, {\r\n    id: \"1102-105\",\r\n    name: \"Zündfunken-Depot\",\r\n    sector_id: 1302,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7680.32,\r\n        14169.4\r\n    ]\r\n}, {\r\n    id: \"1143-105\",\r\n    name: \"Schwungrad-Depot\",\r\n    sector_id: 1332,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14848.3,\r\n        13529.4\r\n    ]\r\n}, {\r\n    id: \"1099-106\",\r\n    name: \"Brennende Gruft\",\r\n    sector_id: 1351,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9854.58,\r\n        10578.5\r\n    ]\r\n}, {\r\n    id: \"1102-106\",\r\n    name: \"Versengende Gruft\",\r\n    sector_id: 1295,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6270.58,\r\n        13138.5\r\n    ]\r\n}, {\r\n    id: \"1143-106\",\r\n    name: \"Glühende Gruft\",\r\n    sector_id: 1298,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13438.6,\r\n        12498.5\r\n    ]\r\n}, {\r\n    id: \"1099-107\",\r\n    name: \"Grenze von\",\r\n    sector_id: 1311,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        12022.5,\r\n        11789.9\r\n    ]\r\n}, {\r\n    id: \"1102-107\",\r\n    name: \"Grenze von\",\r\n    sector_id: 1310,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8438.49,\r\n        14349.9\r\n    ]\r\n}, {\r\n    id: \"1143-107\",\r\n    name: \"Grenze von\",\r\n    sector_id: 1349,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15606.5,\r\n        13709.9\r\n    ]\r\n}, {\r\n    id: \"1099-108\",\r\n    name: \"Grenze von\",\r\n    sector_id: 1350,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9641.7,\r\n        11749.6\r\n    ]\r\n}, {\r\n    id: \"1102-108\",\r\n    name: \"Grenze von\",\r\n    sector_id: 1359,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6057.7,\r\n        14309.6\r\n    ]\r\n}, {\r\n    id: \"1143-108\",\r\n    name: \"Grenze von\",\r\n    sector_id: 1285,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13225.7,\r\n        13669.6\r\n    ]\r\n}, {\r\n    id: \"1099-109\",\r\n    name: \"Roys Zuflucht\",\r\n    sector_id: 1322,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11954.6,\r\n        10068.5\r\n    ]\r\n}, {\r\n    id: \"1102-109\",\r\n    name: \"Norfolks Zuflucht\",\r\n    sector_id: 1290,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8370.6,\r\n        12628.5\r\n    ]\r\n}, {\r\n    id: \"1143-109\",\r\n    name: \"Oliviers Zuflucht\",\r\n    sector_id: 1304,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15538.6,\r\n        11988.5\r\n    ]\r\n}, {\r\n    id: \"1099-110\",\r\n    name: \"Verdörrter Außenposten\",\r\n    sector_id: 1277,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10255,\r\n        11576\r\n    ]\r\n}, {\r\n    id: \"1102-110\",\r\n    name: \"Welker Außenposten\",\r\n    sector_id: 1283,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6671.05,\r\n        14136\r\n    ]\r\n}, {\r\n    id: \"1143-110\",\r\n    name: \"Öder Außenposten\",\r\n    sector_id: 1328,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13839,\r\n        13496\r\n    ]\r\n}, {\r\n    id: \"1099-113\",\r\n    name: \"Stoischer Festungswall\",\r\n    sector_id: 1303,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10812.3,\r\n        10102.9\r\n    ]\r\n}, {\r\n    id: \"1102-113\",\r\n    name: \"Unbeeindruckter Festungswall\",\r\n    sector_id: 1318,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7228.32,\r\n        12662.9\r\n    ]\r\n}, {\r\n    id: \"1143-113\",\r\n    name: \"Stahlharter Festungswall\",\r\n    sector_id: 1293,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14396.3,\r\n        12022.9\r\n    ]\r\n}, {\r\n    id: \"1099-114\",\r\n    name: \"Fischadler-Palast\",\r\n    sector_id: 1300,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11788,\r\n        10660.2\r\n    ]\r\n}, {\r\n    id: \"1102-114\",\r\n    name: \"Weihen-Palast\",\r\n    sector_id: 1287,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8204,\r\n        13220.2\r\n    ]\r\n}, {\r\n    id: \"1143-114\",\r\n    name: \"Würger-Palast\",\r\n    sector_id: 1356,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15372,\r\n        12580.2\r\n    ]\r\n}, {\r\n    id: \"1099-115\",\r\n    name: \"Boettigers Versteck\",\r\n    sector_id: 1316,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9585.9,\r\n        10037.1\r\n    ]\r\n}, {\r\n    id: \"1102-115\",\r\n    name: \"Hughes Versteck\",\r\n    sector_id: 1324,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6001.9,\r\n        12597.1\r\n    ]\r\n}, {\r\n    id: \"1143-115\",\r\n    name: \"Berdrows Versteck\",\r\n    sector_id: 1357,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13169.9,\r\n        11957.1\r\n    ]\r\n}, {\r\n    id: \"1099-116\",\r\n    name: \"Brunnen des Staubflüsterns\",\r\n    sector_id: 1296,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10773.3,\r\n        11652.5\r\n    ]\r\n}, {\r\n    id: \"1102-116\",\r\n    name: \"Brunnen der Zerschlagenen Hoffnung\",\r\n    sector_id: 1338,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7189.29,\r\n        14212.5\r\n    ]\r\n}, {\r\n    id: \"1143-116\",\r\n    name: \"Brunnen des Letzten Schnaufers\",\r\n    sector_id: 1301,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14357.3,\r\n        13572.5\r\n    ]\r\n}, {\r\n    id: \"1099-117\",\r\n    name: \"Zitadelle von\",\r\n    sector_id: 1343,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10590.2,\r\n        9169.19\r\n    ]\r\n}, {\r\n    id: \"1102-117\",\r\n    name: \"Zitadelle von\",\r\n    sector_id: 1315,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7006.19,\r\n        11729.2\r\n    ]\r\n}, {\r\n    id: \"1143-117\",\r\n    name: \"Zitadelle von\",\r\n    sector_id: 1279,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14174.2,\r\n        11089.2\r\n    ]\r\n}, {\r\n    id: \"95-48\",\r\n    name: \"Glaubenssprung\",\r\n    sector_id: 1010,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-11\",\r\n    name: \"Aldons Vorsprung\",\r\n    sector_id: 882,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9417.39,\r\n        14790.7\r\n    ]\r\n}, {\r\n    id: \"95-43\",\r\n    name: \"Heldenhalle\",\r\n    sector_id: 1004,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-62\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-31\",\r\n    name: \"Aufstiegsbucht\",\r\n    sector_id: 973,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-29\",\r\n    name: \"Der Geistholm\",\r\n    sector_id: 978,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-1\",\r\n    name: \"Aussichtspunkt von\",\r\n    sector_id: 843,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10698.4,\r\n        13761\r\n    ]\r\n}, {\r\n    id: \"38-15\",\r\n    name: \"Langor-Schlucht\",\r\n    sector_id: 887,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11465.3,\r\n        15569.6\r\n    ]\r\n}, {\r\n    id: \"38-3\",\r\n    name: \"Tiefland von\",\r\n    sector_id: 848,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9840.25,\r\n        14983.6\r\n    ]\r\n}, {\r\n    id: \"38-17\",\r\n    name: \"Mendons Spalt\",\r\n    sector_id: 890,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10192.7,\r\n        13410.8\r\n    ]\r\n}, {\r\n    id: \"94-35\",\r\n    name: \"Grünstrauch\",\r\n    sector_id: 964,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-7\",\r\n    name: \"Danelon-Passage\",\r\n    sector_id: 837,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10996.4,\r\n        15545.8\r\n    ]\r\n}, {\r\n    id: \"96-27\",\r\n    name: \"Festung von\",\r\n    sector_id: 976,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-103\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-30\",\r\n    name: \"Wald-Freistatt\",\r\n    sector_id: 988,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-41\",\r\n    name: \"Shadaran-Hügel\",\r\n    sector_id: 996,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-32\",\r\n    name: \"Etheron-Hügel\",\r\n    sector_id: 962,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-56\",\r\n    name: \"Die Titanenpranke\",\r\n    sector_id: 998,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-75\",\r\n    name: \"Dämonenzauber-See\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-9\",\r\n    name: \"Schloss Steinnebel\",\r\n    sector_id: 833,\r\n    type: \"Castle\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10627.3,\r\n        14501.3\r\n    ]\r\n}, {\r\n    id: \"95-57\",\r\n    name: \"Schroffgipfel\",\r\n    sector_id: 1006,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-5\",\r\n    name: \"Pangloss-Anhöhe\",\r\n    sector_id: 846,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11201.6,\r\n        13718.4\r\n    ]\r\n}, {\r\n    id: \"94-33\",\r\n    name: \"Traumbucht\",\r\n    sector_id: 957,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-42\",\r\n    name: \"Rotsee\",\r\n    sector_id: 1008,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-21\",\r\n    name: \"Durios-Schlucht\",\r\n    sector_id: 888,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11207.1,\r\n        14595\r\n    ]\r\n}, {\r\n    id: \"95-54\",\r\n    name: \"Nebel-Freistatt\",\r\n    sector_id: 995,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-55\",\r\n    name: \"Rotwasser-Tiefland\",\r\n    sector_id: 1003,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-26\",\r\n    name: \"Grünsee\",\r\n    sector_id: 989,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-20\",\r\n    name: \"Veloka-Hang\",\r\n    sector_id: 891,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11017.4,\r\n        13414.4\r\n    ]\r\n}, {\r\n    id: \"95-44\",\r\n    name: \"Schreckensfall-Bucht\",\r\n    sector_id: 999,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-45\",\r\n    name: \"Blaustrauch\",\r\n    sector_id: 1009,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-14\",\r\n    name: \"Klovan-Senke\",\r\n    sector_id: 884,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10219.5,\r\n        15107.6\r\n    ]\r\n}, {\r\n    id: \"38-13\",\r\n    name: \"Jerrifers Sumpfloch\",\r\n    sector_id: 883,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9757.06,\r\n        15467.8\r\n    ]\r\n}, {\r\n    id: \"94-65\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-38\",\r\n    name: \"Weitsicht\",\r\n    sector_id: 955,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-6\",\r\n    name: \"Speldan-Kahlschlag\",\r\n    sector_id: 844,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9739.81,\r\n        13586.9\r\n    ]\r\n}, {\r\n    id: \"94-39\",\r\n    name: \"Das Gottesschwert\",\r\n    sector_id: 953,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-64\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-37\",\r\n    name: \"Festung von\",\r\n    sector_id: 952,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-2\",\r\n    name: \"Tal von\",\r\n    sector_id: 834,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11268.9,\r\n        15087.7\r\n    ]\r\n}, {\r\n    id: \"95-47\",\r\n    name: \"Sonnenhügel\",\r\n    sector_id: 1007,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-67\",\r\n    name: \"Teufelsherz-See\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-68\",\r\n    name: \"Teufelsherz-See\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-53\",\r\n    name: \"Grüntal-Zuflucht\",\r\n    sector_id: 971,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-12\",\r\n    name: \"Wildbach-Strecke\",\r\n    sector_id: 885,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9958.23,\r\n        14605.7\r\n    ]\r\n}, {\r\n    id: \"96-25\",\r\n    name: \"Rotstrauch\",\r\n    sector_id: 990,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-111\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-112\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-71\",\r\n    name: \"Teufelsherz-See\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-46\",\r\n    name: \"Festung von\",\r\n    sector_id: 992,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-52\",\r\n    name: \"Arahs Hoffnung\",\r\n    sector_id: 956,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-16\",\r\n    name: \"Quentin-See\",\r\n    sector_id: 889,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10951.8,\r\n        15121.2\r\n    ]\r\n}, {\r\n    id: \"38-22\",\r\n    name: \"Bravost-Abhang\",\r\n    sector_id: 886,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11750.2,\r\n        14859.4\r\n    ]\r\n}, {\r\n    id: \"95-49\",\r\n    name: \"Blautal-Zuflucht\",\r\n    sector_id: 1005,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-19\",\r\n    name: \"Ogerwacht-Kanal\",\r\n    sector_id: 892,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10965,\r\n        13951\r\n    ]\r\n}, {\r\n    id: \"95-76\",\r\n    name: \"Dämonenzauber-See\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-73\",\r\n    name: \"Dämonenzauber-See\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-51\",\r\n    name: \"Astralholm\",\r\n    sector_id: 960,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-66\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-4\",\r\n    name: \"Golanta-Lichtung\",\r\n    sector_id: 849,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10198.9,\r\n        15520.2\r\n    ]\r\n}, {\r\n    id: \"94-34\",\r\n    name: \"Sieger-Halle\",\r\n    sector_id: 963,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-28\",\r\n    name: \"Horst der Morgendämmerung\",\r\n    sector_id: 987,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-59\",\r\n    name: \"Rottal-Zuflucht\",\r\n    sector_id: 985,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-36\",\r\n    name: \"Blausee\",\r\n    sector_id: 965,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-50\",\r\n    name: \"Blauwasser-Tiefland\",\r\n    sector_id: 972,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-8\",\r\n    name: \"Umberlichtung-Forst\",\r\n    sector_id: 835,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11680.9,\r\n        14353.6\r\n    ]\r\n}, {\r\n    id: \"94-63\",\r\n    name: \"Dämonentrance-See\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-70\",\r\n    name: \"Teufelsherz-See\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-69\",\r\n    name: \"Teufelsherz-See\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-60\",\r\n    name: \"Sternhain\",\r\n    sector_id: 986,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-40\",\r\n    name: \"Felswand\",\r\n    sector_id: 959,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-61\",\r\n    name: \"Grünwasser-Tiefland\",\r\n    sector_id: 983,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-23\",\r\n    name: \"Askalion-Hügel\",\r\n    sector_id: 979,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-74\",\r\n    name: \"Dämonenzauber-See\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-10\",\r\n    name: \"Schurkenbruch\",\r\n    sector_id: 851,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9612.54,\r\n        14462.8\r\n    ]\r\n}, {\r\n    id: \"96-24\",\r\n    name: \"Champions Landsitz\",\r\n    sector_id: 984,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-18\",\r\n    name: \"Anzalias-Pass\",\r\n    sector_id: 893,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10243.3,\r\n        13974.4\r\n    ]\r\n}, {\r\n    id: \"95-72\",\r\n    name: \"Dämonenzauber-See\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-58\",\r\n    name: \"Gottessage\",\r\n    sector_id: 991,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"968-98\",\r\n    name: \"Wurmtunnel\",\r\n    sector_id: 1156,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6750.92,\r\n        10211.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/087491CDD56F7FB998C332360D32FD26A8B2A99D/730428.png\"\r\n}, {\r\n    id: \"968-96\",\r\n    name: \"Flughafen\",\r\n    sector_id: 1153,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7054.16,\r\n        10421\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/ACCCB1BD617598C0EA9C756EADE53DF36C2578EC/730427.png\"\r\n}, {\r\n    id: \"968-82\",\r\n    name: \"Donnersenkenreaktor\",\r\n    sector_id: 1168,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8282.77,\r\n        10425.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-93\",\r\n    name: \"Schmiede\",\r\n    sector_id: 1154,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8223.64,\r\n        10692.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D1AB541FC3BE12AC5BBB020212BEBE3F5C0C4315/730415.png\"\r\n}, {\r\n    id: \"968-80\",\r\n    name: \"Überwucherter Gotteshaus-Reaktor\",\r\n    sector_id: 1162,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7513.83,\r\n        9059.96\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-94\",\r\n    name: \"Schrein\",\r\n    sector_id: 1164,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8614.89,\r\n        10246.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B5709941B0352FD4CA3B7AFDA42873D8EFDB15AD/730414.png\"\r\n}, {\r\n    id: \"968-90\",\r\n    name: \"Altar\",\r\n    sector_id: 1160,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7240.66,\r\n        9253.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/DC01EC41D8809B59B85BEEDC45E9556D730BD21A/730413.png\"\r\n}, {\r\n    id: \"968-97\",\r\n    name: \"Werkstatt\",\r\n    sector_id: 1152,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6837.6,\r\n        10845.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B34C2E3D0F34FD03F44BB5ED4E18DCDD0059A5C4/730429.png\"\r\n}, {\r\n    id: \"968-81\",\r\n    name: \"Dürrefestungreaktor\",\r\n    sector_id: 1163,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6823.83,\r\n        10479.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-83\",\r\n    name: \"Steinblick-Zackenstabreaktor\",\r\n    sector_id: 1167,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7249.21,\r\n        9763.87\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-95\",\r\n    name: \"Glockenturm\",\r\n    sector_id: 1173,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8180.68,\r\n        10325.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D4180774DD03A4BC7252B952680E451F16679A72/730410.png\"\r\n}, {\r\n    id: \"968-91\",\r\n    name: \"Observatorium\",\r\n    sector_id: 1158,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7953.67,\r\n        9062.79\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/015CF16C78DFDAD742E1A5613FB74B6463BF4A70/730411.png\"\r\n}, {\r\n    id: \"968-78\",\r\n    name: \"Überwuchertes Gotteshaus\",\r\n    sector_id: 1161,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7606.7,\r\n        8882.14\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-88\",\r\n    name: \"Dürrefestung\",\r\n    sector_id: 1157,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6442.17,\r\n        10881.8\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-89\",\r\n    name: \"Tytonenwarte\",\r\n    sector_id: 1172,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7884.81,\r\n        9809.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-79\",\r\n    name: \"Donnersenke\",\r\n    sector_id: 1169,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8506.75,\r\n        10824.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-85\",\r\n    name: \"Tytonenwarte-Reaktor\",\r\n    sector_id: 1165,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7852.89,\r\n        9855.56\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-77\",\r\n    name: \"Infernonadel\",\r\n    sector_id: 1171,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7504.84,\r\n        10598.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-87\",\r\n    name: \"Steinblick-Zackenstab\",\r\n    sector_id: 1170,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7164.46,\r\n        9805.15\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-84\",\r\n    name: \"Infernonadel-Reaktor\",\r\n    sector_id: 1166,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7581.91,\r\n        10316.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-92\",\r\n    name: \"Statue\",\r\n    sector_id: 1159,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7553.12,\r\n        9360.16\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/4C0113B6DF2E4E2CBB93244AD50DA49456D5014E/730412.png\"\r\n}];","module.exports = [{\r\n    id: \"1099-99\",\r\n    name: \"Hamm's Lab\",\r\n    sector_id: 1314,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10864,\r\n        9559.49\r\n    ]\r\n}, {\r\n    id: \"1102-99\",\r\n    name: \"Lesh's Lab\",\r\n    sector_id: 1291,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7279.95,\r\n        12119.5\r\n    ]\r\n}, {\r\n    id: \"1143-99\",\r\n    name: \"Zakk's Lab\",\r\n    sector_id: 1358,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14448,\r\n        11479.5\r\n    ]\r\n}, {\r\n    id: \"1099-100\",\r\n    name: \"Bauer Farmstead\",\r\n    sector_id: 1280,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11793.7,\r\n        11258.4\r\n    ]\r\n}, {\r\n    id: \"1102-100\",\r\n    name: \"Barrett Farmstead\",\r\n    sector_id: 1345,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8209.71,\r\n        13818.4\r\n    ]\r\n}, {\r\n    id: \"1143-100\",\r\n    name: \"Gee Farmstead\",\r\n    sector_id: 1292,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15377.7,\r\n        13178.4\r\n    ]\r\n}, {\r\n    id: \"1099-101\",\r\n    name: \"McLain's Encampment\",\r\n    sector_id: 1286,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9712.8,\r\n        11263.5\r\n    ]\r\n}, {\r\n    id: \"1102-101\",\r\n    name: \"Patrick's Encampment\",\r\n    sector_id: 1342,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6128.8,\r\n        13823.5\r\n    ]\r\n}, {\r\n    id: \"1143-101\",\r\n    name: \"Habib's Encampment\",\r\n    sector_id: 1306,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13296.8,\r\n        13183.5\r\n    ]\r\n}, {\r\n    id: \"1099-102\",\r\n    name: \"O'del Academy\",\r\n    sector_id: 1352,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9832.4,\r\n        9594.63\r\n    ]\r\n}, {\r\n    id: \"1102-102\",\r\n    name: \"Y'lan Academy\",\r\n    sector_id: 1336,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6248.4,\r\n        12154.6\r\n    ]\r\n}, {\r\n    id: \"1143-102\",\r\n    name: \"Kay'li Academy\",\r\n    sector_id: 1337,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13416.4,\r\n        11514.6\r\n    ]\r\n}, {\r\n    id: \"1099-104\",\r\n    name: \"Eternal Necropolis\",\r\n    sector_id: 1308,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11802.7,\r\n        9664.75\r\n    ]\r\n}, {\r\n    id: \"1102-104\",\r\n    name: \"Deathless Necropolis\",\r\n    sector_id: 1325,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8218.72,\r\n        12224.7\r\n    ]\r\n}, {\r\n    id: \"1143-104\",\r\n    name: \"Undying Necropolis\",\r\n    sector_id: 1355,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15386.7,\r\n        11584.7\r\n    ]\r\n}, {\r\n    id: \"1099-105\",\r\n    name: \"Crankshaft Depot\",\r\n    sector_id: 1354,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11264.3,\r\n        11609.4\r\n    ]\r\n}, {\r\n    id: \"1102-105\",\r\n    name: \"Sparkplug Depot\",\r\n    sector_id: 1302,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7680.32,\r\n        14169.4\r\n    ]\r\n}, {\r\n    id: \"1143-105\",\r\n    name: \"Flywheel Depot\",\r\n    sector_id: 1332,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14848.3,\r\n        13529.4\r\n    ]\r\n}, {\r\n    id: \"1099-106\",\r\n    name: \"Blistering Undercroft\",\r\n    sector_id: 1351,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9854.58,\r\n        10578.5\r\n    ]\r\n}, {\r\n    id: \"1102-106\",\r\n    name: \"Scorching Undercroft\",\r\n    sector_id: 1295,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6270.58,\r\n        13138.5\r\n    ]\r\n}, {\r\n    id: \"1143-106\",\r\n    name: \"Torrid Undercroft\",\r\n    sector_id: 1298,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13438.6,\r\n        12498.5\r\n    ]\r\n}, {\r\n    id: \"1099-107\",\r\n    name: \"Border\",\r\n    sector_id: 1311,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        12022.5,\r\n        11789.9\r\n    ]\r\n}, {\r\n    id: \"1102-107\",\r\n    name: \"Border\",\r\n    sector_id: 1310,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8438.49,\r\n        14349.9\r\n    ]\r\n}, {\r\n    id: \"1143-107\",\r\n    name: \"Border\",\r\n    sector_id: 1349,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15606.5,\r\n        13709.9\r\n    ]\r\n}, {\r\n    id: \"1099-108\",\r\n    name: \"Border\",\r\n    sector_id: 1350,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9641.7,\r\n        11749.6\r\n    ]\r\n}, {\r\n    id: \"1102-108\",\r\n    name: \"Border\",\r\n    sector_id: 1359,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6057.7,\r\n        14309.6\r\n    ]\r\n}, {\r\n    id: \"1143-108\",\r\n    name: \"Border\",\r\n    sector_id: 1285,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13225.7,\r\n        13669.6\r\n    ]\r\n}, {\r\n    id: \"1099-109\",\r\n    name: \"Roy's Refuge\",\r\n    sector_id: 1322,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11954.6,\r\n        10068.5\r\n    ]\r\n}, {\r\n    id: \"1102-109\",\r\n    name: \"Norfolk's Refuge\",\r\n    sector_id: 1290,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8370.6,\r\n        12628.5\r\n    ]\r\n}, {\r\n    id: \"1143-109\",\r\n    name: \"Olivier's Refuge\",\r\n    sector_id: 1304,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15538.6,\r\n        11988.5\r\n    ]\r\n}, {\r\n    id: \"1099-110\",\r\n    name: \"Parched Outpost\",\r\n    sector_id: 1277,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10255,\r\n        11576\r\n    ]\r\n}, {\r\n    id: \"1102-110\",\r\n    name: \"Withered Outpost\",\r\n    sector_id: 1283,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6671.05,\r\n        14136\r\n    ]\r\n}, {\r\n    id: \"1143-110\",\r\n    name: \"Barren Outpost\",\r\n    sector_id: 1328,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13839,\r\n        13496\r\n    ]\r\n}, {\r\n    id: \"1099-113\",\r\n    name: \"Stoic Rampart\",\r\n    sector_id: 1303,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10812.3,\r\n        10102.9\r\n    ]\r\n}, {\r\n    id: \"1102-113\",\r\n    name: \"Impassive Rampart\",\r\n    sector_id: 1318,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7228.32,\r\n        12662.9\r\n    ]\r\n}, {\r\n    id: \"1143-113\",\r\n    name: \"Hardened Rampart\",\r\n    sector_id: 1293,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14396.3,\r\n        12022.9\r\n    ]\r\n}, {\r\n    id: \"1099-114\",\r\n    name: \"Osprey's Palace\",\r\n    sector_id: 1300,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11788,\r\n        10660.2\r\n    ]\r\n}, {\r\n    id: \"1102-114\",\r\n    name: \"Harrier's Palace\",\r\n    sector_id: 1287,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8204,\r\n        13220.2\r\n    ]\r\n}, {\r\n    id: \"1143-114\",\r\n    name: \"Shrike's Palace\",\r\n    sector_id: 1356,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15372,\r\n        12580.2\r\n    ]\r\n}, {\r\n    id: \"1099-115\",\r\n    name: \"Boettiger's Hideaway\",\r\n    sector_id: 1316,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9585.9,\r\n        10037.1\r\n    ]\r\n}, {\r\n    id: \"1102-115\",\r\n    name: \"Hughe's Hideaway\",\r\n    sector_id: 1324,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6001.9,\r\n        12597.1\r\n    ]\r\n}, {\r\n    id: \"1143-115\",\r\n    name: \"Berdrow's Hideaway\",\r\n    sector_id: 1357,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13169.9,\r\n        11957.1\r\n    ]\r\n}, {\r\n    id: \"1099-116\",\r\n    name: \"Dustwhisper Well\",\r\n    sector_id: 1296,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10773.3,\r\n        11652.5\r\n    ]\r\n}, {\r\n    id: \"1102-116\",\r\n    name: \"Smashedhope Well\",\r\n    sector_id: 1338,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7189.29,\r\n        14212.5\r\n    ]\r\n}, {\r\n    id: \"1143-116\",\r\n    name: \"Lastgasp Well\",\r\n    sector_id: 1301,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14357.3,\r\n        13572.5\r\n    ]\r\n}, {\r\n    id: \"1099-117\",\r\n    name: \"Citadel\",\r\n    sector_id: 1343,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10590.2,\r\n        9169.19\r\n    ]\r\n}, {\r\n    id: \"1102-117\",\r\n    name: \"Citadel\",\r\n    sector_id: 1315,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7006.19,\r\n        11729.2\r\n    ]\r\n}, {\r\n    id: \"1143-117\",\r\n    name: \"Citadel\",\r\n    sector_id: 1279,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14174.2,\r\n        11089.2\r\n    ]\r\n}, {\r\n    id: \"95-48\",\r\n    name: \"Faithleap\",\r\n    sector_id: 1010,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-11\",\r\n    name: \"Aldon's Ledge\",\r\n    sector_id: 882,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9417.39,\r\n        14790.7\r\n    ]\r\n}, {\r\n    id: \"95-43\",\r\n    name: \"Hero's Lodge\",\r\n    sector_id: 1004,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-62\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-31\",\r\n    name: \"Ascension Bay\",\r\n    sector_id: 973,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-29\",\r\n    name: \"The Spiritholme\",\r\n    sector_id: 978,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-1\",\r\n    name: \"Overlook\",\r\n    sector_id: 843,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10698.4,\r\n        13761\r\n    ]\r\n}, {\r\n    id: \"38-15\",\r\n    name: \"Langor Gulch\",\r\n    sector_id: 887,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11465.3,\r\n        15569.6\r\n    ]\r\n}, {\r\n    id: \"38-3\",\r\n    name: \"Lowlands\",\r\n    sector_id: 848,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9840.25,\r\n        14983.6\r\n    ]\r\n}, {\r\n    id: \"38-17\",\r\n    name: \"Mendon's Gap\",\r\n    sector_id: 890,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10192.7,\r\n        13410.8\r\n    ]\r\n}, {\r\n    id: \"94-35\",\r\n    name: \"Greenbriar\",\r\n    sector_id: 964,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-7\",\r\n    name: \"Danelon Passage\",\r\n    sector_id: 837,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10996.4,\r\n        15545.8\r\n    ]\r\n}, {\r\n    id: \"96-27\",\r\n    name: \"Garrison\",\r\n    sector_id: 976,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-103\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-30\",\r\n    name: \"Woodhaven\",\r\n    sector_id: 988,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-41\",\r\n    name: \"Shadaran Hills\",\r\n    sector_id: 996,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-32\",\r\n    name: \"Etheron Hills\",\r\n    sector_id: 962,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-56\",\r\n    name: \"The Titanpaw\",\r\n    sector_id: 998,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-75\",\r\n    name: \"Daemonspell Lake\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-9\",\r\n    name: \"Stonemist Castle\",\r\n    sector_id: 833,\r\n    type: \"Castle\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10627.3,\r\n        14501.3\r\n    ]\r\n}, {\r\n    id: \"95-57\",\r\n    name: \"Cragtop\",\r\n    sector_id: 1006,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-5\",\r\n    name: \"Pangloss Rise\",\r\n    sector_id: 846,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11201.6,\r\n        13718.4\r\n    ]\r\n}, {\r\n    id: \"94-33\",\r\n    name: \"Dreaming Bay\",\r\n    sector_id: 957,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-42\",\r\n    name: \"Redlake\",\r\n    sector_id: 1008,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-21\",\r\n    name: \"Durios Gulch\",\r\n    sector_id: 888,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11207.1,\r\n        14595\r\n    ]\r\n}, {\r\n    id: \"95-54\",\r\n    name: \"Foghaven\",\r\n    sector_id: 995,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-55\",\r\n    name: \"Redwater Lowlands\",\r\n    sector_id: 1003,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-26\",\r\n    name: \"Greenlake\",\r\n    sector_id: 989,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-20\",\r\n    name: \"Veloka Slope\",\r\n    sector_id: 891,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11017.4,\r\n        13414.4\r\n    ]\r\n}, {\r\n    id: \"95-44\",\r\n    name: \"Dreadfall Bay\",\r\n    sector_id: 999,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-45\",\r\n    name: \"Bluebriar\",\r\n    sector_id: 1009,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-14\",\r\n    name: \"Klovan Gully\",\r\n    sector_id: 884,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10219.5,\r\n        15107.6\r\n    ]\r\n}, {\r\n    id: \"38-13\",\r\n    name: \"Jerrifer's Slough\",\r\n    sector_id: 883,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9757.06,\r\n        15467.8\r\n    ]\r\n}, {\r\n    id: \"94-65\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-38\",\r\n    name: \"Longview\",\r\n    sector_id: 955,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-6\",\r\n    name: \"Speldan Clearcut\",\r\n    sector_id: 844,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9739.81,\r\n        13586.9\r\n    ]\r\n}, {\r\n    id: \"94-39\",\r\n    name: \"The Godsword\",\r\n    sector_id: 953,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-64\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-37\",\r\n    name: \"Garrison\",\r\n    sector_id: 952,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-2\",\r\n    name: \"Valley\",\r\n    sector_id: 834,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11268.9,\r\n        15087.7\r\n    ]\r\n}, {\r\n    id: \"95-47\",\r\n    name: \"Sunnyhill\",\r\n    sector_id: 1007,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-67\",\r\n    name: \"Devilheart Lake\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-68\",\r\n    name: \"Devilheart Lake\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-53\",\r\n    name: \"Greenvale Refuge\",\r\n    sector_id: 971,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-12\",\r\n    name: \"Wildcreek Run\",\r\n    sector_id: 885,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9958.23,\r\n        14605.7\r\n    ]\r\n}, {\r\n    id: \"96-25\",\r\n    name: \"Redbriar\",\r\n    sector_id: 990,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-111\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-112\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-71\",\r\n    name: \"Devilheart Lake\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-46\",\r\n    name: \"Garrison\",\r\n    sector_id: 992,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-52\",\r\n    name: \"Arah's Hope\",\r\n    sector_id: 956,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-16\",\r\n    name: \"Quentin Lake\",\r\n    sector_id: 889,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10951.8,\r\n        15121.2\r\n    ]\r\n}, {\r\n    id: \"38-22\",\r\n    name: \"Bravost Escarpment\",\r\n    sector_id: 886,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11750.2,\r\n        14859.4\r\n    ]\r\n}, {\r\n    id: \"95-49\",\r\n    name: \"Bluevale Refuge\",\r\n    sector_id: 1005,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-19\",\r\n    name: \"Ogrewatch Cut\",\r\n    sector_id: 892,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10965,\r\n        13951\r\n    ]\r\n}, {\r\n    id: \"95-76\",\r\n    name: \"Daemonspell Lake\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-73\",\r\n    name: \"Daemonspell Lake\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-51\",\r\n    name: \"Astralholme\",\r\n    sector_id: 960,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-66\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-4\",\r\n    name: \"Golanta Clearing\",\r\n    sector_id: 849,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10198.9,\r\n        15520.2\r\n    ]\r\n}, {\r\n    id: \"94-34\",\r\n    name: \"Victor's Lodge\",\r\n    sector_id: 963,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-28\",\r\n    name: \"Dawn's Eyrie\",\r\n    sector_id: 987,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-59\",\r\n    name: \"Redvale Refuge\",\r\n    sector_id: 985,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-36\",\r\n    name: \"Bluelake\",\r\n    sector_id: 965,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-50\",\r\n    name: \"Bluewater Lowlands\",\r\n    sector_id: 972,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-8\",\r\n    name: \"Umberglade Woods\",\r\n    sector_id: 835,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11680.9,\r\n        14353.6\r\n    ]\r\n}, {\r\n    id: \"94-63\",\r\n    name: \"Demontrance Lake\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-70\",\r\n    name: \"Devilheart Lake\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-69\",\r\n    name: \"Devilheart Lake\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-60\",\r\n    name: \"Stargrove\",\r\n    sector_id: 986,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-40\",\r\n    name: \"Cliffside\",\r\n    sector_id: 959,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-61\",\r\n    name: \"Greenwater Lowlands\",\r\n    sector_id: 983,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-23\",\r\n    name: \"Askalion Hills\",\r\n    sector_id: 979,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-74\",\r\n    name: \"Daemonspell Lake\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-10\",\r\n    name: \"Rogue's Quarry\",\r\n    sector_id: 851,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9612.54,\r\n        14462.8\r\n    ]\r\n}, {\r\n    id: \"96-24\",\r\n    name: \"Champion's Demesne\",\r\n    sector_id: 984,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-18\",\r\n    name: \"Anzalias Pass\",\r\n    sector_id: 893,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10243.3,\r\n        13974.4\r\n    ]\r\n}, {\r\n    id: \"95-72\",\r\n    name: \"Daemonspell Lake\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-58\",\r\n    name: \"Godslore\",\r\n    sector_id: 991,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"968-98\",\r\n    name: \"Wurm Tunnel\",\r\n    sector_id: 1156,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6750.92,\r\n        10211.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/087491CDD56F7FB998C332360D32FD26A8B2A99D/730428.png\"\r\n}, {\r\n    id: \"968-96\",\r\n    name: \"Airport\",\r\n    sector_id: 1153,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7054.16,\r\n        10421\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/ACCCB1BD617598C0EA9C756EADE53DF36C2578EC/730427.png\"\r\n}, {\r\n    id: \"968-82\",\r\n    name: \"Thunder Hollow Reactor\",\r\n    sector_id: 1168,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8282.77,\r\n        10425.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-93\",\r\n    name: \"Forge\",\r\n    sector_id: 1154,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8223.64,\r\n        10692.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D1AB541FC3BE12AC5BBB020212BEBE3F5C0C4315/730415.png\"\r\n}, {\r\n    id: \"968-80\",\r\n    name: \"Overgrown Fane Reactor\",\r\n    sector_id: 1162,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7513.83,\r\n        9059.96\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-94\",\r\n    name: \"Shrine\",\r\n    sector_id: 1164,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8614.89,\r\n        10246.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B5709941B0352FD4CA3B7AFDA42873D8EFDB15AD/730414.png\"\r\n}, {\r\n    id: \"968-90\",\r\n    name: \"Altar\",\r\n    sector_id: 1160,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7240.66,\r\n        9253.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/DC01EC41D8809B59B85BEEDC45E9556D730BD21A/730413.png\"\r\n}, {\r\n    id: \"968-97\",\r\n    name: \"Workshop\",\r\n    sector_id: 1152,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6837.6,\r\n        10845.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B34C2E3D0F34FD03F44BB5ED4E18DCDD0059A5C4/730429.png\"\r\n}, {\r\n    id: \"968-81\",\r\n    name: \"Arid Fortress Reactor\",\r\n    sector_id: 1163,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6823.83,\r\n        10479.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-83\",\r\n    name: \"Stonegaze Spire Reactor\",\r\n    sector_id: 1167,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7249.21,\r\n        9763.87\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-95\",\r\n    name: \"Bell Tower\",\r\n    sector_id: 1173,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8180.68,\r\n        10325.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D4180774DD03A4BC7252B952680E451F16679A72/730410.png\"\r\n}, {\r\n    id: \"968-91\",\r\n    name: \"Observatory\",\r\n    sector_id: 1158,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7953.67,\r\n        9062.79\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/015CF16C78DFDAD742E1A5613FB74B6463BF4A70/730411.png\"\r\n}, {\r\n    id: \"968-78\",\r\n    name: \"Overgrown Fane\",\r\n    sector_id: 1161,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7606.7,\r\n        8882.14\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-88\",\r\n    name: \"Arid Fortress\",\r\n    sector_id: 1157,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6442.17,\r\n        10881.8\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-89\",\r\n    name: \"Tytone Perch\",\r\n    sector_id: 1172,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7884.81,\r\n        9809.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-79\",\r\n    name: \"Thunder Hollow\",\r\n    sector_id: 1169,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8506.75,\r\n        10824.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-85\",\r\n    name: \"Tytone Perch Reactor\",\r\n    sector_id: 1165,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7852.89,\r\n        9855.56\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-77\",\r\n    name: \"Inferno's Needle\",\r\n    sector_id: 1171,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7504.84,\r\n        10598.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-87\",\r\n    name: \"Stonegaze Spire\",\r\n    sector_id: 1170,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7164.46,\r\n        9805.15\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-84\",\r\n    name: \"Inferno's Needle Reactor\",\r\n    sector_id: 1166,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7581.91,\r\n        10316.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-92\",\r\n    name: \"Statuary\",\r\n    sector_id: 1159,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7553.12,\r\n        9360.16\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/4C0113B6DF2E4E2CBB93244AD50DA49456D5014E/730412.png\"\r\n}];\r\n","module.exports = [{\r\n    id: \"1099-99\",\r\n    name: \"Laboratorio de Hamm\",\r\n    sector_id: 1314,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10864,\r\n        9559.49\r\n    ]\r\n}, {\r\n    id: \"1102-99\",\r\n    name: \"Laboratorio de Lesh\",\r\n    sector_id: 1291,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7279.95,\r\n        12119.5\r\n    ]\r\n}, {\r\n    id: \"1143-99\",\r\n    name: \"Laboratorio de Zakk\",\r\n    sector_id: 1358,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14448,\r\n        11479.5\r\n    ]\r\n}, {\r\n    id: \"1099-100\",\r\n    name: \"Hacienda de Bauer\",\r\n    sector_id: 1280,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11793.7,\r\n        11258.4\r\n    ]\r\n}, {\r\n    id: \"1102-100\",\r\n    name: \"Hacienda de Barrett\",\r\n    sector_id: 1345,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8209.71,\r\n        13818.4\r\n    ]\r\n}, {\r\n    id: \"1143-100\",\r\n    name: \"Hacienda de Gee\",\r\n    sector_id: 1292,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15377.7,\r\n        13178.4\r\n    ]\r\n}, {\r\n    id: \"1099-101\",\r\n    name: \"Campamento de McLain\",\r\n    sector_id: 1286,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9712.8,\r\n        11263.5\r\n    ]\r\n}, {\r\n    id: \"1102-101\",\r\n    name: \"Campamento de Patrick\",\r\n    sector_id: 1342,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6128.8,\r\n        13823.5\r\n    ]\r\n}, {\r\n    id: \"1143-101\",\r\n    name: \"Campamento de Habib\",\r\n    sector_id: 1306,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13296.8,\r\n        13183.5\r\n    ]\r\n}, {\r\n    id: \"1099-102\",\r\n    name: \"Academia O'del\",\r\n    sector_id: 1352,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9832.4,\r\n        9594.63\r\n    ]\r\n}, {\r\n    id: \"1102-102\",\r\n    name: \"Academia Y'lan\",\r\n    sector_id: 1336,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6248.4,\r\n        12154.6\r\n    ]\r\n}, {\r\n    id: \"1143-102\",\r\n    name: \"Academia Kay'li\",\r\n    sector_id: 1337,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13416.4,\r\n        11514.6\r\n    ]\r\n}, {\r\n    id: \"1099-104\",\r\n    name: \"Necrópolis Eterna\",\r\n    sector_id: 1308,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11802.7,\r\n        9664.75\r\n    ]\r\n}, {\r\n    id: \"1102-104\",\r\n    name: \"Necrópolis Inmortal\",\r\n    sector_id: 1325,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8218.72,\r\n        12224.7\r\n    ]\r\n}, {\r\n    id: \"1143-104\",\r\n    name: \"Necrópolis Imperecedera\",\r\n    sector_id: 1355,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15386.7,\r\n        11584.7\r\n    ]\r\n}, {\r\n    id: \"1099-105\",\r\n    name: \"Depósito de Palancamanijas\",\r\n    sector_id: 1354,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11264.3,\r\n        11609.4\r\n    ]\r\n}, {\r\n    id: \"1102-105\",\r\n    name: \"Depósito de Bujías\",\r\n    sector_id: 1302,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7680.32,\r\n        14169.4\r\n    ]\r\n}, {\r\n    id: \"1143-105\",\r\n    name: \"Depósito de Volantes\",\r\n    sector_id: 1332,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14848.3,\r\n        13529.4\r\n    ]\r\n}, {\r\n    id: \"1099-106\",\r\n    name: \"Sótano Achicharrante\",\r\n    sector_id: 1351,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9854.58,\r\n        10578.5\r\n    ]\r\n}, {\r\n    id: \"1102-106\",\r\n    name: \"Sótano Abrasador\",\r\n    sector_id: 1295,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6270.58,\r\n        13138.5\r\n    ]\r\n}, {\r\n    id: \"1143-106\",\r\n    name: \"Sótano Sofocante\",\r\n    sector_id: 1298,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13438.6,\r\n        12498.5\r\n    ]\r\n}, {\r\n    id: \"1099-107\",\r\n    name: \"Frontera\",\r\n    sector_id: 1311,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        12022.5,\r\n        11789.9\r\n    ]\r\n}, {\r\n    id: \"1102-107\",\r\n    name: \"Frontera\",\r\n    sector_id: 1310,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8438.49,\r\n        14349.9\r\n    ]\r\n}, {\r\n    id: \"1143-107\",\r\n    name: \"Frontera\",\r\n    sector_id: 1349,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15606.5,\r\n        13709.9\r\n    ]\r\n}, {\r\n    id: \"1099-108\",\r\n    name: \"Frontera\",\r\n    sector_id: 1350,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9641.7,\r\n        11749.6\r\n    ]\r\n}, {\r\n    id: \"1102-108\",\r\n    name: \"Frontera\",\r\n    sector_id: 1359,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6057.7,\r\n        14309.6\r\n    ]\r\n}, {\r\n    id: \"1143-108\",\r\n    name: \"Frontera\",\r\n    sector_id: 1285,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13225.7,\r\n        13669.6\r\n    ]\r\n}, {\r\n    id: \"1099-109\",\r\n    name: \"Refugio de Roy\",\r\n    sector_id: 1322,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11954.6,\r\n        10068.5\r\n    ]\r\n}, {\r\n    id: \"1102-109\",\r\n    name: \"Refugio de Norfolk\",\r\n    sector_id: 1290,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8370.6,\r\n        12628.5\r\n    ]\r\n}, {\r\n    id: \"1143-109\",\r\n    name: \"Refugio de Olivier\",\r\n    sector_id: 1304,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15538.6,\r\n        11988.5\r\n    ]\r\n}, {\r\n    id: \"1099-110\",\r\n    name: \"Puesto Avanzado Abrasado\",\r\n    sector_id: 1277,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10255,\r\n        11576\r\n    ]\r\n}, {\r\n    id: \"1102-110\",\r\n    name: \"Puesto Avanzado Desolado\",\r\n    sector_id: 1283,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6671.05,\r\n        14136\r\n    ]\r\n}, {\r\n    id: \"1143-110\",\r\n    name: \"Puesto Avanzado Abandonado\",\r\n    sector_id: 1328,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13839,\r\n        13496\r\n    ]\r\n}, {\r\n    id: \"1099-113\",\r\n    name: \"Muralla Estoica\",\r\n    sector_id: 1303,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10812.3,\r\n        10102.9\r\n    ]\r\n}, {\r\n    id: \"1102-113\",\r\n    name: \"Muralla Imperturbable\",\r\n    sector_id: 1318,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7228.32,\r\n        12662.9\r\n    ]\r\n}, {\r\n    id: \"1143-113\",\r\n    name: \"Muralla Endurecida\",\r\n    sector_id: 1293,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14396.3,\r\n        12022.9\r\n    ]\r\n}, {\r\n    id: \"1099-114\",\r\n    name: \"Palacio del Águila Pescadora\",\r\n    sector_id: 1300,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11788,\r\n        10660.2\r\n    ]\r\n}, {\r\n    id: \"1102-114\",\r\n    name: \"Palacio del Aguilucho\",\r\n    sector_id: 1287,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8204,\r\n        13220.2\r\n    ]\r\n}, {\r\n    id: \"1143-114\",\r\n    name: \"Palacio del Alcaudón\",\r\n    sector_id: 1356,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15372,\r\n        12580.2\r\n    ]\r\n}, {\r\n    id: \"1099-115\",\r\n    name: \"Escondrijo de Boettiger\",\r\n    sector_id: 1316,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9585.9,\r\n        10037.1\r\n    ]\r\n}, {\r\n    id: \"1102-115\",\r\n    name: \"Escondrijo de Hughe\",\r\n    sector_id: 1324,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6001.9,\r\n        12597.1\r\n    ]\r\n}, {\r\n    id: \"1143-115\",\r\n    name: \"Escondrijo de Berdrow\",\r\n    sector_id: 1357,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13169.9,\r\n        11957.1\r\n    ]\r\n}, {\r\n    id: \"1099-116\",\r\n    name: \"Pozo del Murmullo de Polvo\",\r\n    sector_id: 1296,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10773.3,\r\n        11652.5\r\n    ]\r\n}, {\r\n    id: \"1102-116\",\r\n    name: \"Pozo Tragaesperanza\",\r\n    sector_id: 1338,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7189.29,\r\n        14212.5\r\n    ]\r\n}, {\r\n    id: \"1143-116\",\r\n    name: \"Pozo del Último Suspiro\",\r\n    sector_id: 1301,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14357.3,\r\n        13572.5\r\n    ]\r\n}, {\r\n    id: \"1099-117\",\r\n    name: \"Ciudadela\",\r\n    sector_id: 1343,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10590.2,\r\n        9169.19\r\n    ]\r\n}, {\r\n    id: \"1102-117\",\r\n    name: \"Ciudadela\",\r\n    sector_id: 1315,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7006.19,\r\n        11729.2\r\n    ]\r\n}, {\r\n    id: \"1143-117\",\r\n    name: \"Ciudadela\",\r\n    sector_id: 1279,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14174.2,\r\n        11089.2\r\n    ]\r\n}, {\r\n    id: \"95-48\",\r\n    name: \"Salto de Fe\",\r\n    sector_id: 1010,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-11\",\r\n    name: \"Cornisa de Aldon\",\r\n    sector_id: 882,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9417.39,\r\n        14790.7\r\n    ]\r\n}, {\r\n    id: \"95-43\",\r\n    name: \"Albergue del Héroe\",\r\n    sector_id: 1004,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-62\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-31\",\r\n    name: \"Bahía de la Ascensión\",\r\n    sector_id: 973,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-29\",\r\n    name: \"La Isleta Espiritual\",\r\n    sector_id: 978,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-1\",\r\n    name: \"Mirador\",\r\n    sector_id: 843,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10698.4,\r\n        13761\r\n    ]\r\n}, {\r\n    id: \"38-15\",\r\n    name: \"Barranco Langor\",\r\n    sector_id: 887,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11465.3,\r\n        15569.6\r\n    ]\r\n}, {\r\n    id: \"38-3\",\r\n    name: \"Tierras bajas\",\r\n    sector_id: 848,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9840.25,\r\n        14983.6\r\n    ]\r\n}, {\r\n    id: \"38-17\",\r\n    name: \"Zanja de Mendon\",\r\n    sector_id: 890,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10192.7,\r\n        13410.8\r\n    ]\r\n}, {\r\n    id: \"94-35\",\r\n    name: \"Zarzaverde\",\r\n    sector_id: 964,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-7\",\r\n    name: \"Pasaje Danelon\",\r\n    sector_id: 837,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10996.4,\r\n        15545.8\r\n    ]\r\n}, {\r\n    id: \"96-27\",\r\n    name: \"Fuerte\",\r\n    sector_id: 976,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-103\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-30\",\r\n    name: \"Refugio Forestal\",\r\n    sector_id: 988,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-41\",\r\n    name: \"Colinas Shadaran\",\r\n    sector_id: 996,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-32\",\r\n    name: \"Colinas Etheron\",\r\n    sector_id: 962,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-56\",\r\n    name: \"La Garra del Titán\",\r\n    sector_id: 998,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-75\",\r\n    name: \"Lago Daemonia\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-9\",\r\n    name: \"Castillo Piedraniebla\",\r\n    sector_id: 833,\r\n    type: \"Castle\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10627.3,\r\n        14501.3\r\n    ]\r\n}, {\r\n    id: \"95-57\",\r\n    name: \"Cumbrepeñasco\",\r\n    sector_id: 1006,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-5\",\r\n    name: \"Colina Pangloss\",\r\n    sector_id: 846,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11201.6,\r\n        13718.4\r\n    ]\r\n}, {\r\n    id: \"94-33\",\r\n    name: \"Bahía Onírica\",\r\n    sector_id: 957,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-42\",\r\n    name: \"Lagorrojo\",\r\n    sector_id: 1008,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-21\",\r\n    name: \"Barranco Durios\",\r\n    sector_id: 888,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11207.1,\r\n        14595\r\n    ]\r\n}, {\r\n    id: \"95-54\",\r\n    name: \"Refugio Neblinoso\",\r\n    sector_id: 995,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-55\",\r\n    name: \"Tierras Bajas de Aguarroja\",\r\n    sector_id: 1003,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-26\",\r\n    name: \"Lagoverde\",\r\n    sector_id: 989,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-20\",\r\n    name: \"Pendiente Veloka\",\r\n    sector_id: 891,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11017.4,\r\n        13414.4\r\n    ]\r\n}, {\r\n    id: \"95-44\",\r\n    name: \"Bahía Salto Aciago\",\r\n    sector_id: 999,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-45\",\r\n    name: \"Zarzazul\",\r\n    sector_id: 1009,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-14\",\r\n    name: \"Barranco Klovan\",\r\n    sector_id: 884,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10219.5,\r\n        15107.6\r\n    ]\r\n}, {\r\n    id: \"38-13\",\r\n    name: \"Cenagal de Jerrifer\",\r\n    sector_id: 883,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9757.06,\r\n        15467.8\r\n    ]\r\n}, {\r\n    id: \"94-65\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-38\",\r\n    name: \"Vistaluenga\",\r\n    sector_id: 955,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-6\",\r\n    name: \"Claro Espeldia\",\r\n    sector_id: 844,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9739.81,\r\n        13586.9\r\n    ]\r\n}, {\r\n    id: \"94-39\",\r\n    name: \"La Hoja Divina\",\r\n    sector_id: 953,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-64\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-37\",\r\n    name: \"Fuerte\",\r\n    sector_id: 952,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-2\",\r\n    name: \"Valle\",\r\n    sector_id: 834,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11268.9,\r\n        15087.7\r\n    ]\r\n}, {\r\n    id: \"95-47\",\r\n    name: \"Colina Soleada\",\r\n    sector_id: 1007,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-67\",\r\n    name: \"Lago Corazonvil\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-68\",\r\n    name: \"Lago Corazonvil\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-53\",\r\n    name: \"Refugio Valleverde\",\r\n    sector_id: 971,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-12\",\r\n    name: \"Pista Arroyosalvaje\",\r\n    sector_id: 885,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9958.23,\r\n        14605.7\r\n    ]\r\n}, {\r\n    id: \"96-25\",\r\n    name: \"Zarzarroja\",\r\n    sector_id: 990,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-111\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-112\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-71\",\r\n    name: \"Lago Corazonvil\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-46\",\r\n    name: \"Fuerte\",\r\n    sector_id: 992,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-52\",\r\n    name: \"Esperanza de Arah\",\r\n    sector_id: 956,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-16\",\r\n    name: \"Lago Quentin\",\r\n    sector_id: 889,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10951.8,\r\n        15121.2\r\n    ]\r\n}, {\r\n    id: \"38-22\",\r\n    name: \"Escarpadura Bravost\",\r\n    sector_id: 886,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11750.2,\r\n        14859.4\r\n    ]\r\n}, {\r\n    id: \"95-49\",\r\n    name: \"Refugio Valleazul\",\r\n    sector_id: 1005,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-19\",\r\n    name: \"Tajo de la Guardia del Ogro\",\r\n    sector_id: 892,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10965,\r\n        13951\r\n    ]\r\n}, {\r\n    id: \"95-76\",\r\n    name: \"Lago Daemonia\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-73\",\r\n    name: \"Lago Daemonia\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-51\",\r\n    name: \"Isleta Astral\",\r\n    sector_id: 960,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-66\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-4\",\r\n    name: \"Claro Golanta\",\r\n    sector_id: 849,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10198.9,\r\n        15520.2\r\n    ]\r\n}, {\r\n    id: \"94-34\",\r\n    name: \"Albergue del Vencedor\",\r\n    sector_id: 963,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-28\",\r\n    name: \"Aguilera del Alba\",\r\n    sector_id: 987,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-59\",\r\n    name: \"Refugio Vallerrojo\",\r\n    sector_id: 985,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-36\",\r\n    name: \"Lagoazul\",\r\n    sector_id: 965,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-50\",\r\n    name: \"Tierras Bajas de Aguazul\",\r\n    sector_id: 972,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-8\",\r\n    name: \"Bosques Clarosombra\",\r\n    sector_id: 835,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11680.9,\r\n        14353.6\r\n    ]\r\n}, {\r\n    id: \"94-63\",\r\n    name: \"Lago Trancedemoníaco\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-70\",\r\n    name: \"Lago Corazonvil\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-69\",\r\n    name: \"Lago Corazonvil\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-60\",\r\n    name: \"Arboleda de las Estrellas\",\r\n    sector_id: 986,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-40\",\r\n    name: \"Despeñadero\",\r\n    sector_id: 959,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-61\",\r\n    name: \"Tierras bajas de Aguaverde\",\r\n    sector_id: 983,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-23\",\r\n    name: \"Colinas Askalion\",\r\n    sector_id: 979,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-74\",\r\n    name: \"Lago Daemonia\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-10\",\r\n    name: \"Cantera del Pícaro\",\r\n    sector_id: 851,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9612.54,\r\n        14462.8\r\n    ]\r\n}, {\r\n    id: \"96-24\",\r\n    name: \"Patrimonio del Campeón\",\r\n    sector_id: 984,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-18\",\r\n    name: \"Paso Anzalias\",\r\n    sector_id: 893,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10243.3,\r\n        13974.4\r\n    ]\r\n}, {\r\n    id: \"95-72\",\r\n    name: \"Lago Daemonia\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-58\",\r\n    name: \"Sabiduría de los Dioses\",\r\n    sector_id: 991,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"968-98\",\r\n    name: \"Túnel de la Sierpe\",\r\n    sector_id: 1156,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6750.92,\r\n        10211.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/087491CDD56F7FB998C332360D32FD26A8B2A99D/730428.png\"\r\n}, {\r\n    id: \"968-96\",\r\n    name: \"Aeropuerto\",\r\n    sector_id: 1153,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7054.16,\r\n        10421\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/ACCCB1BD617598C0EA9C756EADE53DF36C2578EC/730427.png\"\r\n}, {\r\n    id: \"968-82\",\r\n    name: \"Reactor de Hondonada del Trueno\",\r\n    sector_id: 1168,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8282.77,\r\n        10425.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-93\",\r\n    name: \"Forja\",\r\n    sector_id: 1154,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8223.64,\r\n        10692.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D1AB541FC3BE12AC5BBB020212BEBE3F5C0C4315/730415.png\"\r\n}, {\r\n    id: \"968-80\",\r\n    name: \"Reactor de Fano Gigante\",\r\n    sector_id: 1162,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7513.83,\r\n        9059.96\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-94\",\r\n    name: \"Santuario\",\r\n    sector_id: 1164,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8614.89,\r\n        10246.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B5709941B0352FD4CA3B7AFDA42873D8EFDB15AD/730414.png\"\r\n}, {\r\n    id: \"968-90\",\r\n    name: \"Altar\",\r\n    sector_id: 1160,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7240.66,\r\n        9253.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/DC01EC41D8809B59B85BEEDC45E9556D730BD21A/730413.png\"\r\n}, {\r\n    id: \"968-97\",\r\n    name: \"Taller\",\r\n    sector_id: 1152,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6837.6,\r\n        10845.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B34C2E3D0F34FD03F44BB5ED4E18DCDD0059A5C4/730429.png\"\r\n}, {\r\n    id: \"968-81\",\r\n    name: \"Reactor de Fortaleza Árida\",\r\n    sector_id: 1163,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6823.83,\r\n        10479.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-83\",\r\n    name: \"Reactor de Aguja de Mirapiedras\",\r\n    sector_id: 1167,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7249.21,\r\n        9763.87\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-95\",\r\n    name: \"Campanario\",\r\n    sector_id: 1173,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8180.68,\r\n        10325.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D4180774DD03A4BC7252B952680E451F16679A72/730410.png\"\r\n}, {\r\n    id: \"968-91\",\r\n    name: \"Observatorio\",\r\n    sector_id: 1158,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7953.67,\r\n        9062.79\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/015CF16C78DFDAD742E1A5613FB74B6463BF4A70/730411.png\"\r\n}, {\r\n    id: \"968-78\",\r\n    name: \"Fano Gigante\",\r\n    sector_id: 1161,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7606.7,\r\n        8882.14\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-88\",\r\n    name: \"Fortaleza Árida\",\r\n    sector_id: 1157,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6442.17,\r\n        10881.8\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-89\",\r\n    name: \"Percha de Tytone\",\r\n    sector_id: 1172,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7884.81,\r\n        9809.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-79\",\r\n    name: \"Hondonada del Trueno\",\r\n    sector_id: 1169,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8506.75,\r\n        10824.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-85\",\r\n    name: \"Reactor de Percha de Tytone\",\r\n    sector_id: 1165,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7852.89,\r\n        9855.56\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-77\",\r\n    name: \"Aguja del Infierno\",\r\n    sector_id: 1171,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7504.84,\r\n        10598.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-87\",\r\n    name: \"Aguja de Mirapiedras\",\r\n    sector_id: 1170,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7164.46,\r\n        9805.15\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-84\",\r\n    name: \"Reactor de Aguja del Infierno\",\r\n    sector_id: 1166,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7581.91,\r\n        10316.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-92\",\r\n    name: \"Estatuario\",\r\n    sector_id: 1159,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7553.12,\r\n        9360.16\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/4C0113B6DF2E4E2CBB93244AD50DA49456D5014E/730412.png\"\r\n}];\r\n","module.exports = [{\r\n    id: \"1099-99\",\r\n    name: \"Laboratoire de Hamm\",\r\n    sector_id: 1314,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10864,\r\n        9559.49\r\n    ]\r\n}, {\r\n    id: \"1102-99\",\r\n    name: \"Laboratoire de Lesh\",\r\n    sector_id: 1291,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7279.95,\r\n        12119.5\r\n    ]\r\n}, {\r\n    id: \"1143-99\",\r\n    name: \"Laboratoire de Zakk\",\r\n    sector_id: 1358,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14448,\r\n        11479.5\r\n    ]\r\n}, {\r\n    id: \"1099-100\",\r\n    name: \"Ferme Bauer\",\r\n    sector_id: 1280,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11793.7,\r\n        11258.4\r\n    ]\r\n}, {\r\n    id: \"1102-100\",\r\n    name: \"Ferme Barrett\",\r\n    sector_id: 1345,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8209.71,\r\n        13818.4\r\n    ]\r\n}, {\r\n    id: \"1143-100\",\r\n    name: \"Ferme Gee\",\r\n    sector_id: 1292,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15377.7,\r\n        13178.4\r\n    ]\r\n}, {\r\n    id: \"1099-101\",\r\n    name: \"Campement de McLain\",\r\n    sector_id: 1286,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9712.8,\r\n        11263.5\r\n    ]\r\n}, {\r\n    id: \"1102-101\",\r\n    name: \"Campement de Patrick\",\r\n    sector_id: 1342,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6128.8,\r\n        13823.5\r\n    ]\r\n}, {\r\n    id: \"1143-101\",\r\n    name: \"Campement d'Habib\",\r\n    sector_id: 1306,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13296.8,\r\n        13183.5\r\n    ]\r\n}, {\r\n    id: \"1099-102\",\r\n    name: \"Académie de O'del\",\r\n    sector_id: 1352,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9832.4,\r\n        9594.63\r\n    ]\r\n}, {\r\n    id: \"1102-102\",\r\n    name: \"Académie de Y'lan\",\r\n    sector_id: 1336,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6248.4,\r\n        12154.6\r\n    ]\r\n}, {\r\n    id: \"1143-102\",\r\n    name: \"Académie de Kay'li\",\r\n    sector_id: 1337,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13416.4,\r\n        11514.6\r\n    ]\r\n}, {\r\n    id: \"1099-104\",\r\n    name: \"Nécropole éternelle\",\r\n    sector_id: 1308,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11802.7,\r\n        9664.75\r\n    ]\r\n}, {\r\n    id: \"1102-104\",\r\n    name: \"Nécropole immortelle\",\r\n    sector_id: 1325,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8218.72,\r\n        12224.7\r\n    ]\r\n}, {\r\n    id: \"1143-104\",\r\n    name: \"Nécropole impérissable\",\r\n    sector_id: 1355,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15386.7,\r\n        11584.7\r\n    ]\r\n}, {\r\n    id: \"1099-105\",\r\n    name: \"Dépôt Vilebrequin\",\r\n    sector_id: 1354,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11264.3,\r\n        11609.4\r\n    ]\r\n}, {\r\n    id: \"1102-105\",\r\n    name: \"Dépôt Bougie\",\r\n    sector_id: 1302,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7680.32,\r\n        14169.4\r\n    ]\r\n}, {\r\n    id: \"1143-105\",\r\n    name: \"Dépôt Engrenage\",\r\n    sector_id: 1332,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14848.3,\r\n        13529.4\r\n    ]\r\n}, {\r\n    id: \"1099-106\",\r\n    name: \"Crypte embrasée\",\r\n    sector_id: 1351,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9854.58,\r\n        10578.5\r\n    ]\r\n}, {\r\n    id: \"1102-106\",\r\n    name: \"Crypte cuisante\",\r\n    sector_id: 1295,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6270.58,\r\n        13138.5\r\n    ]\r\n}, {\r\n    id: \"1143-106\",\r\n    name: \"Crypte torride\",\r\n    sector_id: 1298,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13438.6,\r\n        12498.5\r\n    ]\r\n}, {\r\n    id: \"1099-107\",\r\n    name: \"- Frontière\",\r\n    sector_id: 1311,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        12022.5,\r\n        11789.9\r\n    ]\r\n}, {\r\n    id: \"1102-107\",\r\n    name: \"- Frontière\",\r\n    sector_id: 1310,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8438.49,\r\n        14349.9\r\n    ]\r\n}, {\r\n    id: \"1143-107\",\r\n    name: \"- Frontière\",\r\n    sector_id: 1349,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15606.5,\r\n        13709.9\r\n    ]\r\n}, {\r\n    id: \"1099-108\",\r\n    name: \"- Frontière\",\r\n    sector_id: 1350,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9641.7,\r\n        11749.6\r\n    ]\r\n}, {\r\n    id: \"1102-108\",\r\n    name: \"- Frontière\",\r\n    sector_id: 1359,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6057.7,\r\n        14309.6\r\n    ]\r\n}, {\r\n    id: \"1143-108\",\r\n    name: \"- Frontière\",\r\n    sector_id: 1285,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13225.7,\r\n        13669.6\r\n    ]\r\n}, {\r\n    id: \"1099-109\",\r\n    name: \"Refuge de Roy\",\r\n    sector_id: 1322,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11954.6,\r\n        10068.5\r\n    ]\r\n}, {\r\n    id: \"1102-109\",\r\n    name: \"Refuge de Norfolk\",\r\n    sector_id: 1290,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8370.6,\r\n        12628.5\r\n    ]\r\n}, {\r\n    id: \"1143-109\",\r\n    name: \"Refuge d'Olivier\",\r\n    sector_id: 1304,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15538.6,\r\n        11988.5\r\n    ]\r\n}, {\r\n    id: \"1099-110\",\r\n    name: \"Avant-poste dévasté\",\r\n    sector_id: 1277,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10255,\r\n        11576\r\n    ]\r\n}, {\r\n    id: \"1102-110\",\r\n    name: \"Avant-poste ravagé\",\r\n    sector_id: 1283,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6671.05,\r\n        14136\r\n    ]\r\n}, {\r\n    id: \"1143-110\",\r\n    name: \"Avant-poste délabré\",\r\n    sector_id: 1328,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13839,\r\n        13496\r\n    ]\r\n}, {\r\n    id: \"1099-113\",\r\n    name: \"Rempart stoïque\",\r\n    sector_id: 1303,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10812.3,\r\n        10102.9\r\n    ]\r\n}, {\r\n    id: \"1102-113\",\r\n    name: \"Rempart impassible\",\r\n    sector_id: 1318,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7228.32,\r\n        12662.9\r\n    ]\r\n}, {\r\n    id: \"1143-113\",\r\n    name: \"Rempart durci\",\r\n    sector_id: 1293,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14396.3,\r\n        12022.9\r\n    ]\r\n}, {\r\n    id: \"1099-114\",\r\n    name: \"Palais du balbuzard\",\r\n    sector_id: 1300,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        11788,\r\n        10660.2\r\n    ]\r\n}, {\r\n    id: \"1102-114\",\r\n    name: \"Palais du circaète\",\r\n    sector_id: 1287,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        8204,\r\n        13220.2\r\n    ]\r\n}, {\r\n    id: \"1143-114\",\r\n    name: \"Palais de la pie-grièche\",\r\n    sector_id: 1356,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        15372,\r\n        12580.2\r\n    ]\r\n}, {\r\n    id: \"1099-115\",\r\n    name: \"Antre de Boettiger\",\r\n    sector_id: 1316,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        9585.9,\r\n        10037.1\r\n    ]\r\n}, {\r\n    id: \"1102-115\",\r\n    name: \"Antre de Hughe\",\r\n    sector_id: 1324,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        6001.9,\r\n        12597.1\r\n    ]\r\n}, {\r\n    id: \"1143-115\",\r\n    name: \"Antre de Berdrow\",\r\n    sector_id: 1357,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        13169.9,\r\n        11957.1\r\n    ]\r\n}, {\r\n    id: \"1099-116\",\r\n    name: \"Puits du Souffle-poussière\",\r\n    sector_id: 1296,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10773.3,\r\n        11652.5\r\n    ]\r\n}, {\r\n    id: \"1102-116\",\r\n    name: \"Puits du Rêve-brisé\",\r\n    sector_id: 1338,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7189.29,\r\n        14212.5\r\n    ]\r\n}, {\r\n    id: \"1143-116\",\r\n    name: \"Puits du Dernier-soupir\",\r\n    sector_id: 1301,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14357.3,\r\n        13572.5\r\n    ]\r\n}, {\r\n    id: \"1099-117\",\r\n    name: \"- Citadelle\",\r\n    sector_id: 1343,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 1099,\r\n    coord: [\r\n        10590.2,\r\n        9169.19\r\n    ]\r\n}, {\r\n    id: \"1102-117\",\r\n    name: \"- Citadelle\",\r\n    sector_id: 1315,\r\n    type: \"Spawn\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 1102,\r\n    coord: [\r\n        7006.19,\r\n        11729.2\r\n    ]\r\n}, {\r\n    id: \"1143-117\",\r\n    name: \"- Citadelle\",\r\n    sector_id: 1279,\r\n    type: \"Spawn\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 1143,\r\n    coord: [\r\n        14174.2,\r\n        11089.2\r\n    ]\r\n}, {\r\n    id: \"95-48\",\r\n    name: \"Saut de la Foi\",\r\n    sector_id: 1010,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-11\",\r\n    name: \"Corniche d'Aldon\",\r\n    sector_id: 882,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9417.39,\r\n        14790.7\r\n    ]\r\n}, {\r\n    id: \"95-43\",\r\n    name: \"Pavillon du Héros\",\r\n    sector_id: 1004,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-62\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-31\",\r\n    name: \"Baie de l'Ascension\",\r\n    sector_id: 973,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-29\",\r\n    name: \"Le Heaume spirituel\",\r\n    sector_id: 978,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-1\",\r\n    name: \"- Belvédère\",\r\n    sector_id: 843,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10698.4,\r\n        13761\r\n    ]\r\n}, {\r\n    id: \"38-15\",\r\n    name: \"Ravin de Langor\",\r\n    sector_id: 887,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11465.3,\r\n        15569.6\r\n    ]\r\n}, {\r\n    id: \"38-3\",\r\n    name: \"- Basses terres\",\r\n    sector_id: 848,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9840.25,\r\n        14983.6\r\n    ]\r\n}, {\r\n    id: \"38-17\",\r\n    name: \"Faille de Mendon\",\r\n    sector_id: 890,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10192.7,\r\n        13410.8\r\n    ]\r\n}, {\r\n    id: \"94-35\",\r\n    name: \"Vert-bruyère\",\r\n    sector_id: 964,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-7\",\r\n    name: \"Passage Danelon\",\r\n    sector_id: 837,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10996.4,\r\n        15545.8\r\n    ]\r\n}, {\r\n    id: \"96-27\",\r\n    name: \"- Garnison\",\r\n    sector_id: 976,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-103\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-30\",\r\n    name: \"Boisrefuge\",\r\n    sector_id: 988,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-41\",\r\n    name: \"Collines Shadaran\",\r\n    sector_id: 996,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-32\",\r\n    name: \"Collines d'Etheron\",\r\n    sector_id: 962,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-56\",\r\n    name: \"Bras du Titan\",\r\n    sector_id: 998,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-75\",\r\n    name: \"Lac de Maldémon\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-9\",\r\n    name: \"Château Brumepierre\",\r\n    sector_id: 833,\r\n    type: \"Castle\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10627.3,\r\n        14501.3\r\n    ]\r\n}, {\r\n    id: \"95-57\",\r\n    name: \"Sommet de Hautcrag\",\r\n    sector_id: 1006,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-5\",\r\n    name: \"Montée de Pangloss\",\r\n    sector_id: 846,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11201.6,\r\n        13718.4\r\n    ]\r\n}, {\r\n    id: \"94-33\",\r\n    name: \"Baie des rêves\",\r\n    sector_id: 957,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"95-42\",\r\n    name: \"Lac rouge\",\r\n    sector_id: 1008,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-21\",\r\n    name: \"Ravin de Durios\",\r\n    sector_id: 888,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11207.1,\r\n        14595\r\n    ]\r\n}, {\r\n    id: \"95-54\",\r\n    name: \"Havre gris\",\r\n    sector_id: 995,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-55\",\r\n    name: \"Basses terres de Rubicon\",\r\n    sector_id: 1003,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-26\",\r\n    name: \"Lac vert\",\r\n    sector_id: 989,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-20\",\r\n    name: \"Flanc de Veloka\",\r\n    sector_id: 891,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11017.4,\r\n        13414.4\r\n    ]\r\n}, {\r\n    id: \"95-44\",\r\n    name: \"Baie du Noir déclin\",\r\n    sector_id: 999,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-45\",\r\n    name: \"Bruyazur\",\r\n    sector_id: 1009,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-14\",\r\n    name: \"Petit ravin de Klovan\",\r\n    sector_id: 884,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10219.5,\r\n        15107.6\r\n    ]\r\n}, {\r\n    id: \"38-13\",\r\n    name: \"Bourbier de Jerrifer\",\r\n    sector_id: 883,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9757.06,\r\n        15467.8\r\n    ]\r\n}, {\r\n    id: \"94-65\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-38\",\r\n    name: \"Longuevue\",\r\n    sector_id: 955,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-6\",\r\n    name: \"Forêt rasée de Speldan\",\r\n    sector_id: 844,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9739.81,\r\n        13586.9\r\n    ]\r\n}, {\r\n    id: \"94-39\",\r\n    name: \"L'Epée divine\",\r\n    sector_id: 953,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-64\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-37\",\r\n    name: \"- Garnison\",\r\n    sector_id: 952,\r\n    type: \"Keep\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-2\",\r\n    name: \"- Vallée\",\r\n    sector_id: 834,\r\n    type: \"Keep\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11268.9,\r\n        15087.7\r\n    ]\r\n}, {\r\n    id: \"95-47\",\r\n    name: \"Colline ensoleillée\",\r\n    sector_id: 1007,\r\n    type: \"Tower\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-67\",\r\n    name: \"Lac Diablecœur\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-68\",\r\n    name: \"Lac Diablecœur\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-53\",\r\n    name: \"Refuge de Valvert\",\r\n    sector_id: 971,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-12\",\r\n    name: \"Piste du ruisseau sauvage\",\r\n    sector_id: 885,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9958.23,\r\n        14605.7\r\n    ]\r\n}, {\r\n    id: \"96-25\",\r\n    name: \"Bruyerouge\",\r\n    sector_id: 990,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-111\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-112\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Spawn\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-71\",\r\n    name: \"Lac Diablecœur\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-46\",\r\n    name: \"- Garnison\",\r\n    sector_id: 992,\r\n    type: \"Keep\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-52\",\r\n    name: \"Espoir d'Arah\",\r\n    sector_id: 956,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-16\",\r\n    name: \"Lac Quentin\",\r\n    sector_id: 889,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10951.8,\r\n        15121.2\r\n    ]\r\n}, {\r\n    id: \"38-22\",\r\n    name: \"Falaise de Bravost\",\r\n    sector_id: 886,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11750.2,\r\n        14859.4\r\n    ]\r\n}, {\r\n    id: \"95-49\",\r\n    name: \"Refuge de Bleuval\",\r\n    sector_id: 1005,\r\n    type: \"Camp\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-19\",\r\n    name: \"Percée de Gardogre\",\r\n    sector_id: 892,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10965,\r\n        13951\r\n    ]\r\n}, {\r\n    id: \"95-76\",\r\n    name: \"Lac de Maldémon\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"95-73\",\r\n    name: \"Lac de Maldémon\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"94-51\",\r\n    name: \"Heaume astral\",\r\n    sector_id: 960,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-66\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-4\",\r\n    name: \"Clairière de Golanta\",\r\n    sector_id: 849,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10198.9,\r\n        15520.2\r\n    ]\r\n}, {\r\n    id: \"94-34\",\r\n    name: \"Pavillon du Vainqueur\",\r\n    sector_id: 963,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-28\",\r\n    name: \"Repaire de l'aube\",\r\n    sector_id: 987,\r\n    type: \"Tower\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-59\",\r\n    name: \"Refuge de Valrouge\",\r\n    sector_id: 985,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-36\",\r\n    name: \"Lac bleu\",\r\n    sector_id: 965,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"94-50\",\r\n    name: \"Basses terres d'Eau-Azur\",\r\n    sector_id: 972,\r\n    type: \"Camp\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"38-8\",\r\n    name: \"Bois d'Ombreclair\",\r\n    sector_id: 835,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        11680.9,\r\n        14353.6\r\n    ]\r\n}, {\r\n    id: \"94-63\",\r\n    name: \"Lac Maletranse\",\r\n    sector_id: 958,\r\n    type: \"Ruins\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-70\",\r\n    name: \"Lac Diablecœur\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-69\",\r\n    name: \"Lac Diablecœur\",\r\n    sector_id: 975,\r\n    type: \"Ruins\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-60\",\r\n    name: \"Bosquet étoilé\",\r\n    sector_id: 986,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"94-40\",\r\n    name: \"Flanc de falaise\",\r\n    sector_id: 959,\r\n    type: \"Tower\",\r\n    map_type: \"RedHome\",\r\n    map_id: 94\r\n}, {\r\n    id: \"96-61\",\r\n    name: \"Basses terres d'Eau-Verdoyante\",\r\n    sector_id: 983,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"96-23\",\r\n    name: \"Collines d'Askalion\",\r\n    sector_id: 979,\r\n    type: \"Keep\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"95-74\",\r\n    name: \"Lac de Maldémon\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"38-10\",\r\n    name: \"Carrière du voleur\",\r\n    sector_id: 851,\r\n    type: \"Camp\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        9612.54,\r\n        14462.8\r\n    ]\r\n}, {\r\n    id: \"96-24\",\r\n    name: \"Fief du Champion\",\r\n    sector_id: 984,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"38-18\",\r\n    name: \"Col d'Anzalias\",\r\n    sector_id: 893,\r\n    type: \"Tower\",\r\n    map_type: \"Center\",\r\n    map_id: 38,\r\n    coord: [\r\n        10243.3,\r\n        13974.4\r\n    ]\r\n}, {\r\n    id: \"95-72\",\r\n    name: \"Lac de Maldémon\",\r\n    sector_id: 994,\r\n    type: \"Ruins\",\r\n    map_type: \"GreenHome\",\r\n    map_id: 95\r\n}, {\r\n    id: \"96-58\",\r\n    name: \"Savoir divin\",\r\n    sector_id: 991,\r\n    type: \"Camp\",\r\n    map_type: \"BlueHome\",\r\n    map_id: 96\r\n}, {\r\n    id: \"968-98\",\r\n    name: \"Tunnel de guivre\",\r\n    sector_id: 1156,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6750.92,\r\n        10211.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/087491CDD56F7FB998C332360D32FD26A8B2A99D/730428.png\"\r\n}, {\r\n    id: \"968-96\",\r\n    name: \"Aéroport\",\r\n    sector_id: 1153,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7054.16,\r\n        10421\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/ACCCB1BD617598C0EA9C756EADE53DF36C2578EC/730427.png\"\r\n}, {\r\n    id: \"968-82\",\r\n    name: \"Réacteur de Tonnecrevasse\",\r\n    sector_id: 1168,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8282.77,\r\n        10425.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-93\",\r\n    name: \"Forge\",\r\n    sector_id: 1154,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8223.64,\r\n        10692.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D1AB541FC3BE12AC5BBB020212BEBE3F5C0C4315/730415.png\"\r\n}, {\r\n    id: \"968-80\",\r\n    name: \"Réacteur du Temple surdimensionné\",\r\n    sector_id: 1162,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7513.83,\r\n        9059.96\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-94\",\r\n    name: \"Sanctuaire\",\r\n    sector_id: 1164,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8614.89,\r\n        10246.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B5709941B0352FD4CA3B7AFDA42873D8EFDB15AD/730414.png\"\r\n}, {\r\n    id: \"968-90\",\r\n    name: \"Autel\",\r\n    sector_id: 1160,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7240.66,\r\n        9253.9\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/DC01EC41D8809B59B85BEEDC45E9556D730BD21A/730413.png\"\r\n}, {\r\n    id: \"968-97\",\r\n    name: \"Atelier\",\r\n    sector_id: 1152,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6837.6,\r\n        10845.1\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/B34C2E3D0F34FD03F44BB5ED4E18DCDD0059A5C4/730429.png\"\r\n}, {\r\n    id: \"968-81\",\r\n    name: \"Réacteur de la Forteresse aride\",\r\n    sector_id: 1163,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6823.83,\r\n        10479.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-83\",\r\n    name: \"Réacteur du Pic de Pierregard\",\r\n    sector_id: 1167,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7249.21,\r\n        9763.87\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-95\",\r\n    name: \"Clocher\",\r\n    sector_id: 1173,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8180.68,\r\n        10325.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D4180774DD03A4BC7252B952680E451F16679A72/730410.png\"\r\n}, {\r\n    id: \"968-91\",\r\n    name: \"Observatoire\",\r\n    sector_id: 1158,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7953.67,\r\n        9062.79\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/015CF16C78DFDAD742E1A5613FB74B6463BF4A70/730411.png\"\r\n}, {\r\n    id: \"968-78\",\r\n    name: \"Temple surdimensionné\",\r\n    sector_id: 1161,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7606.7,\r\n        8882.14\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-88\",\r\n    name: \"Forteresse aride\",\r\n    sector_id: 1157,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        6442.17,\r\n        10881.8\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-89\",\r\n    name: \"Perchoir de Tytone\",\r\n    sector_id: 1172,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7884.81,\r\n        9809.2\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-79\",\r\n    name: \"Tonnecrevasse\",\r\n    sector_id: 1169,\r\n    type: \"Keep\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        8506.75,\r\n        10824.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/9615D975B16C2CF46AF6B20E2541CED993EFA1EE/730409.png\"\r\n}, {\r\n    id: \"968-85\",\r\n    name: \"Réacteur du Perchoir de Tytone\",\r\n    sector_id: 1165,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7852.89,\r\n        9855.56\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-77\",\r\n    name: \"Aiguille infernale\",\r\n    sector_id: 1171,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7504.84,\r\n        10598.5\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-87\",\r\n    name: \"Pic de Pierregard\",\r\n    sector_id: 1170,\r\n    type: \"Tower\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7164.46,\r\n        9805.15\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/D73DBE6D90140DC127F1DFBD90ACB77EE8701370/730416.png\"\r\n}, {\r\n    id: \"968-84\",\r\n    name: \"Réacteur de l'Aiguille infernale\",\r\n    sector_id: 1166,\r\n    type: \"Resource\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7581.91,\r\n        10316.4\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/E89AAD28DA43D545D7E3681499049CB73C0E2FEE/102650.png\"\r\n}, {\r\n    id: \"968-92\",\r\n    name: \"Statue\",\r\n    sector_id: 1159,\r\n    type: \"Generic\",\r\n    map_type: \"EdgeOfTheMists\",\r\n    map_id: 968,\r\n    coord: [\r\n        7553.12,\r\n        9360.16\r\n    ],\r\n    marker: \"https://render.guildwars2.com/file/4C0113B6DF2E4E2CBB93244AD50DA49456D5014E/730412.png\"\r\n}];\r\n","module.exports = {\r\n\t\"1001\": {\r\n\t\t\"id\": \"1001\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Ambossfels\",\r\n\t\t\t\"slug\": \"ambossfels\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Anvil Rock\",\r\n\t\t\t\"slug\": \"anvil-rock\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Roca del Yunque\",\r\n\t\t\t\"slug\": \"roca-del-yunque\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Rocher de l'enclume\",\r\n\t\t\t\"slug\": \"rocher-de-lenclume\"\r\n\t\t}\r\n\t},\r\n\t\"1002\": {\r\n\t\t\"id\": \"1002\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Borlis-Pass\",\r\n\t\t\t\"slug\": \"borlis-pass\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Borlis Pass\",\r\n\t\t\t\"slug\": \"borlis-pass\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Paso de Borlis\",\r\n\t\t\t\"slug\": \"paso-de-borlis\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Passage de Borlis\",\r\n\t\t\t\"slug\": \"passage-de-borlis\"\r\n\t\t}\r\n\t},\r\n\t\"1003\": {\r\n\t\t\"id\": \"1003\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Jakbiegung\",\r\n\t\t\t\"slug\": \"jakbiegung\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Yak's Bend\",\r\n\t\t\t\"slug\": \"yaks-bend\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Declive del Yak\",\r\n\t\t\t\"slug\": \"declive-del-yak\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Courbe du Yak\",\r\n\t\t\t\"slug\": \"courbe-du-yak\"\r\n\t\t}\r\n\t},\r\n\t\"1004\": {\r\n\t\t\"id\": \"1004\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Denravis Erdwerk\",\r\n\t\t\t\"slug\": \"denravis-erdwerk\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Henge of Denravi\",\r\n\t\t\t\"slug\": \"henge-of-denravi\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Círculo de Denravi\",\r\n\t\t\t\"slug\": \"circulo-de-denravi\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Cromlech de Denravi\",\r\n\t\t\t\"slug\": \"cromlech-de-denravi\"\r\n\t\t}\r\n\t},\r\n\t\"1005\": {\r\n\t\t\"id\": \"1005\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Maguuma\",\r\n\t\t\t\"slug\": \"maguuma\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Maguuma\",\r\n\t\t\t\"slug\": \"maguuma\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Maguuma\",\r\n\t\t\t\"slug\": \"maguuma\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Maguuma\",\r\n\t\t\t\"slug\": \"maguuma\"\r\n\t\t}\r\n\t},\r\n\t\"1006\": {\r\n\t\t\"id\": \"1006\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Hochofen der Betrübnis\",\r\n\t\t\t\"slug\": \"hochofen-der-betrubnis\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Sorrow's Furnace\",\r\n\t\t\t\"slug\": \"sorrows-furnace\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Fragua del Pesar\",\r\n\t\t\t\"slug\": \"fragua-del-pesar\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Fournaise des lamentations\",\r\n\t\t\t\"slug\": \"fournaise-des-lamentations\"\r\n\t\t}\r\n\t},\r\n\t\"1007\": {\r\n\t\t\"id\": \"1007\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Tor des Irrsinns\",\r\n\t\t\t\"slug\": \"tor-des-irrsinns\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Gate of Madness\",\r\n\t\t\t\"slug\": \"gate-of-madness\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Puerta de la Locura\",\r\n\t\t\t\"slug\": \"puerta-de-la-locura\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Porte de la folie\",\r\n\t\t\t\"slug\": \"porte-de-la-folie\"\r\n\t\t}\r\n\t},\r\n\t\"1008\": {\r\n\t\t\"id\": \"1008\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Jade-Steinbruch\",\r\n\t\t\t\"slug\": \"jade-steinbruch\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Jade Quarry\",\r\n\t\t\t\"slug\": \"jade-quarry\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Cantera de Jade\",\r\n\t\t\t\"slug\": \"cantera-de-jade\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Carrière de jade\",\r\n\t\t\t\"slug\": \"carriere-de-jade\"\r\n\t\t}\r\n\t},\r\n\t\"1009\": {\r\n\t\t\"id\": \"1009\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Fort Espenwald\",\r\n\t\t\t\"slug\": \"fort-espenwald\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Fort Aspenwood\",\r\n\t\t\t\"slug\": \"fort-aspenwood\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Fuerte Aspenwood\",\r\n\t\t\t\"slug\": \"fuerte-aspenwood\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Fort Trembleforêt\",\r\n\t\t\t\"slug\": \"fort-trembleforet\"\r\n\t\t}\r\n\t},\r\n\t\"1010\": {\r\n\t\t\"id\": \"1010\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Ehmry-Bucht\",\r\n\t\t\t\"slug\": \"ehmry-bucht\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Ehmry Bay\",\r\n\t\t\t\"slug\": \"ehmry-bay\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Bahía de Ehmry\",\r\n\t\t\t\"slug\": \"bahia-de-ehmry\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Baie d'Ehmry\",\r\n\t\t\t\"slug\": \"baie-dehmry\"\r\n\t\t}\r\n\t},\r\n\t\"1011\": {\r\n\t\t\"id\": \"1011\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Sturmklippen-Insel\",\r\n\t\t\t\"slug\": \"sturmklippen-insel\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Stormbluff Isle\",\r\n\t\t\t\"slug\": \"stormbluff-isle\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Isla Cimatormenta\",\r\n\t\t\t\"slug\": \"isla-cimatormenta\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Ile de la Falaise tumultueuse\",\r\n\t\t\t\"slug\": \"ile-de-la-falaise-tumultueuse\"\r\n\t\t}\r\n\t},\r\n\t\"1012\": {\r\n\t\t\"id\": \"1012\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Finsterfreistatt\",\r\n\t\t\t\"slug\": \"finsterfreistatt\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Darkhaven\",\r\n\t\t\t\"slug\": \"darkhaven\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Refugio Oscuro\",\r\n\t\t\t\"slug\": \"refugio-oscuro\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Refuge noir\",\r\n\t\t\t\"slug\": \"refuge-noir\"\r\n\t\t}\r\n\t},\r\n\t\"1013\": {\r\n\t\t\"id\": \"1013\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Heilige Halle von Rall\",\r\n\t\t\t\"slug\": \"heilige-halle-von-rall\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Sanctum of Rall\",\r\n\t\t\t\"slug\": \"sanctum-of-rall\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Sagrario de Rall\",\r\n\t\t\t\"slug\": \"sagrario-de-rall\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Sanctuaire de Rall\",\r\n\t\t\t\"slug\": \"sanctuaire-de-rall\"\r\n\t\t}\r\n\t},\r\n\t\"1014\": {\r\n\t\t\"id\": \"1014\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Kristallwüste\",\r\n\t\t\t\"slug\": \"kristallwuste\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Crystal Desert\",\r\n\t\t\t\"slug\": \"crystal-desert\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Desierto de Cristal\",\r\n\t\t\t\"slug\": \"desierto-de-cristal\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Désert de cristal\",\r\n\t\t\t\"slug\": \"desert-de-cristal\"\r\n\t\t}\r\n\t},\r\n\t\"1015\": {\r\n\t\t\"id\": \"1015\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Janthir-Insel\",\r\n\t\t\t\"slug\": \"janthir-insel\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Isle of Janthir\",\r\n\t\t\t\"slug\": \"isle-of-janthir\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Isla de Janthir\",\r\n\t\t\t\"slug\": \"isla-de-janthir\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Ile de Janthir\",\r\n\t\t\t\"slug\": \"ile-de-janthir\"\r\n\t\t}\r\n\t},\r\n\t\"1016\": {\r\n\t\t\"id\": \"1016\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Meer des Leids\",\r\n\t\t\t\"slug\": \"meer-des-leids\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Sea of Sorrows\",\r\n\t\t\t\"slug\": \"sea-of-sorrows\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"El Mar de los Pesares\",\r\n\t\t\t\"slug\": \"el-mar-de-los-pesares\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Mer des lamentations\",\r\n\t\t\t\"slug\": \"mer-des-lamentations\"\r\n\t\t}\r\n\t},\r\n\t\"1017\": {\r\n\t\t\"id\": \"1017\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Befleckte Küste\",\r\n\t\t\t\"slug\": \"befleckte-kuste\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Tarnished Coast\",\r\n\t\t\t\"slug\": \"tarnished-coast\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Costa de Bronce\",\r\n\t\t\t\"slug\": \"costa-de-bronce\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Côte ternie\",\r\n\t\t\t\"slug\": \"cote-ternie\"\r\n\t\t}\r\n\t},\r\n\t\"1018\": {\r\n\t\t\"id\": \"1018\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Nördliche Zittergipfel\",\r\n\t\t\t\"slug\": \"nordliche-zittergipfel\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Northern Shiverpeaks\",\r\n\t\t\t\"slug\": \"northern-shiverpeaks\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Picosescalofriantes del Norte\",\r\n\t\t\t\"slug\": \"picosescalofriantes-del-norte\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Cimefroides nordiques\",\r\n\t\t\t\"slug\": \"cimefroides-nordiques\"\r\n\t\t}\r\n\t},\r\n\t\"1019\": {\r\n\t\t\"id\": \"1019\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Schwarztor\",\r\n\t\t\t\"slug\": \"schwarztor\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Blackgate\",\r\n\t\t\t\"slug\": \"blackgate\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Puertanegra\",\r\n\t\t\t\"slug\": \"puertanegra\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Portenoire\",\r\n\t\t\t\"slug\": \"portenoire\"\r\n\t\t}\r\n\t},\r\n\t\"1020\": {\r\n\t\t\"id\": \"1020\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Fergusons Kreuzung\",\r\n\t\t\t\"slug\": \"fergusons-kreuzung\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Ferguson's Crossing\",\r\n\t\t\t\"slug\": \"fergusons-crossing\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Encrucijada de Ferguson\",\r\n\t\t\t\"slug\": \"encrucijada-de-ferguson\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Croisée de Ferguson\",\r\n\t\t\t\"slug\": \"croisee-de-ferguson\"\r\n\t\t}\r\n\t},\r\n\t\"1021\": {\r\n\t\t\"id\": \"1021\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Drachenbrand\",\r\n\t\t\t\"slug\": \"drachenbrand\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Dragonbrand\",\r\n\t\t\t\"slug\": \"dragonbrand\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Marca del Dragón\",\r\n\t\t\t\"slug\": \"marca-del-dragon\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Stigmate du dragon\",\r\n\t\t\t\"slug\": \"stigmate-du-dragon\"\r\n\t\t}\r\n\t},\r\n\t\"1022\": {\r\n\t\t\"id\": \"1022\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Kaineng\",\r\n\t\t\t\"slug\": \"kaineng\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Kaineng\",\r\n\t\t\t\"slug\": \"kaineng\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Kaineng\",\r\n\t\t\t\"slug\": \"kaineng\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Kaineng\",\r\n\t\t\t\"slug\": \"kaineng\"\r\n\t\t}\r\n\t},\r\n\t\"1023\": {\r\n\t\t\"id\": \"1023\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Devonas Rast\",\r\n\t\t\t\"slug\": \"devonas-rast\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Devona's Rest\",\r\n\t\t\t\"slug\": \"devonas-rest\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Descanso de Devona\",\r\n\t\t\t\"slug\": \"descanso-de-devona\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Repos de Devona\",\r\n\t\t\t\"slug\": \"repos-de-devona\"\r\n\t\t}\r\n\t},\r\n\t\"1024\": {\r\n\t\t\"id\": \"1024\",\r\n\t\t\"region\": \"1\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Eredon-Terrasse\",\r\n\t\t\t\"slug\": \"eredon-terrasse\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Eredon Terrace\",\r\n\t\t\t\"slug\": \"eredon-terrace\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Terraza de Eredon\",\r\n\t\t\t\"slug\": \"terraza-de-eredon\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Plateau d'Eredon\",\r\n\t\t\t\"slug\": \"plateau-deredon\"\r\n\t\t}\r\n\t},\r\n\t\"2001\": {\r\n\t\t\"id\": \"2001\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Klagenriss\",\r\n\t\t\t\"slug\": \"klagenriss\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Fissure of Woe\",\r\n\t\t\t\"slug\": \"fissure-of-woe\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Fisura de la Aflicción\",\r\n\t\t\t\"slug\": \"fisura-de-la-afliccion\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Fissure du malheur\",\r\n\t\t\t\"slug\": \"fissure-du-malheur\"\r\n\t\t}\r\n\t},\r\n\t\"2002\": {\r\n\t\t\"id\": \"2002\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Ödnis\",\r\n\t\t\t\"slug\": \"odnis\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Desolation\",\r\n\t\t\t\"slug\": \"desolation\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Desolación\",\r\n\t\t\t\"slug\": \"desolacion\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Désolation\",\r\n\t\t\t\"slug\": \"desolation\"\r\n\t\t}\r\n\t},\r\n\t\"2003\": {\r\n\t\t\"id\": \"2003\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Gandara\",\r\n\t\t\t\"slug\": \"gandara\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Gandara\",\r\n\t\t\t\"slug\": \"gandara\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Gandara\",\r\n\t\t\t\"slug\": \"gandara\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Gandara\",\r\n\t\t\t\"slug\": \"gandara\"\r\n\t\t}\r\n\t},\r\n\t\"2004\": {\r\n\t\t\"id\": \"2004\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Schwarzflut\",\r\n\t\t\t\"slug\": \"schwarzflut\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Blacktide\",\r\n\t\t\t\"slug\": \"blacktide\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Marea Negra\",\r\n\t\t\t\"slug\": \"marea-negra\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Noirflot\",\r\n\t\t\t\"slug\": \"noirflot\"\r\n\t\t}\r\n\t},\r\n\t\"2005\": {\r\n\t\t\"id\": \"2005\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Feuerring\",\r\n\t\t\t\"slug\": \"feuerring\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Ring of Fire\",\r\n\t\t\t\"slug\": \"ring-of-fire\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Anillo de Fuego\",\r\n\t\t\t\"slug\": \"anillo-de-fuego\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Cercle de feu\",\r\n\t\t\t\"slug\": \"cercle-de-feu\"\r\n\t\t}\r\n\t},\r\n\t\"2006\": {\r\n\t\t\"id\": \"2006\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Unterwelt\",\r\n\t\t\t\"slug\": \"unterwelt\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Underworld\",\r\n\t\t\t\"slug\": \"underworld\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Inframundo\",\r\n\t\t\t\"slug\": \"inframundo\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Outre-monde\",\r\n\t\t\t\"slug\": \"outre-monde\"\r\n\t\t}\r\n\t},\r\n\t\"2007\": {\r\n\t\t\"id\": \"2007\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Ferne Zittergipfel\",\r\n\t\t\t\"slug\": \"ferne-zittergipfel\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Far Shiverpeaks\",\r\n\t\t\t\"slug\": \"far-shiverpeaks\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Lejanas Picosescalofriantes\",\r\n\t\t\t\"slug\": \"lejanas-picosescalofriantes\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Lointaines Cimefroides\",\r\n\t\t\t\"slug\": \"lointaines-cimefroides\"\r\n\t\t}\r\n\t},\r\n\t\"2008\": {\r\n\t\t\"id\": \"2008\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Weißflankgrat\",\r\n\t\t\t\"slug\": \"weissflankgrat\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Whiteside Ridge\",\r\n\t\t\t\"slug\": \"whiteside-ridge\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Cadena Laderablanca\",\r\n\t\t\t\"slug\": \"cadena-laderablanca\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Crête de Verseblanc\",\r\n\t\t\t\"slug\": \"crete-de-verseblanc\"\r\n\t\t}\r\n\t},\r\n\t\"2009\": {\r\n\t\t\"id\": \"2009\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Ruinen von Surmia\",\r\n\t\t\t\"slug\": \"ruinen-von-surmia\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Ruins of Surmia\",\r\n\t\t\t\"slug\": \"ruins-of-surmia\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Ruinas de Surmia\",\r\n\t\t\t\"slug\": \"ruinas-de-surmia\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Ruines de Surmia\",\r\n\t\t\t\"slug\": \"ruines-de-surmia\"\r\n\t\t}\r\n\t},\r\n\t\"2010\": {\r\n\t\t\"id\": \"2010\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Seemannsrast\",\r\n\t\t\t\"slug\": \"seemannsrast\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Seafarer's Rest\",\r\n\t\t\t\"slug\": \"seafarers-rest\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Refugio del Viajante\",\r\n\t\t\t\"slug\": \"refugio-del-viajante\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Repos du Marin\",\r\n\t\t\t\"slug\": \"repos-du-marin\"\r\n\t\t}\r\n\t},\r\n\t\"2011\": {\r\n\t\t\"id\": \"2011\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Vabbi\",\r\n\t\t\t\"slug\": \"vabbi\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Vabbi\",\r\n\t\t\t\"slug\": \"vabbi\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Vabbi\",\r\n\t\t\t\"slug\": \"vabbi\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Vabbi\",\r\n\t\t\t\"slug\": \"vabbi\"\r\n\t\t}\r\n\t},\r\n\t\"2012\": {\r\n\t\t\"id\": \"2012\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Piken-Platz\",\r\n\t\t\t\"slug\": \"piken-platz\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Piken Square\",\r\n\t\t\t\"slug\": \"piken-square\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Plaza de Piken\",\r\n\t\t\t\"slug\": \"plaza-de-piken\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Place Piken\",\r\n\t\t\t\"slug\": \"place-piken\"\r\n\t\t}\r\n\t},\r\n\t\"2013\": {\r\n\t\t\"id\": \"2013\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Lichtung der Morgenröte\",\r\n\t\t\t\"slug\": \"lichtung-der-morgenrote\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Aurora Glade\",\r\n\t\t\t\"slug\": \"aurora-glade\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Claro de la Aurora\",\r\n\t\t\t\"slug\": \"claro-de-la-aurora\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Clairière de l'aurore\",\r\n\t\t\t\"slug\": \"clairiere-de-laurore\"\r\n\t\t}\r\n\t},\r\n\t\"2014\": {\r\n\t\t\"id\": \"2014\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Gunnars Feste\",\r\n\t\t\t\"slug\": \"gunnars-feste\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Gunnar's Hold\",\r\n\t\t\t\"slug\": \"gunnars-hold\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Fuerte de Gunnar\",\r\n\t\t\t\"slug\": \"fuerte-de-gunnar\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Campement de Gunnar\",\r\n\t\t\t\"slug\": \"campement-de-gunnar\"\r\n\t\t}\r\n\t},\r\n\t\"2101\": {\r\n\t\t\"id\": \"2101\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Jademeer [FR]\",\r\n\t\t\t\"slug\": \"jademeer-fr\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Jade Sea [FR]\",\r\n\t\t\t\"slug\": \"jade-sea-fr\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Mar de Jade [FR]\",\r\n\t\t\t\"slug\": \"mar-de-jade-fr\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Mer de Jade [FR]\",\r\n\t\t\t\"slug\": \"mer-de-jade-fr\"\r\n\t\t}\r\n\t},\r\n\t\"2102\": {\r\n\t\t\"id\": \"2102\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Fort Ranik [FR]\",\r\n\t\t\t\"slug\": \"fort-ranik-fr\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Fort Ranik [FR]\",\r\n\t\t\t\"slug\": \"fort-ranik-fr\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Fuerte Ranik [FR]\",\r\n\t\t\t\"slug\": \"fuerte-ranik-fr\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Fort Ranik [FR]\",\r\n\t\t\t\"slug\": \"fort-ranik-fr\"\r\n\t\t}\r\n\t},\r\n\t\"2103\": {\r\n\t\t\"id\": \"2103\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Augurenstein [FR]\",\r\n\t\t\t\"slug\": \"augurenstein-fr\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Augury Rock [FR]\",\r\n\t\t\t\"slug\": \"augury-rock-fr\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Roca del Augurio [FR]\",\r\n\t\t\t\"slug\": \"roca-del-augurio-fr\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Roche de l'Augure [FR]\",\r\n\t\t\t\"slug\": \"roche-de-laugure-fr\"\r\n\t\t}\r\n\t},\r\n\t\"2104\": {\r\n\t\t\"id\": \"2104\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Vizunah-Platz [FR]\",\r\n\t\t\t\"slug\": \"vizunah-platz-fr\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Vizunah Square [FR]\",\r\n\t\t\t\"slug\": \"vizunah-square-fr\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Plaza de Vizunah [FR]\",\r\n\t\t\t\"slug\": \"plaza-de-vizunah-fr\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Place de Vizunah [FR]\",\r\n\t\t\t\"slug\": \"place-de-vizunah-fr\"\r\n\t\t}\r\n\t},\r\n\t\"2105\": {\r\n\t\t\"id\": \"2105\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Laubenstein [FR]\",\r\n\t\t\t\"slug\": \"laubenstein-fr\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Arborstone [FR]\",\r\n\t\t\t\"slug\": \"arborstone-fr\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Piedra Arbórea [FR]\",\r\n\t\t\t\"slug\": \"piedra-arborea-fr\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Pierre Arborea [FR]\",\r\n\t\t\t\"slug\": \"pierre-arborea-fr\"\r\n\t\t}\r\n\t},\r\n\t\"2201\": {\r\n\t\t\"id\": \"2201\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Kodasch [DE]\",\r\n\t\t\t\"slug\": \"kodasch-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Kodash [DE]\",\r\n\t\t\t\"slug\": \"kodash-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Kodash [DE]\",\r\n\t\t\t\"slug\": \"kodash-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Kodash [DE]\",\r\n\t\t\t\"slug\": \"kodash-de\"\r\n\t\t}\r\n\t},\r\n\t\"2202\": {\r\n\t\t\"id\": \"2202\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Flussufer [DE]\",\r\n\t\t\t\"slug\": \"flussufer-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Riverside [DE]\",\r\n\t\t\t\"slug\": \"riverside-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Ribera [DE]\",\r\n\t\t\t\"slug\": \"ribera-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Provinces fluviales [DE]\",\r\n\t\t\t\"slug\": \"provinces-fluviales-de\"\r\n\t\t}\r\n\t},\r\n\t\"2203\": {\r\n\t\t\"id\": \"2203\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Elonafels [DE]\",\r\n\t\t\t\"slug\": \"elonafels-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Elona Reach [DE]\",\r\n\t\t\t\"slug\": \"elona-reach-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Cañón de Elona [DE]\",\r\n\t\t\t\"slug\": \"canon-de-elona-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Bief d'Elona [DE]\",\r\n\t\t\t\"slug\": \"bief-delona-de\"\r\n\t\t}\r\n\t},\r\n\t\"2204\": {\r\n\t\t\"id\": \"2204\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Abaddons Mund [DE]\",\r\n\t\t\t\"slug\": \"abaddons-mund-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Abaddon's Mouth [DE]\",\r\n\t\t\t\"slug\": \"abaddons-mouth-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Boca de Abaddon [DE]\",\r\n\t\t\t\"slug\": \"boca-de-abaddon-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Bouche d'Abaddon [DE]\",\r\n\t\t\t\"slug\": \"bouche-dabaddon-de\"\r\n\t\t}\r\n\t},\r\n\t\"2205\": {\r\n\t\t\"id\": \"2205\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Drakkar-See [DE]\",\r\n\t\t\t\"slug\": \"drakkar-see-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Drakkar Lake [DE]\",\r\n\t\t\t\"slug\": \"drakkar-lake-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Lago Drakkar [DE]\",\r\n\t\t\t\"slug\": \"lago-drakkar-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Lac Drakkar [DE]\",\r\n\t\t\t\"slug\": \"lac-drakkar-de\"\r\n\t\t}\r\n\t},\r\n\t\"2206\": {\r\n\t\t\"id\": \"2206\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Millersund [DE]\",\r\n\t\t\t\"slug\": \"millersund-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Miller's Sound [DE]\",\r\n\t\t\t\"slug\": \"millers-sound-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Estrecho de Miller [DE]\",\r\n\t\t\t\"slug\": \"estrecho-de-miller-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Détroit de Miller [DE]\",\r\n\t\t\t\"slug\": \"detroit-de-miller-de\"\r\n\t\t}\r\n\t},\r\n\t\"2207\": {\r\n\t\t\"id\": \"2207\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Dzagonur [DE]\",\r\n\t\t\t\"slug\": \"dzagonur-de\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Dzagonur [DE]\",\r\n\t\t\t\"slug\": \"dzagonur-de\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Dzagonur [DE]\",\r\n\t\t\t\"slug\": \"dzagonur-de\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Dzagonur [DE]\",\r\n\t\t\t\"slug\": \"dzagonur-de\"\r\n\t\t}\r\n\t},\r\n\t\"2301\": {\r\n\t\t\"id\": \"2301\",\r\n\t\t\"region\": \"2\",\r\n\t\t\"de\": {\r\n\t\t\t\"name\": \"Baruch-Bucht [SP]\",\r\n\t\t\t\"slug\": \"baruch-bucht-sp\"\r\n\t\t},\r\n\t\t\"en\": {\r\n\t\t\t\"name\": \"Baruch Bay [SP]\",\r\n\t\t\t\"slug\": \"baruch-bay-sp\"\r\n\t\t},\r\n\t\t\"es\": {\r\n\t\t\t\"name\": \"Bahía de Baruch [ES]\",\r\n\t\t\t\"slug\": \"bahia-de-baruch-es\"\r\n\t\t},\r\n\t\t\"fr\": {\r\n\t\t\t\"name\": \"Baie de Baruch [SP]\",\r\n\t\t\t\"slug\": \"baie-de-baruch-sp\"\r\n\t\t}\r\n\t},\r\n};\r\n","module.exports = {\r\n    langs: require('./data/langs'),\r\n    worlds: require('./data/world_names'),\r\n    objectives_v2: require('./data/objectives_v2'),\r\n    objective_names: require('./data/objective_names'),\r\n    objective_names: require('./data/objective_names'),\r\n    objective_types: require('./data/objective_types'),\r\n    objective_meta: require('./data/objective_meta'),\r\n    objective_labels: require('./data/objective_labels'),\r\n    objective_map: require('./data/objective_map'),\r\n};\r\n","/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n","\r\nimport React from 'react';\r\n\r\nimport MatchWorld from './MatchWorld';\r\n\r\nimport {worlds} from 'lib/static';\r\nconst WORLD_COLORS = ['red', 'blue', 'green'];\r\n\r\n\r\nexport default class Match extends React.Component {\r\n    static propTypes = {\r\n        lang: React.PropTypes.object.isRequired,\r\n        match: React.PropTypes.object.isRequired,\r\n    }\r\n\r\n\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return (\r\n            this.isNewMatchData(nextProps)\r\n            || this.isNewLang(nextProps)\r\n        );\r\n    }\r\n\r\n    isNewMatchData(nextProps) {\r\n        return (this.props.match.lastmod !== nextProps.match.lastmod);\r\n    }\r\n\r\n    isNewLang(nextProps) {\r\n        return (this.props.lang.name !== nextProps.lang.name);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {lang, match} = this.props;\r\n\r\n        return (\r\n            <div className='matchContainer'>\r\n                <table className='match'><tbody>\r\n                    {_.map(WORLD_COLORS, (color) => {\r\n                        const worldKey = color;\r\n                        const worldId  = match.worlds[worldKey];\r\n                        const world = worlds[worldId][lang.slug];\r\n\r\n                        return (\r\n                            <MatchWorld\r\n                                component = 'tr'\r\n                                key = {worldId}\r\n\r\n                                color = {color}\r\n                                match = {match}\r\n                                showPie = {color === 'red'}\r\n                                world = {world}\r\n                            />\r\n                        );\r\n                    })}\r\n                </tbody></table>\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nimport React from 'react';\r\n\r\nimport Pie from 'common/Icons/Pie';\r\n\r\n\r\n\r\n\r\nexport default ({\r\n    color,\r\n    match,\r\n    showPie,\r\n    world,\r\n}) =>  (\r\n    <tr>\r\n        <td className={`team name ${color}`}><a href={world.link}>{world.name}</a></td>\r\n        {/*<td className={`team kills ${color}`}>{match.kills ? numeral(match.kills[color]).format('0,0') : null}</td>*/}\r\n        {/*<td className={`team deaths ${color}`}>{match.deaths ? numeral(match.deaths[color]).format('0,0') : null}</td>*/}\r\n        <td className={`team score ${color}`}>{match.scores ? numeral(match.scores[color]).format('0,0') : null}</td>\r\n\r\n        {(showPie && match.scores) ? <td className='pie' rowSpan='3'><Pie scores={match.scores} size={60} /></td> : null}\r\n    </tr>\r\n);","\r\nimport React from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport Match from './Match';\r\n\r\n\r\nconst loadingHtml = <span style={{paddingLeft: '.5em'}}><i className='fa fa-spinner fa-spin' /></span>;\r\n\r\n\r\n\r\nexport default ({\r\n    lang,\r\n    matches,\r\n    region,\r\n}) => (\r\n    <div className='RegionMatches'>\r\n        <h2>\r\n            {region.label} Matches\r\n            {_.isEmpty(matches) ? loadingHtml : null}\r\n        </h2>\r\n\r\n        {_.chain(matches)\r\n            .sortBy('id')\r\n            .map(\r\n                (match) =>\r\n                <Match\r\n                    key={match.id}\r\n                    lang={lang}\r\n                    match={match}\r\n                />\r\n            )\r\n            .value()\r\n        }\r\n    </div>\r\n);","\r\nimport React from 'react';\r\n\r\nimport {worlds} from 'lib/static';\r\n\r\n\r\n\r\n\r\n/*\r\n*\r\n* Component Definition\r\n*\r\n*/\r\n\r\nexport default ({\r\n    lang,\r\n    region,\r\n}) => (\r\n    <div className='RegionWorlds'>\r\n        <h2>{region.label} Worlds</h2>\r\n        <ul className='list-unstyled'>\r\n            {_.chain(worlds)\r\n                .filter(world => world.region === region.id)\r\n                .map(world => world[lang.slug])\r\n                .sortBy('name')\r\n                .map(world => <li key={world.slug}><a href={world.link}>{world.name}</a></li>)\r\n                .value()\r\n            }\r\n        </ul>\r\n    </div>\r\n);","'use strict';\r\n\r\n/*\r\n*\r\n*   Dependencies\r\n*\r\n*/\r\n\r\nimport React from'react';\r\n\r\n\r\n/*\r\n*   Data\r\n*/\r\n\r\nimport DAO from 'lib/data/overview';\r\n\r\n\r\n/*\r\n*   React Components\r\n*/\r\n\r\nimport Matches from './Matches';\r\nimport Worlds from './Worlds';\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n*\r\n*   Component Globals\r\n*\r\n*/\r\n\r\n\r\nconst REGIONS = {\r\n    1: {label: 'NA', id: '1'},\r\n    2: {label: 'EU', id: '2'},\r\n};\r\n\r\n\r\n\r\n/*\r\n*\r\n*   Component Definition\r\n*\r\n*/\r\n\r\nclass Overview extends React.Component {\r\n    static propTypes = {\r\n        lang: React.PropTypes.object.isRequired,\r\n    }\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dao = new DAO({\r\n            onMatchData: this.onMatchData.bind(this),\r\n        });\r\n\r\n\r\n        this.state = {\r\n            matchData: {},\r\n        };\r\n    }\r\n\r\n\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (\r\n            this.isNewMatchData(nextState)\r\n            || this.isNewLang(nextProps)\r\n        );\r\n    }\r\n\r\n    isNewMatchData(nextState) {\r\n        return getLastmod(this.state.matchData) !== getLastmod(nextState.matchData);\r\n    }\r\n\r\n    isNewLang(nextProps) {\r\n        return (this.props.lang.name !== nextProps.lang.name);\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        setPageTitle(this.props.lang);\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.dao.init(this.props.lang);\r\n    }\r\n\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.lang.name !== nextProps.lang.name) {\r\n            setPageTitle(nextProps.lang);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.dao.close();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id='overview'>\r\n\r\n                <div className='row'>\r\n                    {_.map(REGIONS, (region, regionId) =>\r\n                        <div className='col-sm-12' key={regionId}>\r\n                            <Matches\r\n                                lang={this.props.lang}\r\n                                matches={_.filter(this.state.matchData, match => match.region === regionId)}\r\n                                region={region}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div className='row'>\r\n                    {_.map(REGIONS, (region, regionId) =>\r\n                        <div className='col-sm-12' key={regionId}>\r\n                            <Worlds\r\n                                lang={this.props.lang}\r\n                                region={region}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    /*\r\n    *\r\n    *   Data Listeners\r\n    *\r\n    */\r\n\r\n    onMatchData(matchData) {\r\n        this.setState({matchData});\r\n    }\r\n}\r\n\r\n\r\nfunction getLastmod(matchData) {\r\n    return _.reduce(\r\n        matchData,\r\n        (acc, match) => Math.max(match.lastmod),\r\n        0\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n*\r\n*   Direct DOM Manipulation\r\n*\r\n*/\r\n\r\nfunction setPageTitle(lang) {\r\n    let title = ['gw2w2w.com'];\r\n\r\n    if (lang.slug !== 'en') {\r\n        title.push(lang.name);\r\n    }\r\n\r\n    document.title = title.join(' - ');\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n*\r\n*   Export Module\r\n*\r\n*/\r\n\r\nmodule.exports = Overview;\r\n","\r\nimport React from 'react';\r\nimport moment from'moment';\r\n\r\nimport STATIC from 'lib/static';\r\n\r\nimport Sprite from 'common/icons/Sprite';\r\nimport ObjectiveIcon from 'common/icons/Objective';\r\nimport ArrowIcon from 'common/icons/Arrow';\r\n\r\n\r\nexport default ({\r\n    guilds,\r\n    lang,\r\n    log,\r\n    now,\r\n    mapFilter,\r\n    typeFilter,\r\n}) => (\r\n    <ol id='log' className='list-unstyled'>\r\n        {_.chain(log)\r\n            .filter(entry => byType(typeFilter, entry))\r\n            .filter(entry => byMapId(mapFilter, entry))\r\n            .map(entry =>\r\n                <li key={entry.id} className={`team ${entry.owner}`}>\r\n                    <ul className='list-unstyled log-objective'>\r\n                        <li className='log-expire'>{\r\n                            entry.expires.isAfter(now)\r\n                            ? moment(entry.expires.diff(now, 'milliseconds')).format('m:ss')\r\n                            : null\r\n                        }</li>\r\n                        <li className='log-geo'><ArrowIcon direction={getObjectiveDirection(entry)} /></li>\r\n                        <li className='log-sprite'><ObjectiveIcon color={entry.owner} type={entry.type} /></li>\r\n                        <li className='log-time'>{\r\n                            (moment().diff(entry.lastFlipped, 'hours') < 4)\r\n                                ? entry.lastFlipped.format('hh:mm:ss')\r\n                                : entry.lastFlipped.fromNow(true)\r\n                        }</li>\r\n                        <li className='log-name'>{STATIC.objectives[entry.id].name[lang.slug]}</li>\r\n                        <li className='log-claimed'>{\r\n                            entry.lastClaimed.isValid()\r\n                                ? entry.lastClaimed.format('hh:mm:ss')\r\n                                : null\r\n                        }</li>\r\n                        <li className='log-guild'>{\r\n                            entry.guild\r\n                                ? <a href={'#' + entry.guild}>\r\n                                    <img src={`https://guilds.gw2w2w.com/${entry.guild}.svg`} />\r\n                                    {guilds[entry.guild]\r\n                                        ? <span> {guilds[entry.guild].name} [{guilds[entry.guild].tag}] </span>\r\n                                        : <i className='fa fa-spinner fa-spin'></i>\r\n                                    }\r\n                                </a>\r\n                                : null\r\n                        }</li>\r\n                    </ul>\r\n                </li>\r\n            )\r\n        .value()}\r\n    </ol>\r\n);\r\n\r\n\r\nfunction getObjectiveDirection(objective) {\r\n    const baseId = objective.id.split('-')[1].toString();\r\n    const meta = STATIC.objectivesMeta[baseId];\r\n\r\n    return meta.direction;\r\n}\r\n\r\n\r\n\r\n\r\nfunction byType(typeFilter, entry) {\r\n    return typeFilter[entry.type];\r\n}\r\n\r\n\r\nfunction byMapId(mapFilter, entry) {\r\n    if (mapFilter) {\r\n        return entry.mapId === mapFilter;\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}","\r\nimport React from'react';\r\nimport classnames from'classnames';\r\nimport Sprite from 'common/icons/Sprite';\r\n\r\nimport STATIC from 'lib/static';\r\n\r\n\r\nexport default ({\r\n    maps,\r\n    mapFilter = '',\r\n    typeFilter = '',\r\n\r\n    handleMapFilterClick,\r\n    handleTypeFilterClick,\r\n}) => {\r\n    return (\r\n        <div id='log-tabs' className='flex-tabs'>\r\n            <a\r\n                className={classnames({tab: true, active: !mapFilter})}\r\n                onClick={() => handleMapFilterClick('')}\r\n                children={'All'}\r\n            />\r\n            {_.map(\r\n                STATIC.mapsMeta,\r\n                (mm) => (\r\n                    (_.some(maps, matchMap => matchMap.id == mm.id))\r\n                        ? <a\r\n                            key={mm.id}\r\n                            className={classnames({tab: true, active: mapFilter == mm.id})}\r\n                            onClick={() => handleMapFilterClick(_.parseInt(mm.id))}\r\n                            title={mm.name}\r\n                            children={mm.abbr}\r\n                        />\r\n                        : null\r\n                )\r\n            )}\r\n            {_.map(\r\n                ['castle', 'keep', 'tower', 'camp'],\r\n                t =>\r\n                <a\r\n                    key={t}\r\n                    className={classnames({check: true, active: typeFilter[t], first: t==='castle'})}\r\n                    onClick={() => handleTypeFilterClick(t)}\r\n                >\r\n                    <Sprite type={t} />\r\n                </a>\r\n            )}\r\n        </div>\r\n    );\r\n};","\r\nimport React from'react';\r\n\r\n\r\nimport Entries from './Entries';\r\nimport Tabs from './Tabs';\r\n\r\n\r\nexport default class LogContainer extends React.Component {\r\n    static propTypes = {\r\n        lang: React.PropTypes.object.isRequired,\r\n        log: React.PropTypes.array.isRequired,\r\n        guilds: React.PropTypes.object.isRequired,\r\n        match: React.PropTypes.object.isRequired,\r\n    }\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mapFilter: '',\r\n            typeFilter: {\r\n                castle: true,\r\n                keep: true,\r\n                tower: true,\r\n                camp: true,\r\n            },\r\n        };\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id='log-container'>\r\n                <Tabs\r\n                    maps={this.props.match.maps}\r\n                    mapFilter={this.state.mapFilter}\r\n                    typeFilter={this.state.typeFilter}\r\n\r\n                    handleMapFilterClick={this.handleMapFilterClick.bind(this)}\r\n                    handleTypeFilterClick={this.handleTypeFilterClick.bind(this)}\r\n                />\r\n                <Entries\r\n                    guilds={this.props.guilds}\r\n                    lang={this.props.lang}\r\n                    log={this.props.log}\r\n                    now={this.props.now}\r\n                    mapFilter={this.state.mapFilter}\r\n                    typeFilter={this.state.typeFilter}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    handleMapFilterClick(mapFilter) {\r\n        console.log('set mapFilter', mapFilter);\r\n\r\n        this.setState({mapFilter});\r\n    }\r\n\r\n    handleTypeFilterClick(toggleType) {\r\n        console.log('toggle typeFilter', toggleType);\r\n\r\n        this.setState(state => {\r\n            state.typeFilter[toggleType] = !state.typeFilter[toggleType];\r\n            return state;\r\n        });\r\n    }\r\n}","\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport STATIC from 'lib/static';\r\n\r\nimport ArrowIcon from 'common/icons/Arrow';\r\nimport SpriteIcon from 'common/icons/Sprite';\r\nimport ObjectiveIcon from 'common/icons/Objective';\r\n\r\n\r\n\r\n/*\r\n*\r\n* Component Definition\r\n*\r\n*/\r\n\r\nexport default ({\r\n    guilds,\r\n    lang,\r\n    match,\r\n    now,\r\n}) => {\r\n\r\n    if (_.isEmpty(match)) {\r\n        return null;\r\n    }\r\n\r\n    // console.log('match', match);\r\n\r\n    return (\r\n        <section id='maps'>\r\n            {_.map(\r\n                STATIC.mapsMeta,\r\n                (mm) => {\r\n                    const matchMap = _.find(match.maps, m => m.id == mm.id);\r\n\r\n                    return (matchMap)\r\n                        ? <MapTracker\r\n                            key={mm.id}\r\n                            guilds={guilds}\r\n                            lang={lang}\r\n                            mapMeta={mm}\r\n                            matchMap={matchMap}\r\n                            now={now}\r\n                        />\r\n                        : null;\r\n                }\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst MapTracker = ({\r\n    guilds,\r\n    lang,\r\n    mapMeta,\r\n    matchMap,\r\n    now,\r\n}) => (\r\n    <div className='map'>\r\n        <h2>{mapMeta.name}</h2>\r\n        {/*<pre>{JSON.stringify(matchMap, null, '\\t')}</pre>*/}\r\n        <Scoreboard\r\n            scores={matchMap.scores}\r\n            ticks={matchMap.ticks}\r\n            holdings={matchMap.holdings}\r\n            deaths={matchMap.deaths}\r\n            kills={matchMap.kills}\r\n        />\r\n        <MapSections\r\n            guilds={guilds}\r\n            lang={lang}\r\n            mapMeta={mapMeta}\r\n            matchMap={matchMap}\r\n            now={now}\r\n        />\r\n    </div>\r\n);\r\n\r\n\r\nconst Scoreboard = ({\r\n    scores,\r\n    ticks,\r\n    holdings,\r\n    deaths,\r\n    kills,\r\n}) => (\r\n    <ul>\r\n        {/*<li>{JSON.stringify(scores)}</li>*/}\r\n        {/*<li>{JSON.stringify(ticks)}</li>*/}\r\n        {/*<li>{JSON.stringify(holdings)}</li>*/}\r\n        {/*<li>{JSON.stringify(deaths)}</li>*/}\r\n        {/*<li>{JSON.stringify(kills)}</li>*/}\r\n    </ul>\r\n);\r\n\r\n\r\nconst MapSections = ({\r\n    guilds,\r\n    lang,\r\n    matchMap,\r\n    now,\r\n}) => {\r\n    return (\r\n        <div className='map-sections'>\r\n            {_.map(\r\n                getMapObjectivesMeta(matchMap.id),\r\n                (section, ix) =>\r\n                <div className={classnames({\r\n                    'map-section': true,\r\n                    solo: section.length === 1,\r\n                })} key={ix}>\r\n                    {_.map(\r\n                        section,\r\n                        (geo) =>\r\n                        <Objective\r\n                            key={geo.id}\r\n                            id={geo.id}\r\n                            guilds={guilds}\r\n                            lang={lang}\r\n                            direction={geo.direction}\r\n                            matchMap={matchMap}\r\n                            now={now}\r\n                        />\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst Objective = ({\r\n    id,\r\n    guilds,\r\n    lang,\r\n    direction,\r\n    matchMap,\r\n    now,\r\n}) => {\r\n    const objectiveId = `${matchMap.id}-${id}`;\r\n    const oMeta = STATIC.objectives[objectiveId];\r\n    const mo = _.find(matchMap.objectives, o => o.id === objectiveId);\r\n\r\n    if (!mo) {\r\n        // console.log('matchMap.objectives', matchMap.objectives);\r\n        console.log(matchMap.id, id, objectiveId, mo);\r\n    }\r\n\r\n\r\n    return (\r\n        <ul className={classnames({\r\n            'list-unstyled': true,\r\n            'track-objective': true,\r\n            'fresh': now.diff(mo.lastFlipped, 'seconds') < 30,\r\n            'expiring': mo.expires.isAfter(now) && mo.expires.diff(now, 'seconds') < 30,\r\n            'expired': now.isAfter(mo.expires),\r\n            'active': now.isBefore(mo.expires),\r\n        })}>\r\n            <li className='left'>\r\n                <span className='track-geo'><ArrowIcon direction={direction} /></span>\r\n                <span className='track-sprite'><ObjectiveIcon color={mo.owner} type={mo.type} /></span>\r\n                <span className='track-name'>{oMeta.name[lang.slug]}</span>\r\n            </li>\r\n            <li className='right'>\r\n                {mo.guild\r\n                    ? <a\r\n                        className='track-guild'\r\n                        href={'#' + mo.guild}\r\n                        title={guilds[mo.guild] ? `${guilds[mo.guild].name} [${guilds[mo.guild].tag}]` : 'Loading...'}\r\n                    >\r\n                        <img src={`https://guilds.gw2w2w.com/${mo.guild}.svg`} className='emblem' />\r\n\r\n                    </a>\r\n                    : null\r\n                }\r\n                <span className='track-expire'>\r\n                    {mo.expires.isAfter(now)\r\n                        ? moment(mo.expires.diff(now, 'milliseconds')).format('m:ss')\r\n                        : null\r\n                    }\r\n                </span>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nfunction getMapObjectivesMeta(mapId) {\r\n    let mapCode = 'bl2';\r\n\r\n    if (mapId === 38) {\r\n        mapCode = 'eb';\r\n    }\r\n\r\n    return _\r\n        .chain(STATIC.objectivesMeta)\r\n        .cloneDeep()\r\n        .filter(om => om.map === mapCode)\r\n        .groupBy(om => om.group)\r\n        .value();\r\n}\r\n\r\n\r\n/*\r\n\r\n\r\n                    <div className='col-md-6'>{<MapDetails mapKey='Center' mapMeta={getMapMeta('Center')} {...this.props} />}</div>\r\n\r\n                    <div className='col-md-18'>\r\n\r\n                        <div className='row'>\r\n                            <div className='col-md-8'>{<MapDetails mapKey='RedHome' mapMeta={getMapMeta('RedHome')} {...this.props} />}</div>\r\n                            <div className='col-md-8'>{<MapDetails mapKey='BlueHome' mapMeta={getMapMeta('BlueHome')} {...this.props} />}</div>\r\n                            <div className='col-md-8'>{<MapDetails mapKey='GreenHome' mapMeta={getMapMeta('GreenHome')} {...this.props} />}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                 </div>\r\n                 */","\r\nimport React from 'react';\r\n\r\nimport Sprite from 'common/Icons/Sprite';\r\n\r\n\r\n\r\n\r\n\r\nexport default ({\r\n    color,\r\n    holdings,\r\n}) => (\r\n    <ul className='list-inline'>\r\n        {_.map(holdings, (typeQuantity, typeIndex) =>\r\n            <li key={typeIndex}>\r\n                <Sprite\r\n                    type  = {typeIndex}\r\n                    color = {color}\r\n                />\r\n\r\n                <span className='quantity'>x{typeQuantity}</span>\r\n            </li>\r\n        )}\r\n    </ul>\r\n);\r\n","\r\nimport React from 'react';\r\nimport _ from 'lodash';\r\nimport numeral from 'numeral';\r\n\r\nimport Holdings from './Holdings';\r\n\r\n\r\nimport {worlds as WORLDS} from 'lib/static';\r\n\r\n\r\nconst Loading = () => (\r\n    <h1 style={{height: '90px', fontSize: '32pt', lineHeight: '90px'}}>\r\n        <i className='fa fa-spinner fa-spin'></i>\r\n    </h1>\r\n);\r\n\r\n\r\n\r\n\r\nexport default ({\r\n    color,\r\n    deaths,\r\n    id,\r\n    holdings,\r\n    kills,\r\n    lang,\r\n    score,\r\n    tick,\r\n}) => {\r\n    const world = WORLDS[id][lang.slug];\r\n\r\n    if (!world && _.isEmpty(world)) {\r\n        return <Loading />;\r\n    }\r\n\r\n    return (\r\n        <div className={`scoreboard team-bg team text-center ${color}`}>\r\n            <h1><a href={world.link}>{world.name}</a></h1>\r\n            <h2>\r\n                <div className='stats'>\r\n                    <span title='Total Score'>{numeral(score).format('0,0')}</span>\r\n                    {' '}\r\n                    <span title='Total Tick'>{numeral(tick).format('+0,0')}</span>\r\n                </div>\r\n                {kills\r\n                    ? <div className='sub-stats'>\r\n                        <span title='Total Kills'>{numeral(kills).format('0,0')}k</span>\r\n                        {' '}\r\n                        <span title='Total Deaths'>{numeral(deaths).format('0,0')}d</span>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </h2>\r\n\r\n            <Holdings\r\n                color={color}\r\n                holdings={holdings}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","\r\nimport React from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport World from './World';\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n*\r\n* Component Definition\r\n*\r\n*/\r\n\r\nexport default ({\r\n    match,\r\n    lang,\r\n}) =>  {\r\n    const worldsProps = getWorldsProps(match, lang);\r\n\r\n    return (\r\n        <section className='row' id='scoreboards'>\r\n            {_.map(\r\n                worldsProps,\r\n                (worldProps) =>\r\n                <div className='col-sm-8' key={worldProps.id}>\r\n                    <World {...worldProps} />\r\n                </div>\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\n\r\nfunction getWorldsProps(match, lang) {\r\n    return _.reduce(\r\n        match.worlds,\r\n        (acc, worldId, color) => {\r\n            acc[color] = {\r\n                color,\r\n                lang,\r\n                id: worldId,\r\n                score: _.get(match, ['scores', color], 0),\r\n                deaths: _.get(match, ['deaths', color], 0),\r\n                kills: _.get(match, ['kills', color], 0),\r\n                tick: _.get(match, ['ticks', color], 0),\r\n                holdings: _.get(match, ['holdings', color], []),\r\n            };\r\n            return acc;\r\n        },\r\n        {red: {}, blue: {}, green: {}}\r\n    );\r\n}","'use strict';\r\n\r\n/*\r\n*\r\n* Dependencies\r\n*\r\n*/\r\n\r\nimport React from'react';\r\nimport _ from'lodash';\r\nimport moment from'moment';\r\n\r\n\r\n\r\n/*\r\n *   libs\r\n */\r\n\r\nimport libDate from 'lib/date';\r\nimport trackerTimers from 'lib/trackerTimers';\r\n\r\n\r\n\r\n/*\r\n *   Data\r\n */\r\n\r\nimport DAO from 'lib/data/tracker';\r\n\r\n\r\n\r\n/*\r\n * React Components\r\n */\r\n\r\nimport Scoreboard from './Scoreboard';\r\nimport Maps from './Maps';\r\nimport Log from './Log';\r\n// import Guilds from './Guilds';\r\n\r\n\r\n\r\n\r\n/*\r\n* Globals\r\n*/\r\n\r\nconst updateTimeInterval = 1000;\r\n\r\nconst LoadingSpinner = () => (\r\n    <h1 id='AppLoading'>\r\n        <i className='fa fa-spinner fa-spin'></i>\r\n    </h1>\r\n);\r\n\r\n\r\n\r\n/*\r\n*\r\n* Component Export\r\n*\r\n*/\r\n\r\n\r\nexport default class Tracker extends React.Component {\r\n    static propTypes={\r\n        lang : React.PropTypes.object.isRequired,\r\n        world: React.PropTypes.object.isRequired,\r\n    }\r\n\r\n    /*\r\n    *\r\n    *     React Lifecycle\r\n    *\r\n    */\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.__mounted = false;\r\n        this.__timeouts = {};\r\n        this.__intervals = {};\r\n\r\n\r\n        const dataListeners = {\r\n            onMatchDetails: this.onMatchDetails.bind(this),\r\n            onGuildDetails: this.onGuildDetails.bind(this),\r\n        };\r\n\r\n        this.dao = new DAO(dataListeners);\r\n\r\n\r\n\r\n        this.state = {\r\n            hasData: false,\r\n            match: {},\r\n            log: [],\r\n            guilds: {},\r\n            now: now(),\r\n        };\r\n\r\n\r\n        this.__intervals.setDate = setInterval(\r\n            () => this.setState({now: now()}),\r\n            updateTimeInterval\r\n        );\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        // console.log('Tracker::componentDidMount()');\r\n        this.__mounted   = true;\r\n\r\n        setPageTitle(this.props.lang, this.props.world);\r\n\r\n        this.dao.init(this.props.world);\r\n    }\r\n\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        setPageTitle(nextProps.lang, nextProps.world);\r\n        this.dao.setWorld(nextProps.world);\r\n    }\r\n\r\n\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (\r\n            this.isNewSecond(nextState)\r\n            || this.isNewLang(nextProps)\r\n        );\r\n    }\r\n\r\n    isNewSecond(nextState) {\r\n        return !this.state.now.isSame(nextState.now);\r\n    }\r\n\r\n    isNewLang(nextProps) {\r\n        return (this.props.lang.name !== nextProps.lang.name);\r\n    }\r\n\r\n\r\n\r\n    componentWillUnmount() {\r\n        // console.log('Tracker::componentWillUnmount()');\r\n\r\n        this.__mounted   = false;\r\n        this.__timeouts  = _.map(this.__timeouts,  t => clearTimeout(t));\r\n        this.__intervals = _.map(this.__intervals, i => clearInterval(i));\r\n\r\n        this.dao.close();\r\n    }\r\n\r\n\r\n\r\n    // componentWillUpdate() {\r\n    //  console.log('Tracker::componentWillUpdate()');\r\n    // }\r\n\r\n\r\n\r\n    render() {\r\n        // console.log('Tracker::render()');\r\n\r\n\r\n\r\n        return (\r\n            <div id='tracker'>\r\n\r\n                {(!this.state.hasData)\r\n                    ? <LoadingSpinner />\r\n                    : null\r\n                }\r\n\r\n\r\n                {(this.state.match && !_.isEmpty(this.state.match))\r\n                    ? <Scoreboard\r\n                        lang={this.props.lang}\r\n                        match={this.state.match}\r\n                    />\r\n                    : null\r\n                }\r\n\r\n                {(this.state.match && !_.isEmpty(this.state.match))\r\n                    ? <Maps\r\n                        guilds={this.state.guilds}\r\n                        lang={this.props.lang}\r\n                        match={this.state.match}\r\n                        now={this.state.now}\r\n                    />\r\n                    : null\r\n                }\r\n\r\n                <div className='row'>\r\n                    <div className='col-md-24'>\r\n                        <Log\r\n                            guilds={this.state.guilds}\r\n                            lang={this.props.lang}\r\n                            log={this.state.log}\r\n                            match={this.state.match}\r\n                            now={this.state.now}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/*(this.state.guilds && !this.state.guilds.isEmpty())\r\n                    ? <div className='row'>\r\n                        <div className='col-md-24'>\r\n                            <Guilds\r\n                                claimEvents={this.state.claimEvents}\r\n                                guilds={this.state.guilds}\r\n                                lang={this.props.lang}\r\n                                time={this.state.time}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    : null\r\n                */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n    /*\r\n    *\r\n    *   Data Listeners\r\n    *\r\n    */\r\n\r\n    // updateTimers(cb = _.noop) {\r\n    //     if (this.__mounted) {\r\n    //         trackerTimers.update(this.state.time.offset, cb);\r\n    //         this.__timeouts.updateTimers = setTimeout(this.updateTimers.bind(this), updateTimeInterval);\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    onMatchDetails(match) {\r\n        const log = getLog(match);\r\n\r\n        this.setState({\r\n            hasData: true,\r\n            match,\r\n            log,\r\n        });\r\n\r\n\r\n        setImmediate(() => {\r\n            const knownGuilds = _.keys(this.state.guilds);\r\n            const unknownGuilds = getNewClaims(log, knownGuilds);\r\n\r\n            this.dao.guilds.lookup(unknownGuilds, this.onGuildDetails.bind(this));\r\n        });\r\n    }\r\n\r\n    // onMatchDetails(timeRemote, match, details) {\r\n    //     const lastmod      = match.get('lastmod');\r\n    //     const isModified   = (lastmod !== this.state.match.get('lastmod'));\r\n\r\n\r\n    //     if (isModified) {\r\n    //         // console.log('onMatchDetails', lastmod);\r\n\r\n\r\n\r\n    //         const matchWorlds = (this.state.matchWorlds && Immutable.Map.isMap(this.state.matchWorlds))\r\n    //             ? this.state.matchWorlds\r\n    //             : this.dao.getMatchWorlds(this.props.lang, match);\r\n\r\n\r\n    //         this.setState({\r\n    //             hasData: true,\r\n    //             time: this.getTime(timeRemote),\r\n    //             lastmod,\r\n\r\n    //             claimEvents,\r\n    //             details,\r\n    //             match,\r\n    //             matchWorlds,\r\n    //         });\r\n\r\n\r\n    //         setImmediate(() => this.dao.guilds.lookup(\r\n    //             this.state.guilds,\r\n    //             details,\r\n    //             this.onGuildDetails.bind(this)\r\n    //         ));\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    onGuildDetails(guild) {\r\n        // console.log('onGuildDetails', guild);\r\n\r\n        this.setState(state => {\r\n            state.guilds[guild.id] = guild;\r\n\r\n            return {guilds: state.guilds};\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n*\r\n* Private methods\r\n*\r\n*/\r\n\r\n\r\n\r\nfunction now() {\r\n    return moment(Math.floor(Date.now() / 1000) * 1000);\r\n}\r\n\r\n\r\n\r\nfunction setPageTitle(lang, world) {\r\n    const langSlug  = lang.slug;\r\n    const worldName = world[langSlug].name;\r\n\r\n    const title     = [worldName, 'gw2w2w'];\r\n\r\n    if (langSlug !== 'en') {\r\n        title.push(lang.name);\r\n    }\r\n\r\n    document.title = title.join(' - ');\r\n}\r\n\r\n\r\n\r\nfunction getLog(match) {\r\n    return _\r\n        .chain(match.maps)\r\n        .pluck('objectives')\r\n        .flatten()\r\n        .clone()\r\n        .sortBy('lastFlipped')\r\n        .reverse()\r\n        .map(o => {\r\n            o.mapId = _.parseInt(o.id.split('-')[0]);\r\n            o.lastmod = moment(o.lastmod, 'X');\r\n            o.lastFlipped = moment(o.lastFlipped, 'X');\r\n            o.lastClaimed = moment(o.lastClaimed, 'X');\r\n            o.expires = moment(o.lastFlipped).add(5, 'minutes');\r\n            return o;\r\n        })\r\n        .value();\r\n};\r\n\r\n\r\nfunction getNewClaims(log, knownGuilds) {\r\n    return  _\r\n        .chain(log)\r\n        .reject(o => _.isEmpty(o.guild))\r\n        .pluck('guild')\r\n        .unique()\r\n        .difference(knownGuilds)\r\n        .value();\r\n}","'use strict';\r\n\r\n// require('babel/polyfill');\r\nconsole.clear();\r\n\r\n/*\r\n*\r\n* Dependencies\r\n*\r\n*/\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport page from 'page';\r\n\r\nimport STATIC from 'lib/static';\r\n\r\n\r\n\r\n/*\r\n* React Components\r\n*/\r\n\r\nimport Langs from 'common/Langs';\r\nimport NavbarHeader from 'common/layout/NavbarHeader';\r\n\r\nimport Overview from 'Overview';\r\nimport Tracker from 'Tracker';\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n*\r\n* DOM Ready\r\n*\r\n*/\r\n\r\n$(function() {\r\n    attachRoutes();\r\n    setImmediate(eml);\r\n});\r\n\r\n\r\n\r\n/*\r\n*\r\n* Routes\r\n*\r\n*/\r\n\r\nfunction attachRoutes() {\r\n\r\n    // Redirect '/' to '/en'\r\n    page('/', redirectPage.bind(null, '/en'));\r\n\r\n    page('/:langSlug(en|de|es|fr)/:worldSlug([a-z-]+)?', function(ctx) {\r\n        ReactDOM.render(\r\n            <App {...ctx.params} />,\r\n            document.getElementById('react-app')\r\n        );\r\n    });\r\n\r\n\r\n    page.start({\r\n        click   : true,\r\n        popstate: true,\r\n        dispatch: true,\r\n        hashbang: false,\r\n        decodeURLComponents: true,\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n*\r\n* App Container\r\n*\r\n*/\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n    static propTypes = {\r\n        langSlug : React.PropTypes.string.isRequired,\r\n        worldSlug : React.PropTypes.string,\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log('App Started!');\r\n    }\r\n\r\n    render() {\r\n        const langSlug  = this.props.langSlug;\r\n        const worldSlug = this.props.worldSlug;\r\n\r\n        const lang      = STATIC.langs[langSlug];\r\n        const world     = getWorldFromSlug(langSlug, worldSlug);\r\n\r\n        const hasWorld  = (world && !_.isEmpty(world));\r\n        const Handler   = (hasWorld) ? Tracker : Overview;\r\n\r\n\r\n        return (\r\n            <div>\r\n                <nav className='navbar navbar-default'>\r\n                    <div className='container'>\r\n                        <NavbarHeader />\r\n                        <div id='nav-langs' className='pull-right'>\r\n                            <Langs lang={lang} world={world} />\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n\r\n\r\n                <div id='content' className='container'>\r\n                    <Handler lang={lang} world={world} />\r\n                </div>\r\n\r\n                <h1 style={{textAlign: 'center'}}>Updates for HoT expansion changes are ongoing</h1>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n*\r\n* Util\r\n*\r\n*/\r\n\r\nfunction redirectPage(destination) {\r\n    page.redirect(destination);\r\n}\r\n\r\n\r\n\r\nfunction getWorldFromSlug(langSlug, worldSlug) {\r\n    return _.find(\r\n        STATIC.worlds,\r\n        world => world[langSlug].slug === worldSlug\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction eml() {\r\n    const chunks = ['gw2w2w', 'schtuph', 'com', '@', '.'];\r\n    const addr   = [chunks[0], chunks[3], chunks[1], chunks[4], chunks[2]].join('');\r\n\r\n    $('.nospam-prz').each((i, el) => {\r\n        $(el).replaceWith(\r\n            $('<a>', {href: `mailto:${addr}`, text: addr})\r\n        );\r\n    });\r\n}\r\n","\r\nimport React from 'react';\r\n\r\n\r\n/*\r\n * Component Globals\r\n */\r\n\r\nconst INSTANCE = {\r\n    size  : 60,\r\n    stroke: 2,\r\n};\r\n\r\n\r\nexport default ({scores}) => (\r\n    <img\r\n        src = {getImageSource(scores)}\r\n\r\n        width = {INSTANCE.size}\r\n        height = {INSTANCE.size}\r\n    />\r\n);\r\n\r\n\r\nfunction getImageSource(scores) {\r\n    return `https:\\/\\/www.piely.net\\/${INSTANCE.size}\\/${scores.red},${scores.blue},${scores.green}?strokeWidth=${INSTANCE.stroke}`;\r\n}\r\n","\r\nimport React from'react';\r\n\r\n\r\n\r\n\r\nexport default ({\r\n    color,\r\n    type,\r\n}) => (\r\n    <span className = {`sprite ${type} ${color}`} />\r\n);","\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n\r\nexport default ({\r\n    lang,\r\n    linkLang,\r\n    world,\r\n}) =>  (\r\n    <li\r\n        className={getClassname(lang, linkLang)}\r\n        title={linkLang.name}\r\n    >\r\n        <a href={getLink(linkLang, world)}>{linkLang.label}</a>\r\n    </li>\r\n);\r\n\r\n\r\n\r\nfunction getClassname(lang, linkLang) {\r\n    return classnames({\r\n        active: lang.label === linkLang.label,\r\n    });\r\n}\r\n\r\nfunction getLink(lang, world) {\r\n    const langSlug = lang.slug;\r\n\r\n    let link = `/${langSlug}`;\r\n\r\n    if (world) {\r\n        const worldSlug = world[langSlug].slug;\r\n\r\n        link += `/${worldSlug}`;\r\n    }\r\n\r\n    return link;\r\n}\r\n","\r\n\r\nimport React from 'react';\r\n\r\nimport STATIC from 'lib/static';\r\n\r\nimport LangLink from './LangLink';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default ({\r\n    lang,\r\n    world,\r\n}) => (\r\n    <ul className = 'nav navbar-nav'>\r\n        {_.map(STATIC.langs, (linkLang, key) =>\r\n            <LangLink\r\n                key = {key}\r\n\r\n                lang = {lang}\r\n                linkLang = {linkLang}\r\n                world = {world}\r\n            />\r\n        )}\r\n    </ul>\r\n);\r\n","\r\nimport React from'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default ({direction}) => (\r\n    (direction)\r\n        ? <img src={getArrowSrc(direction)} className='arrow' />\r\n        : <span />\r\n);\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n *\r\n * Private Methods\r\n *\r\n */\r\n\r\nfunction getArrowSrc(direction) {\r\n    if (!direction) {\r\n        return null;\r\n    }\r\n\r\n    let src = ['/img/icons/dist/arrow'];\r\n\r\n    if (direction.indexOf('N') >= 0) {\r\n        src.push('north');\r\n    }\r\n    else if (direction.indexOf('S') >= 0) {\r\n        src.push('south');\r\n    }\r\n\r\n    if (direction.indexOf('W') >= 0) {\r\n        src.push('west');\r\n    }\r\n    else if (direction.indexOf('E') >= 0) {\r\n        src.push('east');\r\n    }\r\n\r\n\r\n    return src.join('-') + '.svg';\r\n}","\r\nimport React from'react';\r\n\r\n\r\n\r\nexport default ({\r\n    color = 'black',\r\n    type,\r\n}) => {\r\n    let src = '/img/icons/dist/';\r\n    src += type;\r\n    if (color !== 'black') {\r\n        src += '-' + color;\r\n    }\r\n    src += '.svg';\r\n\r\n    return <img src={src} className={`icon-objective icon-objective-${type}`} />;\r\n};","\r\nimport React from'react';\r\n\r\n\r\n\r\n\r\nexport default ({\r\n    color,\r\n    type,\r\n}) => (\r\n    <span className = {`sprite ${type} ${color}`} />\r\n);","import React from 'react';\r\n\r\n\r\nexport default () => (\r\n    <div className='navbar-header'>\r\n        <a className='navbar-brand' href='/'>\r\n            <img src='/img/logo/logo-96x36.png' />\r\n        </a>\r\n    </div>\r\n);","\r\nimport $ from 'jQuery';\r\nimport _ from 'lodash';\r\n\r\n\r\nexport default {\r\n    // getMatches: getMatches,\r\n    getMatchByWorldSlug: getMatchByWorldSlug,\r\n    getMatchByWorldId: getMatchByWorldId,\r\n    getGuildById : getGuildById,\r\n};\r\n\r\n\r\n\r\nfunction getMatchByWorldSlug({\r\n    worldSlug,\r\n    success = _.noop,\r\n    error = _.noop,\r\n    complete = _.noop,\r\n}) {\r\n    $.ajax({\r\n        url: `http://state.gw2w2w.com/world/${worldSlug}`,\r\n        success,\r\n        error,\r\n        complete,\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction getMatchByWorldId({\r\n    worldId,\r\n    success = _.noop,\r\n    error = _.noop,\r\n    complete = _.noop,\r\n}) {\r\n    $.ajax({\r\n        url: `http://state.gw2w2w.com/world/${worldId}`,\r\n        success,\r\n        error,\r\n        complete,\r\n    });\r\n}\r\n\r\n\r\n\r\nexport function getGuildById({\r\n    guildId,\r\n    success = _.noop,\r\n    error = _.noop,\r\n    complete = _.noop,\r\n}) {\r\n    $.ajax({\r\n        url: `https://api.guildwars2.com/v1/guild_details.json?guild_id=${guildId}`,\r\n        success,\r\n        error,\r\n        complete,\r\n    });\r\n}\r\n\r\n\r\n\r\n// function getMatchDetails(matchId, callback) {\r\n//   gw2api.getMatchDetailsState({match_id: matchId}, callback);\r\n// }\r\n\r\n\r\n\r\nfunction getMatchDetailsByWorld(worldSlug, callback) {\r\n    // setTimeout(\r\n    //  gw2api.getMatchDetailsState.bind(null, {world_slug: worldSlug}, callback),\r\n    //  3000\r\n    // );\r\n    gw2api.getMatchDetailsState({\r\n        world_slug: worldSlug,\r\n    }, callback);\r\n}\r\n","'use strict';\r\n\r\nimport _ from 'lodash';\r\nimport $ from 'jQuery';\r\n\r\n// import STATIC from 'lib/static';\r\n\r\n\r\nconst URL_API_MATCHES = `http://state.gw2w2w.com/matches`;\r\n\r\n\r\nexport default class OverviewDataProvider {\r\n\r\n    constructor(listeners) {\r\n        // console.log('lib::data::overview::constructor()');\r\n\r\n        this.__mounted   = false;\r\n        this.__listeners = listeners;\r\n\r\n        this.__timeouts  = {};\r\n        this.__intervals = {};\r\n    }\r\n\r\n\r\n\r\n    init() {\r\n        // console.log('lib::data::overview::init()');\r\n\r\n        this.__mounted = true;\r\n        this.__getData();\r\n    }\r\n\r\n\r\n\r\n    close() {\r\n        // console.log('lib::data::overview::close()');\r\n\r\n        this.__mounted   = false;\r\n\r\n        this.__timeouts  = _.map(this.__timeouts,  t => clearTimeout(t));\r\n        this.__intervals = _.map(this.__intervals, i => clearInterval(i));\r\n    }\r\n\r\n\r\n    /*\r\n    *\r\n    *   Private Methods\r\n    *\r\n    */\r\n\r\n    __getData() {\r\n        // console.log('lib::data::overview::__getData()');\r\n\r\n        // api.getMatches(this.__onMatchData.bind(this));\r\n\r\n        $.ajax({\r\n            url: URL_API_MATCHES,\r\n            success: this.__onMatchData.bind(this),\r\n            complete: this.__setDataTimeout.bind(this),\r\n        });\r\n    }\r\n\r\n\r\n\r\n    __onMatchData(data) {\r\n        // console.log('lib::data::overview::__onMatchData()', textStatus, jqXHR, data);\r\n\r\n        if (data && !_.isEmpty(data)) {\r\n            (this.__listeners.onMatchData || _.noop)(data);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    __setDataTimeout() {\r\n        const interval = getInterval();\r\n\r\n        // console.log('lib::data::overview::__setDataTimeout()', interval);\r\n\r\n        this.__timeouts.matchData = setTimeout(\r\n            this.__getData.bind(this),\r\n            interval\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction getInterval() {\r\n    return _.random(4000, 8000);\r\n}\r\n","\r\nimport $ from 'jQuery';\r\nimport _ from 'lodash';\r\nimport async from 'async';\r\n\r\nimport * as api from 'lib/api';\r\n\r\nconst URL_API_GUILDS = `https://api.guildwars2.com/v1/guild_details.json`;\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n *\r\n * Module Globals\r\n *\r\n */\r\n\r\nconst NUM_QUEUE_CONCURRENT = 4;\r\n\r\n\r\n\r\n\r\n/*\r\n *\r\n * Public Methods\r\n *\r\n */\r\n\r\nexport default class LibGuilds {\r\n    constructor() {\r\n        // this.component = component;\r\n\r\n        this.__asyncGuildQueue = async.queue(\r\n            getGuildDetailsFromQueue,\r\n            NUM_QUEUE_CONCURRENT\r\n        );\r\n    }\r\n\r\n\r\n    lookup(guilds, onDataListener) {\r\n        const toQueue = _.map(\r\n            guilds,\r\n            guildId => ({\r\n                guildId,\r\n                onData: onDataListener,\r\n            })\r\n        );\r\n\r\n\r\n        this.__asyncGuildQueue.push(toQueue);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n *\r\n * Private Methods\r\n *\r\n */\r\n\r\n\r\n\r\nfunction getGuildDetailsFromQueue(cargo, onComplete) {\r\n    // console.log('getGuildDetailsFromQueue', cargo, cargo.guildId);\r\n\r\n    api.getGuildById({\r\n        guildId: cargo.guildId,\r\n        success: (data) => onGuildData(data, cargo),\r\n        complete: onComplete,\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction onGuildData(data, cargo) {\r\n    console.log('onGuildData', data);\r\n\r\n    if (data && !_.isEmpty(data)) {\r\n        cargo.onData({\r\n            id: data.guild_id,\r\n            name: data.guild_name,\r\n            tag: data.tag,\r\n        });\r\n    }\r\n}\r\n","'use strict';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport GuildsDAO from './guilds';\r\nimport api from 'lib/api';\r\n\r\nimport STATIC from 'lib/static';\r\n\r\nconst URL_API_MATCHES = `http://state.gw2w2w.com/world`;\r\n\r\n\r\nexport default class OverviewDataProvider {\r\n\r\n    constructor(listeners) {\r\n        // console.log('lib::data::tracker::constructor()');\r\n\r\n        this.__langSlug  = null;\r\n        this.__worldSlug = null;\r\n\r\n        this.guilds      = new GuildsDAO();\r\n\r\n\r\n        this.__mounted   = false;\r\n        this.__listeners = listeners;\r\n\r\n        this.__timeouts  = {};\r\n        this.__intervals = {};\r\n    }\r\n\r\n\r\n\r\n    init(world) {\r\n        // console.log('lib::data::tracker::init()', lang, world);\r\n\r\n        this.setWorld(world);\r\n\r\n        this.__mounted = true;\r\n        this.__getData();\r\n    }\r\n\r\n    setWorld(world) {\r\n        this.__worldId = world.id;\r\n    }\r\n\r\n\r\n\r\n    close() {\r\n        // console.log('lib::data::tracker::close()');\r\n\r\n        this.__mounted   = false;\r\n\r\n        this.__timeouts  = _.map(this.__timeouts,  t => clearTimeout(t));\r\n        this.__intervals = _.map(this.__intervals, i => clearInterval(i));\r\n    }\r\n\r\n\r\n\r\n    getMatchWorlds(match) {\r\n        return _.map(\r\n            {red: {}, blue: {}, green: {}},\r\n            (j, color) => getMatchWorld(match, color)\r\n        );\r\n    }\r\n\r\n\r\n    /*\r\n    *\r\n    *   Private Methods\r\n    *\r\n    */\r\n\r\n    __getData() {\r\n        // console.log('lib::data::tracker::__getData()');\r\n\r\n\r\n        // api.getMatchByWorldSlug({\r\n        //     worldSlug: this.__worldSlug,\r\n        //     success: (data) => this.__onMatchDetails(data),\r\n        //     complete: () => this.__rescheduleDataUpdate(),\r\n        // });\r\n        api.getMatchByWorldId({\r\n            worldId: this.__worldId,\r\n            success: (data) => this.__onMatchDetails(data),\r\n            complete: () => this.__rescheduleDataUpdate(),\r\n        });\r\n    }\r\n\r\n\r\n\r\n    __onMatchDetails(data) {\r\n        // console.log('lib::data::tracker::__onMatchData()', data);\r\n\r\n        if (!this.__mounted) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (data && !_.isEmpty(data)) {\r\n            this.__listeners.onMatchDetails(data);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    __rescheduleDataUpdate() {\r\n        const refreshTime = _.random(1000 * 4, 1000 * 8);\r\n\r\n        // console.log('data refresh: ', refreshTime);\r\n\r\n        this.__timeouts.data = setTimeout(this.__getData.bind(this), refreshTime);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n*   Worlds\r\n*/\r\n\r\nfunction getMatchWorld(match, color) {\r\n    const worldId = match.worlds[color].toString();\r\n\r\n    const world = _.merge(\r\n        {color: color},\r\n        STATIC.worlds[worldId]\r\n    );\r\n\r\n    return world;\r\n}\r\n","'use strict';\r\n\r\nconst _ = require('lodash');\r\n\r\nmodule.exports = {\r\n    dateNow: dateNow,\r\n    add5   : add5,\r\n};\r\n\r\n\r\nfunction dateNow() {\r\n    return Math.floor(_.now() / 1000);\r\n}\r\n\r\n\r\nfunction add5(inDate) {\r\n    const _baseDate = inDate || dateNow();\r\n\r\n    return (_baseDate + (5 * 60));\r\n}\r\n","'use strict';\r\n/*eslint camelcase: 0 */\r\n\r\nimport _ from 'lodash';\r\n\r\nimport statics from 'gw2w2w-static';\r\n\r\n\r\nconst worlds = _\r\n    .chain(statics.worlds)\r\n    .map((world) => {\r\n        _.forEach(\r\n            statics.langs,\r\n            (lang) =>\r\n            world[lang.slug].link = getWorldLink(lang.slug, world)\r\n        );\r\n        return world;\r\n    })\r\n    .indexBy('id')\r\n    .value();\r\n\r\n\r\nexport default {\r\n    langs: statics.langs,\r\n    worlds: worlds,\r\n    objectives: enhanceObjectives(statics.objectives_v2),\r\n    objectivesGeo: getObjectiveGeo(),\r\n    objectivesMeta: getObjectiveMeta(),\r\n    mapsMeta: getMapsMeta(),\r\n    // objectives      : objectives2,\r\n    // objective_names : statics.objective_names,\r\n    // objective_types : statics.objective_types,\r\n    // objective_meta  : statics.objective_meta,\r\n    // objective_labels: statics.objective_labels,\r\n    // objective_map   : statics.objective_map,\r\n};\r\n\r\n\r\n\r\n\r\n\r\nfunction getWorldLink(langSlug, world) {\r\n    return ['', langSlug, world[langSlug].slug].join('/');\r\n}\r\n\r\n\r\nfunction enhanceObjectives(objectives) {\r\n    console.log('objectives', objectives);\r\n\r\n    return objectives;\r\n}\r\n\r\n\r\nfunction getMapsMeta() {\r\n    return [\r\n        {id: 38, name: 'Eternal Battlegrounds', abbr: 'EB'},\r\n        {id: 1099, name: 'Red Borderlands', abbr: 'Red'},\r\n        {id: 1102, name: 'Green Borderlands', abbr: 'Grn'},\r\n        {id: 1143, name: 'Blue Borderlands', abbr: 'Blu'},\r\n    ];\r\n}\r\n\r\n\r\nfunction getObjectiveGeo() {\r\n    return {\r\n        eb: [[\r\n            {id: '9', direction: ''},          // stonemist\r\n        ], [\r\n            {id: '1', direction: 'N'},         // overlook\r\n            {id: '17', direction: 'NW'},       // mendons\r\n            {id: '20', direction: 'NE'},       // veloka\r\n            {id: '18', direction: 'SW'},       // anz\r\n            {id: '19', direction: 'SE'},       // ogre\r\n            {id: '6', direction: 'W'},         // speldan\r\n            {id: '5', direction: 'E'},         // pang\r\n        ], [\r\n            {id: '2', direction: 'SE'},        // valley\r\n            {id: '15', direction: 'S'},        // langor\r\n            {id: '22', direction: 'E'},        // bravost\r\n            {id: '16', direction: 'W'},        // quentin\r\n            {id: '21', direction: 'N'},        // durios\r\n            {id: '7', direction: 'SW'},        // dane\r\n            {id: '8', direction: 'NE'},        // umber\r\n        ], [\r\n            {id: '3', direction: 'SW'},        // lowlands\r\n            {id: '11', direction: 'W'},        // aldons\r\n            {id: '13', direction: 'S'},        // jerrifer\r\n            {id: '12', direction: 'N'},        // wildcreek\r\n            {id: '14', direction: 'E'},        // klovan\r\n            {id: '10', direction: 'NW'},       // rogues\r\n            {id: '4', direction: 'SE'},        // golanta\r\n        ]],\r\n        bl2: [[\r\n            {id: '113', direction: 'N'},       // rampart\r\n            {id: '106', direction: 'W'},       // undercroft\r\n            {id: '114', direction: 'E'},       // palace\r\n        ], [\r\n            {id: '102', direction: 'NW'},      // academy\r\n            {id: '104', direction: 'NE'},      // necropolis\r\n            {id: '99', direction: 'N'},        // lab\r\n            {id: '115', direction: 'NW'},      // hideaway\r\n            {id: '109', direction: 'NE'},      // refuge\r\n        ], [\r\n            {id: '110', direction: 'SW'},      // outpost\r\n            {id: '105', direction: 'SE'},      // depot\r\n            {id: '101', direction: 'SW'},      // encamp\r\n            {id: '100', direction: 'SE'},      // farm\r\n            {id: '116', direction: 'S'},       // well\r\n        ]],\r\n    };\r\n}\r\n\r\n\r\nfunction getObjectiveMeta() {\r\n    return _.chain([\r\n        {map: 'eb', group: 1, id: '9', direction: ''},          // stonemist\r\n        {map: 'eb', group: 2, id: '1', direction: 'N'},         // overlook\r\n        {map: 'eb', group: 2, id: '17', direction: 'NW'},       // mendons\r\n        {map: 'eb', group: 2, id: '20', direction: 'NE'},       // veloka\r\n        {map: 'eb', group: 2, id: '18', direction: 'SW'},       // anz\r\n        {map: 'eb', group: 2, id: '19', direction: 'SE'},       // ogre\r\n        {map: 'eb', group: 2, id: '6', direction: 'W'},         // speldan\r\n        {map: 'eb', group: 2, id: '5', direction: 'E'},         // pang\r\n        {map: 'eb', group: 3, id: '2', direction: 'SE'},        // valley\r\n        {map: 'eb', group: 3, id: '15', direction: 'S'},        // langor\r\n        {map: 'eb', group: 3, id: '22', direction: 'E'},        // bravost\r\n        {map: 'eb', group: 3, id: '16', direction: 'W'},        // quentin\r\n        {map: 'eb', group: 3, id: '21', direction: 'N'},        // durios\r\n        {map: 'eb', group: 3, id: '7', direction: 'SW'},        // dane\r\n        {map: 'eb', group: 3, id: '8', direction: 'NE'},        // umber\r\n        {map: 'eb', group: 4, id: '3', direction: 'SW'},        // lowlands\r\n        {map: 'eb', group: 4, id: '11', direction: 'W'},        // aldons\r\n        {map: 'eb', group: 4, id: '13', direction: 'S'},        // jerrifer\r\n        {map: 'eb', group: 4, id: '12', direction: 'N'},        // wildcreek\r\n        {map: 'eb', group: 4, id: '14', direction: 'E'},        // klovan\r\n        {map: 'eb', group: 4, id: '10', direction: 'NW'},       // rogues\r\n        {map: 'eb', group: 4, id: '4', direction: 'SE'},        // golanta\r\n\r\n        {map: 'bl2', group: 1, id: '113', direction: 'N'},       // rampart\r\n        {map: 'bl2', group: 1, id: '106', direction: 'W'},       // undercroft\r\n        {map: 'bl2', group: 1, id: '114', direction: 'E'},       // palace\r\n        {map: 'bl2', group: 2, id: '102', direction: 'NW'},      // academy\r\n        {map: 'bl2', group: 2, id: '104', direction: 'NE'},      // necropolis\r\n        {map: 'bl2', group: 2, id: '99', direction: 'N'},        // lab\r\n        {map: 'bl2', group: 2, id: '115', direction: 'NW'},      // hideaway\r\n        {map: 'bl2', group: 2, id: '109', direction: 'NE'},      // refuge\r\n        {map: 'bl2', group: 3, id: '110', direction: 'SW'},      // outpost\r\n        {map: 'bl2', group: 3, id: '105', direction: 'SE'},      // depot\r\n        {map: 'bl2', group: 3, id: '101', direction: 'SW'},      // encamp\r\n        {map: 'bl2', group: 3, id: '100', direction: 'SE'},      // farm\r\n        {map: 'bl2', group: 3, id: '116', direction: 'S'},       // well\r\n    ])\r\n    .indexBy('id')\r\n    .value();\r\n}","'use strict';\r\n\r\nconst _      = require('lodash');\r\nconst async  = require('async');\r\nconst moment = require('moment');\r\n\r\n\r\n\r\n\r\nconst buffTime     = 5 * 60 * 1000;\r\nconst highliteTime = 10 * 1000;\r\n\r\n\r\n\r\nfunction update(remoteOffset=0, cb=_.noop) {\r\n    const timeLocal = Date.now();\r\n    const timeRemote = timeLocal - remoteOffset;\r\n\r\n    // console.log('update', remoteOffset, timeLocal, timeRemote);\r\n\r\n    let $timers     = $('.timer');\r\n    let $countdowns = $timers.filter('.countdown');\r\n    let $relatives  = $timers.filter('.relative');\r\n\r\n    async.parallel([\r\n        updateRelativeTimers.bind(null, $relatives, remoteOffset),\r\n        updateCountdownTimers.bind(null, $countdowns, timeRemote),\r\n    ], cb);\r\n}\r\n\r\n\r\n\r\nfunction updateRelativeTimers(relatives, offset, cb) {\r\n    async.each(\r\n        relatives,\r\n        updateRelativeTimeNode.bind(null, offset),\r\n        cb\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction updateCountdownTimers(countdowns, timeRemote, cb) {\r\n    async.each(\r\n        countdowns,\r\n        updateCountdownTimerNode.bind(null, timeRemote),\r\n        cb\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction updateRelativeTimeNode(offset, el, next) {\r\n    const $el = $(el);\r\n\r\n    const timestamp         = _.parseInt($el.attr('data-timestamp'));\r\n    const offsetTimestamp   = (timestamp * 1000) + offset;\r\n    const timestampMoment   = moment(offsetTimestamp);\r\n    const timestampRelative = timestampMoment.twitterShort();\r\n\r\n    // console.log(offset, $el, timestamp, offsetTimestamp, timestampMoment);\r\n\r\n    $el.text(timestampRelative);\r\n\r\n    next();\r\n}\r\n\r\n\r\n\r\nfunction updateCountdownTimerNode(timeRemote, el, next) {\r\n    const $el = $(el);\r\n\r\n    const timestamp   = _.parseInt($el.attr('data-timestamp')) * 1000;\r\n    const expires     = timestamp + buffTime;\r\n    const msRemaining = expires - timeRemote;\r\n    const msElapsed   = buffTime - msRemaining;\r\n\r\n\r\n    const isVisible     = expires + highliteTime >= timeRemote;\r\n    const isExpired     = expires < timeRemote;\r\n    const isActive      = !isExpired;\r\n    const isHighlighted = (msRemaining <= Math.abs(highliteTime));\r\n    const isFresh       = (msElapsed <= highliteTime);\r\n\r\n\r\n\r\n\r\n    if (isVisible) {\r\n        const timerText = (isActive) ? moment(msRemaining).format('m:ss') : '0:00';\r\n\r\n        const $objective        = $el.closest('.objective');\r\n        const hasClassHighlight = $objective.hasClass('highlight');\r\n        const hasClassFresh     = $objective.hasClass('fresh');\r\n\r\n        if (isHighlighted && !hasClassHighlight) {\r\n            $objective.addClass('highlight');\r\n        }\r\n        else if (!isHighlighted && hasClassHighlight) {\r\n            $objective.removeClass('highlight');\r\n        }\r\n\r\n        if (isFresh && !hasClassFresh) {\r\n            $objective.addClass('fresh');\r\n        }\r\n        else if (!isFresh && hasClassFresh) {\r\n            $objective.removeClass('fresh');\r\n        }\r\n\r\n        $el.text(timerText)\r\n            .filter('.inactive')\r\n            .addClass('active')\r\n            .removeClass('inactive')\r\n            .end();\r\n\r\n    }\r\n    else {\r\n        $el.filter('.active')\r\n            .addClass('inactive')\r\n            .removeClass('active')\r\n            .removeClass('highlight')\r\n            .end();\r\n    }\r\n\r\n    next();\r\n}\r\n\r\n\r\n\r\n\r\nmodule.exports = {update};\r\n"],"sourceRoot":"/source/"}